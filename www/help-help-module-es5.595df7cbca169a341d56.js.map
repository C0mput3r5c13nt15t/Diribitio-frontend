{"version":3,"sources":["webpack:///src/app/help/help.page.html","webpack:///src/app/help/help.module.ts","webpack:///src/app/help/help.page.ts"],"names":["HelpPage","HelpPageModule","routes","path","component","config","subscriptions","eventName","this","app_config","event_name","instructions","help","forEach","sub","unsubscribe","forChild"],"mappings":"sgBAeM,4BAA8C,QAAwB,Q,6BAAxB,wB,yBAC9C,sBACE,QACF,Q,6BADE,+B,yBAHJ,2BACE,oCACA,4BAGF,Q,4BAJqB,8BACR,8B,yBAKX,4BAA8C,QAAwB,Q,6BAAxB,wB,yBAC9C,sBACE,QACF,Q,6BADE,+B,yBAHJ,2BACE,oCACA,4BAGF,Q,4BAJqB,8BACR,8B,yBAZf,qBACE,0BACE,yBAAgB,QAAuB,OACzC,OACA,mCAMA,mCAMF,Q,uBAdoB,sBAEA,uCAMA,wCCXtB,ICAaA,EDgBAC,EAhBPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCHSJ,EAAN,WAYL,WAAoBK,aAAA,KAAAA,SAXZ,KAAAC,cAAgC,GAKxC,KAAAC,UAAYC,KAAKH,OAAOI,WAAWC,WAInC,KAAAC,aAAeH,KAAKH,OAAOO,KAAKD,a,UAV3B,O,EAAA,G,EAAA,yEAqBHH,KAAKF,cAAcO,QAAQC,YAAG,OAAIA,EAAIC,qB,2BArBnC,K,sCAAMf,GAAQ,Y,uBAARA,EAAQ,qVFTrB,qBACE,wBACE,uBACE,4BACF,OACA,oBAAW,gBAAK,OAClB,OACF,OAEA,wBACE,2BAiBF,Q,MAxByC,mDAOM,yC,4FCexC,IAAMC,EAAN,yB,qBAAMA,I,oDAAAA,IAAc,SARhB,CACP,IACA,IACA,IACA,IAAae,SAASd,O","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/Home\"></ion-back-button>\n    </ion-button>\n    <ion-title>Hilfe</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\" class=\"content\" *ngFor=\"let instruction of instructions\">\n    <ion-card-header>\n      <ion-card-title>{{ instruction.title }}</ion-card-title>\n    </ion-card-header>\n    <ion-card-content *ngIf=\"instruction.title1 || instruction.text1\">\n      <ion-card-subtitle *ngIf=\"instruction.title1\">{{ instruction.title1 }}</ion-card-subtitle>\n      <ion-label *ngIf=\"instruction.text1\" color=\"text\">\n        {{ instruction.text1 }}\n      </ion-label>\n    </ion-card-content>\n    <ion-card-content *ngIf=\"instruction.title2 || instruction.text2\">\n      <ion-card-subtitle *ngIf=\"instruction.title2\">{{ instruction.title2 }}</ion-card-subtitle>\n      <ion-label *ngIf=\"instruction.text2\" color=\"text\">\n        {{ instruction.text2 }}\n      </ion-label>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HelpPage } from './help.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HelpPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HelpPage]\n})\nexport class HelpPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ConfigService } from 'src/app/services/config.service';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.page.html',\n  styleUrls: ['./help.page.scss'],\n})\nexport class HelpPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n  /**\n   * Contains the instructions for using the application\n   */\n  instructions = this.config.help.instructions;\n\n  constructor(private config: ConfigService) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n"]}
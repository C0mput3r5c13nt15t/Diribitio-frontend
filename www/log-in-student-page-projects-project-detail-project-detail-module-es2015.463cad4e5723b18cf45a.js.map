{"version":3,"sources":["webpack:///src/app/log-in/student-page/projects/project-detail/project-detail.page.html","webpack:///src/app/log-in/student-page/projects/project-detail/project-detail.module.ts","webpack:///src/app/log-in/student-page/projects/project-detail/project-detail.page.ts"],"names":["routes","path","component","ProjectDetailPage","activatedRoute","router","projectsService","config","subscriptions","loadedProject","id","authorized","editable","title","image","descr","leader_name","leader_id","messages","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","participants","imageUrl","this","backend_config","projectNoun","app_config","project_noun","eventName","event_name","paramMap","subscribe","has","projectId","Number","get","studentUrl","navigate","getProject","data","forEach","sub","unsubscribe","ProjectDetailPageModule","forChild"],"mappings":"2QAWI,qB,qBAA0E,uD,yBAD5E,qBACE,0BACA,0BACE,2BAA0B,QAAyB,OACrD,OACA,2BACE,2BACE,qBACE,qBAAuB,QAAyB,OAClD,OACA,8BACE,uBAAwB,kBAAM,OAChC,OACA,uBACE,uBAAwB,SAA+B,OACzD,OACA,8BACE,uBAAwB,kBAAM,OAChC,OACA,uBACE,uBAAwB,SAAyB,OACnD,OACA,8BACE,uBAAwB,oBAAQ,OAClC,OACA,uBACE,uBAAwB,SAAgF,OAC1G,OACA,uBACE,uBAAwB,SAAkF,OAC5G,OACA,8BACE,uBAAwB,wBAAY,OACtC,OACA,uBACE,uBAAwB,SAAuE,OACjG,OACA,8BACE,uBAAwB,2BAAe,OACzC,OACA,uBACE,uBAAwB,SAAiF,OAC3G,OACF,OACF,OACF,Q,oBA5CW,4EAEmB,oCAKC,oCAMC,0CAMA,+CAMA,iGAGA,mGAMA,wFAMA,mG,sBAKhC,qBACE,2BACE,sBAAyB,kEAAuD,OAClF,OACF,QCnDF,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCCG,M,MAAMC,EAgDX,YAAoBC,EACAC,EACAC,EACAC,GAHA,KAAAH,iBACA,KAAAC,SACA,KAAAC,kBACA,KAAAC,SAlDZ,KAAAC,cAAgC,GAMxC,KAAAC,cAAyB,CACvBC,GAAI,EACJC,WAAY,EACZC,SAAU,EACVC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,YAAa,GACbC,UAAW,EACXC,SAAU,GACVC,KAAM,EACNC,gBAAiB,CACfC,MAAO,EACPC,QAAS,GAEXC,cAAe,CACbF,MAAO,EACPC,QAAS,GAEXE,iBAAkB,CAChBH,MAAO,EACPC,QAAS,GAEXG,eAAgB,CACdJ,MAAO,EACPC,QAAS,GAEXI,UAAW,EACXC,UAAW,EACXC,iBAAkB,EAClBC,iBAAkB,EAClBC,aAAc,IAGhB,KAAAC,SAAWC,KAAKzB,OAAO0B,eAAeF,SACtC,KAAAG,YAAcF,KAAKzB,OAAO4B,WAAWC,aAIrC,KAAAC,UAAYL,KAAKzB,OAAO4B,WAAWG,WAOnC,WACEN,KAAK5B,eAAemC,SAASC,UAAUD,IAChCA,EAASE,IAAI,cAAiBF,EAASE,IAAI,oBAIhDT,KAAKU,UAAYC,OAAOJ,EAASK,IAAI,cACrCZ,KAAKa,WAAaN,EAASK,IAAI,oBAJ7BZ,KAAK3B,OAAOyC,SAAS,CAAC,OAO1Bd,KAAK1B,gBAAgByC,WAAWf,KAAKU,WAAWF,UAAUQ,IACxDhB,KAAKvB,cAAgBuC,EAAKA,OAO9B,cACEhB,KAAKxB,cAAcyC,QAAQC,GAAOA,EAAIC,gB,6CAxE7BhD,GAAiB,0C,uBAAjBA,EAAiB,4bFb9B,qBACE,wBACE,uBACE,4BACF,OACA,oBAAW,QAAiB,OAC9B,OACF,OAEA,wBACE,6BA8CA,2BAKF,Q,MA1DyC,0EAE1B,4BAKgB,yDA8CgB,2D,8JE3CxC,KDYA,Y,MAAMiD,G,8BAAAA,I,oDAAAA,IAAuB,SARzB,CACP,IACA,IACA,IACA,IAAaC,SAASrD,O,GAInB","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/Schüler/{{ studentUrl }}\"></ion-back-button>\n    </ion-button>\n    <ion-title>{{ projectNoun }}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\" *ngIf=\"!!+loadedProject.authorized === true\" class=\"content\">\n    <ion-img *ngIf=\"loadedProject.image != '' && loadedProject.image != null\" src='{{ imageUrl }}{{ loadedProject.image }}'></ion-img>\n    <ion-card-header>\n      <ion-card-title text-wrap>{{ loadedProject.title }}</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-item-group color=\"background\">\n        <ion-item color=\"items\" lines=\"none\" class=\"descr\">\n          <ion-text color=\"text\">{{ loadedProject.descr }}</ion-text>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Leiter</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">{{ loadedProject.leader_name }}</ion-label>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Kosten</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">{{ loadedProject.cost }}€</ion-label>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Zeitraum</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">1.Tag: {{ loadedProject.first_day_begin }} bis {{ loadedProject.first_day_end }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">2.Tag: {{ loadedProject.second_day_begin }} bis {{ loadedProject.second_day_end }}</ion-label>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Klassenstufe</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">{{ loadedProject.min_grade }}. bis {{ loadedProject.max_grade }}.Klasse</ion-label>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Teinehmeranzahl</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">von {{ loadedProject.min_participants }} bis {{ loadedProject.max_participants }}</ion-label>\n        </ion-item>\n      </ion-item-group>\n    </ion-card-content>\n  </ion-card>\n  <ion-card color=\"background\" class=\"content\" *ngIf=\"!!+loadedProject.authorized == false\">\n    <ion-card-content>\n      <ion-text color=\"danger\">Leider ist dieses Projekt noch nicht zugelassen worden!</ion-text>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectDetailPage } from './project-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProjectDetailPage]\n})\nexport class ProjectDetailPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { Project } from 'src/models/Project.model';\n\n@Component({\n  selector: 'app-project-detail',\n  templateUrl: './project-detail.page.html',\n  styleUrls: ['./project-detail.page.scss'],\n})\n\nexport class ProjectDetailPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  studentUrl: string;\n\n  projectId: number;\n\n  loadedProject: Project = {\n    id: 0,\n    authorized: 1,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_id: 0,\n    messages: [],\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    participants: [],\n  };\n\n  imageUrl = this.config.backend_config.imageUrl;\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ProjectID') || !paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.projectId = Number(paramMap.get('ProjectID'));\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.projectsService.getProject(this.projectId).subscribe(data => {\n      this.loadedProject = data.data;\n    });\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n"]}
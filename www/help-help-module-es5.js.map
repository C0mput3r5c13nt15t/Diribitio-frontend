{"version":3,"sources":["webpack:///src/app/help/help.module.ts","webpack:///src/app/help/help.page.scss","webpack:///src/app/help/help.page.ts","webpack:///src/app/help/help.page.html"],"names":["routes","path","component","HelpPageModule","imports","forChild","declarations","HelpPage","config","subscriptions","eventName","app_config","event_name","instructions","help","forEach","sub","unsubscribe","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAgBaC,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAT1B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,oBAAY,EAAE,CAAC,mDAAD;AAPN,OAAT,CAS0B,GAAdH,cAAc,CAAd;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFI,QAAQ;AAYnB,0BAAoBC,MAApB,EAA2C;AAAA;;AAAvB,eAAAA,MAAA,GAAAA,MAAA;AAXZ,eAAAC,aAAA,GAAgC,EAAhC;AAER;;;;AAGA,eAAAC,SAAA,GAAY,KAAKF,MAAL,CAAYG,UAAZ,CAAuBC,UAAnC;AACA;;;;AAGA,eAAAC,YAAA,GAAe,KAAKL,MAAL,CAAYM,IAAZ,CAAiBD,YAAhC;AAE8C;;AAZ3B;AAAA;AAAA,qCAcR,CACV;AAED;;;;AAjBmB;AAAA;AAAA,wCAoBL;AACZ,iBAAKJ,aAAL,CAAmBM,OAAnB,CAA2B,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,WAAJ,EAAJ;AAAA,aAA9B;AACD;AAtBkB;;AAAA;AAAA,S;;;;gBAPZ;;;;AAOIV,cAAQ,6DALpB,gEAAU;AACTW,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR,kEAFS;;AAAA,OAAV,CAKoB,GAARZ,QAAQ,CAAR;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA","file":"help-help-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HelpPage } from './help.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HelpPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HelpPage]\n})\nexport class HelpPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoZWxwLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ConfigService } from 'src/app/services/config.service';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.page.html',\n  styleUrls: ['./help.page.scss'],\n})\nexport class HelpPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n  /**\n   * Contains the instructions for using the application\n   */\n  instructions = this.config.help.instructions;\n\n  constructor(private config: ConfigService) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Home\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Hilfe</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\" *ngFor=\\\"let instruction of instructions\\\">\\n    <ion-card-header>\\n      <ion-card-title>{{ instruction.title }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"instruction.title1 || instruction.text1\\\">\\n      <ion-card-subtitle *ngIf=\\\"instruction.title1\\\">{{ instruction.title1 }}</ion-card-subtitle>\\n      <ion-label *ngIf=\\\"instruction.text1\\\" color=\\\"text\\\">\\n        {{ instruction.text1 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"instruction.title2 || instruction.text2\\\">\\n      <ion-card-subtitle *ngIf=\\\"instruction.title2\\\">{{ instruction.title2 }}</ion-card-subtitle>\\n      <ion-label *ngIf=\\\"instruction.text2\\\" color=\\\"text\\\">\\n        {{ instruction.text2 }}\\n      </ion-label>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"]}
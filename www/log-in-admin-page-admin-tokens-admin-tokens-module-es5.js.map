{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-tokens/admin-tokens.page.html","webpack:///src/app/log-in/admin-page/admin-tokens/admin-tokens-routing.module.ts","webpack:///src/app/log-in/admin-page/admin-tokens/admin-tokens.module.ts","webpack:///src/app/log-in/admin-page/admin-tokens/admin-tokens.page.scss","webpack:///src/app/log-in/admin-page/admin-tokens/admin-tokens.page.ts"],"names":["routes","path","component","AdminTokensPageRoutingModule","imports","forChild","exports","AdminTokensPageModule","declarations","AdminTokensPage","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,4BAA4B;AAAA;AAAA,O;;AAA5BA,kCAA4B,6DAJxC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIwC,GAA5BH,4BAA4B,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DATjC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,yFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,kEAAD;AAPN,OAAT,CASiC,GAArBD,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFE,eAAe;AAE1B,mCAAc;AAAA;AAAG;;AAFS;AAAA;AAAA,qCAIf;AACT;;;;;;;AASD;AAdyB;;AAAA;AAAA,S;;;;;;AAAfA,qBAAe,6DAL3B,gEAAU;AACTC,gBAAQ,EAAE,kBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,4HAFS;;;;AAAA,OAAV,CAK2B,GAAfF,eAAe,CAAf","file":"log-in-admin-page-admin-tokens-admin-tokens-module-es5.js","sourcesContent":["export default \"<ion-header>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminTokensPage } from './admin-tokens.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminTokensPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminTokensPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminTokensPageRoutingModule } from './admin-tokens-routing.module';\n\nimport { AdminTokensPage } from './admin-tokens.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AdminTokensPageRoutingModule\n  ],\n  declarations: [AdminTokensPage]\n})\nexport class AdminTokensPageModule {}\n","export default \".width160 {\\n  max-width: 160;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL2FkbWluLXBhZ2UvYWRtaW4tdG9rZW5zL2FkbWluLXRva2Vucy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2ctaW4vYWRtaW4tcGFnZS9hZG1pbi10b2tlbnMvYWRtaW4tdG9rZW5zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53aWR0aDE2MCB7XHJcbiAgICBtYXgtd2lkdGg6IDE2MDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-tokens',\n  templateUrl: './admin-tokens.page.html',\n  styleUrls: ['./admin-tokens.page.scss'],\n})\nexport class AdminTokensPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    /*this.text = this.config.get_content('admin-tokens');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n    this.getTokens();\n\n    this.adminsService.update.subscribe(() => this.getTokens());\n  */\n  }\n\n  /*\n  getTokens() {\n    this.adminsService.getAllTokens().subscribe(data => {\n      this.signUpTokens = data.data;\n    });\n  }\n\n  generateTokens() {\n    if (this.count > 0 && this.count <= 1000) {\n      this.adminsService.createTokens(this.count).subscribe(data => {\n        this.signUpTokens.push(data.data);\n        this.alert.alert(data.message);\n        this.adminsService.update.emit();\n      }, error => {\n        this.alert.error('Erstellung der Tokens fehlgeschlagen!', error.error);\n      });\n    } else {\n      this.alertCtrl.create({\n        header: 'Fehler',\n        message: 'Die angegebene Anzahl ist zu groß oder zu klein!',\n        buttons: [{\n          text: 'Ok',\n          role: 'cancel',\n          }]\n        }).then(alertEl => {\n          alertEl.present();\n        });\n    }\n  }\n\n  deleteTokens() {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie wirklich alle Tokens unwiederruflich löschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Löschen',\n        handler: () => {\n          this.adminsService.deleteAllTokens().subscribe(data => {\n            this.signUpTokens = [];\n            this.alert.alert(data.message);\n            this.adminsService.update.emit();\n          }, error => {\n            this.alert.error('Löschen des Tokens fehlgeschlagen!', error.error);\n          });\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n  print() {\n    console.log('Geht nicht');\n  }\n  */\n\n}\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/leader-page/leader-project-generation/leader-project-generation.page.html","webpack:///src/app/log-in/leader-page/leader-project-generation/leader-project-generation.module.ts","webpack:///src/app/log-in/leader-page/leader-project-generation/leader-project-generation.page.ts"],"names":["LeaderProjectGenerationPage","LeaderProjectGenerationPageModule","routes","path","component","activatedRoute","router","projectsService","alert","config","subscriptions","loadedLeader","id","user_name","email","password","project_id","newProject","authorized","editable","title","image","descr","leader_name","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","projectNoun","this","app_config","project_noun","eventName","event_name","text","get_content","paramMap","subscribe","has","leaderUrl","get","navigate","forEach","sub","unsubscribe","event","file","target","files","createProject","data","message","update","emit","error","create","changeFile","forChild"],"mappings":"gjBAcM,2BACE,sBACE,QACF,OACF,Q,kBAFI,8BCPV,ICKaA,EDWAC,EAhBPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCESJ,EAAN,WAyDL,WAAoBK,EACAC,EACAC,EACAC,EACAC,aAJA,KAAAJ,iBACA,KAAAC,SACA,KAAAC,kBACA,KAAAC,QACA,KAAAC,SA5DZ,KAAAC,cAAgC,GAIxC,KAAAC,aAA8B,CAC5BC,GAAI,EACJC,UAAW,GACXC,MAAO,GACPC,SAAU,GACVC,WAAY,GAGd,KAAAC,WAAsB,CACpBL,GAAI,EACJM,WAAY,EACZC,SAAU,EACVC,MAAO,GACPC,MAAO,KACPC,MAAO,GACPC,YAAa,GACbC,UAAW,EACXC,KAAM,EACNC,gBAAiB,CACfC,MAAO,EACPC,QAAS,GAEXC,cAAe,CACbF,MAAO,EACPC,QAAS,GAEXE,iBAAkB,CAChBH,MAAO,EACPC,QAAS,GAEXG,eAAgB,CACdJ,MAAO,EACPC,QAAS,GAEXI,UAAW,EACXC,UAAW,EACXC,iBAAkB,EAClBC,iBAAkB,EAClBC,SAAU,GACVC,aAAc,IAOhB,KAAAC,YAAcC,KAAK9B,OAAO+B,WAAWC,aAIrC,KAAAC,UAAYH,KAAK9B,OAAO+B,WAAWG,W,UAvD9B,O,EAAA,G,EAAA,kCA+DK,WACRJ,KAAKK,KAAOL,KAAK9B,OAAOoC,YAAY,6BAEpCN,KAAKlC,eAAeyC,SAASC,UAAUD,YAChCA,EAASE,IAAI,cAIlBT,EAAKU,UAAYH,EAASI,IAAI,cAH5BX,EAAKjC,OAAO6C,SAAS,CAAC,SApEvB,oCA+EHZ,KAAK7B,cAAc0C,QAAQC,YAAG,OAAIA,EAAIC,kBA/EnC,iCAkFMC,GACT,IAAMC,EAAOD,EAAME,OAAOC,MAAM,GAE5BF,IACFjB,KAAKlB,MAAQmC,KAtFZ,+BA0FG,WACNjB,KAAKhC,gBAAgBoD,cAAc,UAAWpB,KAAKtB,WAAYsB,KAAKlB,OAAO0B,UAAUa,YACnFrB,EAAK/B,MAAMA,MAAMoD,EAAKC,SACtBtB,EAAKjC,OAAO6C,SAAS,CAACZ,EAAKG,UAAY,IAAMH,EAAKD,YAAc,UAAYC,EAAKU,YACjFV,EAAKhC,gBAAgBuD,OAAOC,QAC3BC,YACDzB,EAAK/B,MAAMwD,MAAM,2CAA4CA,EAAMA,c,2BAhGlE,K,sCAAMhE,GAA2B,oD,uBAA3BA,EAA2B,uhE,GAAA,MFdxC,qBACI,wBACE,uBACE,4BACF,OACA,oBAAW,QAA2B,OACxC,OACF,OAEA,wBACE,qBACE,0BACE,yBAAgB,SAA2B,OAC7C,OACA,oCAKA,4BACE,oBAAwC,kCAAY,EAAAiE,WAClD,8BACE,uBAAwB,SAAsE,OAChG,OACA,sBACE,wBAAsD,qEAAiD,OACzG,OACA,8BACE,uBAAwB,SAAqB,OAC/C,OACA,sBACE,wBAAoD,+DAAoD,OAC1G,OACA,8BACE,uBAAwB,SAA6B,OACvD,OACA,sBACE,2BAAuD,+DAAwC,OACjG,OACA,8BACE,uBAAwB,qBAAS,OACnC,OACA,sBACE,wBAA4C,iCAAU,EAAAC,WAAA,KAAoD,OAC5G,OACA,8BACE,uBAAwB,kBAAM,OAChC,OACA,sBACE,wBAAoD,8DAAqD,OAAY,mBACvH,OACA,8BACE,uBAAwB,iBAAK,OAC/B,OACA,sBACE,uBAAwB,eAAG,OAAY,wBAAsF,yEAAqD,OACpL,OACA,sBACE,uBAAwB,eAAG,OAAY,wBAAmF,uEAAmD,OAC/K,OACA,8BACE,uBAAwB,iBAAK,OAC/B,OACA,sBACE,uBAAwB,eAAG,OAAY,wBAAuF,0EAAsD,OACtL,OACA,sBACE,uBAAwB,eAAG,OAAY,wBAAoF,wEAAoD,OACjL,OACA,8BACE,uBAAwB,yBAAa,OACvC,OACA,uBACE,uBAAwB,eAAG,OAC3B,yBAAkF,mEAChF,gCAA6B,aAAC,OAC9B,gCAA6B,aAAC,OAC9B,gCAA6B,aAAC,OAC9B,gCAA6B,aAAC,OAC9B,gCAA6B,aAAC,OAC9B,gCAA8B,cAAE,OAChC,gCAA8B,cAAE,OAClC,OACF,OACA,uBACE,uBAAwB,eAAG,OAC3B,yBAAkF,mEAChF,gCAA6B,aAAC,OAC9B,gCAA6B,aAAC,OAC9B,gCAA6B,aAAC,OAC9B,gCAA6B,aAAC,OAC9B,gCAA6B,aAAC,OAC9B,gCAA8B,cAAE,OAChC,iCAA8B,eAAE,OAClC,OACF,OACA,+BACE,wBAAwB,4BAAe,OACzC,OACA,uBACE,wBAAwB,gBAAG,OAAY,yBAA+D,0EAAiE,OACzK,OACA,uBACE,wBAAwB,gBAAG,OAAY,yBAA+D,0EAAiE,OACzK,OACA,mBACE,0BAA0G,UAA2B,OACvI,OACF,OACF,OACF,OACF,Q,oBA5GyC,sFAE1B,4CAOO,4CAEA,4BAQY,uFAG8B,iDAG9B,sCAG4B,2CAG5B,8CAG+B,2CAYH,2CAMyE,qDAGH,mDAMI,sDAGH,oDAOtG,oDAAqC,kCAYrC,qDAAqC,kCAc4C,uDAGA,sDAGzE,mCAA6E,8C,iJCjF/G,IAAMjE,EAAN,yB,qBAAMA,I,oDAAAA,IAAiC,SARnC,CACP,IACA,IACA,IACA,IAAakE,SAASjE,O","file":"x","sourcesContent":["<ion-header>\n    <ion-toolbar color=\"menu\">\n      <ion-button color=\"buttons\" slot=\"start\">\n        <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/{{ projectNoun}}leiter/{{ leaderUrl }}\"></ion-back-button>\n      </ion-button>\n      <ion-title>{{ projectNoun }} erstellen</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  \n  <ion-content color=\"background\">\n    <ion-card color=\"background\"class=\"content\">\n      <ion-card-header>\n        <ion-card-title>{{ projectNoun }} erstellen</ion-card-title>\n      </ion-card-header>\n      <ion-card-content *ngIf=\"text\">\n        <ion-label color=\"text\">\n          {{ text }}\n        </ion-label>\n      </ion-card-content>\n      <ion-card-content>\n        <form #form=\"ngForm\" name=\"ProjectForm\" (ngSubmit)=\"create()\">\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">Sie sind {{ projectNoun }}leiter. Welcher Namen soll angezeigt werden?</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-input color=\"text\" required name=\"ProjectLeader\" [(ngModel)]=\"newProject.leader_name\" type=\"text\"></ion-input>\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">{{ projectNoun }}name</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-input color=\"text\" required name=\"ProjectName\" [(ngModel)]=\"newProject.title\" required type=\"text\"></ion-input>\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">{{ projectNoun }}beschreibung</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-textarea required type=\"text\" name=\"ProjectDescr\" [(ngModel)]=\"newProject.descr\" rows=\"7\"></ion-textarea>\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">Titelbild</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-input color=\"text\" name=\"ProjectImage\" (change)=\"changeFile($event)\" accept=\".png, .jpg\" type=\"file\"></ion-input>\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">Kosten</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-input color=\"text\" required name=\"ProjectCost\" [(ngModel)]=\"newProject.cost\" required type=\"number\"></ion-input>â‚¬\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">1.Tag</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-label color=\"text\">von</ion-label><ion-input display-format=\"hh:mm\" color=\"text\" required name=\"ProjectFirstTimeBeginn\" [(ngModel)]=\"newProject.first_day_begin\" type=\"time\"></ion-input>\n          </ion-item> \n          <ion-item color=\"items\">\n            <ion-label color=\"text\">bis</ion-label><ion-input display-format=\"hh:mm\" color=\"text\" required name=\"ProjectFirstTimeEnd\" [(ngModel)]=\"newProject.first_day_end\" type=\"time\"></ion-input>\n          </ion-item> \n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">2.Tag</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-label color=\"text\">von</ion-label><ion-input display-format=\"hh:mm\" color=\"text\" required name=\"ProjectSecondTimeBeginn\" [(ngModel)]=\"newProject.second_day_begin\" type=\"time\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-label color=\"text\">bis</ion-label><ion-input display-format=\"hh:mm\" color=\"text\" required name=\"ProjectSecondTimeEnd\" [(ngModel)]=\"newProject.second_day_end\" type=\"time\"></ion-input>\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">Klassenstufen</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\" lines=\"none\">\n            <ion-label color=\"text\">von</ion-label>\n            <ion-select required [selectedText]=\"newProject.min_grade\" name=\"ProjectMinClass\" [(ngModel)]=\"newProject.min_grade\" cancelText=\"Abbrechen\" doneText=\"Ok\">\n              <ion-select-option value=\"5\">5</ion-select-option>\n              <ion-select-option value=\"6\">6</ion-select-option>\n              <ion-select-option value=\"7\">7</ion-select-option>\n              <ion-select-option value=\"8\">8</ion-select-option>\n              <ion-select-option value=\"9\">9</ion-select-option>\n              <ion-select-option value=\"10\">10</ion-select-option>\n              <ion-select-option value=\"11\">11</ion-select-option>\n            </ion-select>\n          </ion-item>\n          <ion-item color=\"items\" lines=\"none\">\n            <ion-label color=\"text\">bis</ion-label>\n            <ion-select required [selectedText]=\"newProject.max_grade\" name=\"ProjectMaxClass\" [(ngModel)]=\"newProject.max_grade\" cancelText=\"Abbrechen\" doneText=\"Ok\">\n              <ion-select-option value=\"5\">5</ion-select-option>\n              <ion-select-option value=\"6\">6</ion-select-option>\n              <ion-select-option value=\"7\">7</ion-select-option>\n              <ion-select-option value=\"8\">8</ion-select-option>\n              <ion-select-option value=\"9\">9</ion-select-option>\n              <ion-select-option value=\"10\">10</ion-select-option>\n              <ion-select-option value=\"11\">11</ion-select-option>\n            </ion-select>\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">Teinehmeranzahl</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-label color=\"text\">von</ion-label><ion-input color=\"text\" required name=\"ProjectMinParticipants\" [(ngModel)]=\"newProject.min_participants\" required type=\"number\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-label color=\"text\">bis</ion-label><ion-input color=\"text\" required name=\"ProjectMaxParticipants\" [(ngModel)]=\"newProject.max_participants\" required type=\"number\"></ion-input>\n          </ion-item>\n          <div class=\"ion-padding\">\n            <ion-button color=\"buttons\"  [disabled]=\"form.invalid\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">{{ projectNoun }} erstellen</ion-button>\n          </div>\n        </form>\n      </ion-card-content>\n    </ion-card>\n  </ion-content>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaderProjectGenerationPage } from './leader-project-generation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaderProjectGenerationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LeaderProjectGenerationPage]\n})\nexport class LeaderProjectGenerationPageModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Projectleader } from 'src/models/Projectleader';\nimport { Project } from 'src/models/Project.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-project-generation',\n  templateUrl: './leader-project-generation.page.html',\n  styleUrls: ['./leader-project-generation.page.scss'],\n})\nexport class LeaderProjectGenerationPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  leaderUrl: string;\n\n  loadedLeader: Projectleader = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    project_id: 0,\n  };\n\n  newProject: Project = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: null,\n    descr: '',\n    leader_name: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: []\n  };\n\n  image: any;\n\n  text: string;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private alert: AlertService,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('leader-project-generation');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('LeaderName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.leaderUrl = paramMap.get('LeaderName');\n    });\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  changeFile(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      this.image = file;\n    }\n  }\n\n  create() {\n    this.projectsService.createProject('leaders', this.newProject, this.image).subscribe(data => {\n      this.alert.alert(data.message);\n      this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + this.leaderUrl]);\n      this.projectsService.update.emit();\n    }, error => {\n      this.alert.error('Erstellung des Projektes fehlgeschlagen!', error.error);\n    });\n  }\n\n}\n"]}
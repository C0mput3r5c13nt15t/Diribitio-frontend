{"version":3,"sources":["./src/app/settings/settings.module.ts","./src/app/settings/settings.page.scss","./src/app/settings/settings.page.ts","./src/app/settings/settings.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;IAWW,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACzB/B;AAAe,6GAA8C,uHAAuH,E;;;;;;;;;;;;;;;;;;;;;;;ACAvH;AACO;AACJ;IAQnD,YAAY,SAAZ,YAAY;IASvB,YAAoB,QAAyB,EACzB,MAAqB;QADrB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,WAAM,GAAN,MAAM,CAAe;QATjC,kBAAa,GAAmB,EAAE,CAAC;QAE3C,eAAU,GAAG,MAAM,CAAC;QACpB,UAAK,GAAG,MAAM,CAAC;IAM8B,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAE7D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAClC,MAAM,kBAAkB,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;CAEF;;YA1CQ,iFAAe;YACf,6EAAa;;AAQT,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAiCxB;AAjCwB;;;;;;;;;;;;;ACVzB;AAAe,qfAAsb,SAAS,gpBAAgpB,SAAS,mwBAAmwB,E","file":"settings-settings-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXR0aW5ncy5wYWdlLnNjc3MifQ== */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  background = 'dark';\n  color = 'blue';\n  text1: string;\n  text2: string;\n\n\n  constructor(private settings: SettingsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text1 = this.config.get_content_by_index('settings', 0);\n    this.text2 = this.config.get_content_by_index('settings', 1);\n\n    const theme = this.settings.theme;\n    const colorandbackground = theme.split('-', 2);\n    this.background = colorandbackground[0];\n    this.color = colorandbackground[1];\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  change() {\n    this.settings.change_theme(this.background, this.color);\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Einstellungen</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>Theme ändern</ion-card-title>\\n      <ion-card-subtitle>Hintergrund</ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-label color=\\\"text\\\">\\n        {{ text1 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-segment mode=\\\"md\\\"color=\\\"buttons\\\" [(ngModel)]=\\\"background\\\" (ionChange)=\\\"change()\\\">\\n        <ion-segment-button value=\\\"dark\\\">\\n          <ion-label color=\\\"text\\\">Dunkel</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"light\\\">\\n          <ion-label color=\\\"text\\\">Hell</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </ion-card-content>\\n    <ion-card-header>\\n      <ion-card-subtitle>Vordergrund</ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-label color=\\\"text\\\">\\n        {{ text2 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-segment mode=\\\"md\\\" color=\\\"buttons\\\" [(ngModel)]=\\\"color\\\" (ionChange)=\\\"change()\\\">\\n        <ion-segment-button value=\\\"blue\\\">\\n          <ion-label color=\\\"text\\\">Blau</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"pink\\\">\\n          <ion-label color=\\\"text\\\">Pink</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"yellow\\\">\\n          <ion-label color=\\\"text\\\">Gelb</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"green\\\">\\n          <ion-label color=\\\"text\\\">Grün</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}
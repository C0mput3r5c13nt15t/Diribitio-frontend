{"version":3,"sources":["webpack:///src/app/log-in/forgot-password/forgot-password.page.html","webpack:///src/app/log-in/forgot-password/forgot-password.module.ts","webpack:///src/app/log-in/forgot-password/forgot-password.page.ts"],"names":["routes","path","component","ForgotPasswordPage","config","auth","subscriptions","formType","forgotPasswordData","email","user_type","projectNoun","this","app_config","project_noun","eventName","event_name","text","get_content","forEach","sub","unsubscribe","forgotPassword","sendPasswordEmail","ForgotPasswordPageModule","forChild"],"mappings":"2QAcM,2BACE,uBACE,QACF,OACF,Q,oBAFI,8BCPV,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCFG,M,MAAMC,EAkBX,YAAoBC,EACAC,GADA,KAAAD,SACA,KAAAC,OAlBZ,KAAAC,cAAgC,GAExC,KAAAC,SAAW,WAEX,KAAAC,mBAAqB,CACnBC,MAAO,GACPC,UAAW,YAKb,KAAAC,YAAcC,KAAKR,OAAOS,WAAWC,aAIrC,KAAAC,UAAYH,KAAKR,OAAOS,WAAWG,WAKnC,WACEJ,KAAKK,KAAOL,KAAKR,OAAOc,YAAY,mBAMtC,cACEN,KAAKN,cAAca,QAAQC,GAAOA,EAAIC,eAGxC,oBACET,KAAKJ,mBAAmBE,UAAYE,KAAKL,SACzCK,KAAKP,KAAKiB,eAAeV,KAAKJ,qB,6CAlCrBL,GAAkB,sB,uBAAlBA,EAAkB,s2B,GAAA,MFV/B,qBACE,wBACE,uBACE,4BACF,OACA,oBAAW,8BAAmB,OAChC,OACF,OAEA,wBACI,qBACE,0BACE,yBAAgB,8BAAkB,OACpC,OACA,oCAKA,4BACE,yBAA6B,uDAC3B,gCACE,qBAAW,sBAAO,OACpB,OACA,gCACE,qBAAW,SAAuB,OACpC,OACA,gCACE,qBAAW,iBAAK,OAClB,OACF,OAEA,sBAAsC,kCAAY,EAAAoB,sBAChD,sBACE,2BACE,0BAAgB,sBAAO,OACzB,OACA,4BACE,oBACE,uBACE,wBAAwB,uEAAmG,OAC7H,OACA,kBACE,yBAAuI,yBAAa,OACtJ,OACF,OACF,OACF,OACF,OAEA,sBAAqC,kCAAY,EAAAA,sBAC/C,sBACE,2BACE,0BAAgB,SAAuB,OACzC,OACA,4BACE,oBACE,uBACE,wBAAwB,uEAA+F,OACzH,OACA,kBACE,yBAAsI,yBAAa,OACrJ,OACF,OACF,OACF,OACF,OAEA,sBAAoC,kCAAY,EAAAA,sBAC9C,sBACE,2BACE,0BAAgB,iBAAK,OACvB,OACA,4BACE,oBACE,uBACE,wBAAwB,uEAA+F,OACzH,OACA,kBACE,yBAAqI,yBAAa,OACpJ,OACF,OACF,OACF,OACF,OACF,OACF,OACJ,Q,4CApFyC,wDAWjB,4BAMa,mCAKd,wCAOyE,8CAQtD,mDAGI,mCAOgD,6CAGhE,wCAKY,mDAGI,mCAO+C,4CAQnD,mDAGI,qC,uIErEvC,KDeA,Y,MAAMC,G,8BAAAA,I,oDAAAA,IAAwB,SAR1B,CACP,IACA,IACA,IACA,IAAaC,SAASzB,O,GAInB","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/Anmeldung\"></ion-back-button>\n    </ion-button>\n    <ion-title>Passwort vergessen?</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n    <ion-card color=\"background\" class=\"content\">\n      <ion-card-header>\n        <ion-card-title>Passwort vergessen</ion-card-title>\n      </ion-card-header>\n      <ion-card-content *ngIf=\"text\">\n        <ion-label color=\"text\">\n          {{ text }}\n        </ion-label>\n      </ion-card-content>\n      <ion-card-content>\n        <ion-segment color=\"buttons\" [(ngModel)]=\"formType\">\n          <ion-segment-button value=\"students\">\n            <ion-label>Schüler</ion-label>\n          </ion-segment-button>\n          <ion-segment-button value=\"leaders\">\n            <ion-label>{{ projectNoun }}leiter</ion-label>\n          </ion-segment-button>\n          <ion-segment-button value=\"admins\">\n            <ion-label>Admin</ion-label>\n          </ion-segment-button>\n        </ion-segment>\n\n        <form #forgotPasswordStudent=\"ngForm\" (ngSubmit)=\"sendPasswordEmail()\" class=\"content\"  [hidden]=\"formType != 'students'\">\n          <ion-card color=\"background\">\n            <ion-card-header>\n              <ion-card-title>Schüler</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-list>\n                <ion-item color=\"items\">\n                  <ion-input color=\"text\" [(ngModel)]=\"forgotPasswordData.email\" name=\"user_name\" placeholder=\"E-Mail\" required type=\"email\"></ion-input>\n                </ion-item>\n                <div class=\"ion-padding\">\n                  <ion-button color=\"buttons\" [disabled]=\"forgotPasswordStudent.invalid\" name=\"LogIn\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">E-Mail senden</ion-button>\n                </div>\n              </ion-list>\n            </ion-card-content>\n          </ion-card>\n        </form>\n\n        <form #forgotPasswordLeader=\"ngForm\" (ngSubmit)=\"sendPasswordEmail()\" class=\"content\" [hidden]=\"formType != 'leaders'\">\n          <ion-card color=\"background\">\n            <ion-card-header>\n              <ion-card-title>{{ projectNoun }}leiter</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-list>\n                <ion-item color=\"items\">\n                  <ion-input color=\"text\" [(ngModel)]=\"forgotPasswordData.email\" name=\"email\" placeholder=\"E-Mail\" required type=\"email\"></ion-input>\n                </ion-item>\n                <div class=\"ion-padding\">\n                  <ion-button color=\"buttons\" [disabled]=\"forgotPasswordLeader.invalid\" name=\"LogIn\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">E-Mail senden</ion-button>\n                </div>\n              </ion-list>\n            </ion-card-content>\n          </ion-card>\n        </form>\n\n        <form #forgotPasswordAdmin=\"ngForm\" (ngSubmit)=\"sendPasswordEmail()\" class=\"content\" [hidden]=\"formType != 'admins'\">\n          <ion-card color=\"background\">\n            <ion-card-header>\n              <ion-card-title>Admin</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-list>\n                <ion-item color=\"items\">\n                  <ion-input color=\"text\" [(ngModel)]=\"forgotPasswordData.email\" name=\"email\" placeholder=\"E-Mail\" required type=\"email\"></ion-input>\n                </ion-item>\n                <div class=\"ion-padding\">\n                  <ion-button color=\"buttons\" [disabled]=\"forgotPasswordAdmin.invalid\" name=\"LogIn\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">E-Mail senden</ion-button>\n                </div>\n              </ion-list>\n            </ion-card-content>\n          </ion-card>\n        </form>\n      </ion-card-content>\n    </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotPasswordPage } from './forgot-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ForgotPasswordPage]\n})\nexport class ForgotPasswordPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.page.html',\n  styleUrls: ['./forgot-password.page.scss'],\n})\nexport class ForgotPasswordPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  formType = 'students';\n\n  forgotPasswordData = {\n    email: '',\n    user_type: 'students'\n  };\n\n  text: string;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private config: ConfigService,\n              private auth: AuthenticationService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('forgot-password');\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  sendPasswordEmail() {\n    this.forgotPasswordData.user_type = this.formType;\n    this.auth.forgotPassword(this.forgotPasswordData);\n  }\n\n}\n"]}
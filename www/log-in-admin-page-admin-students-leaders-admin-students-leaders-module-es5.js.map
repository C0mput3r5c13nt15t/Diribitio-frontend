{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.html","webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders-routing.module.ts","webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.module.ts","webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.scss","webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.ts"],"names":["routes","path","component","AdminStudentsLeadersPageRoutingModule","imports","forChild","exports","AdminStudentsLeadersPageModule","declarations","AdminStudentsLeadersPage","participantsService","scheduleService","leadersService","projectsService","activatedRoute","alertCtrl","adminsService","alert","config","loadedProjects","loadedParticipantsNames","sortedProjects","loadedStudents","loadedLeaders","sorted","schedule","id","begin","control","registration","sort_students","exchange","projects","end","page","lastPage","projectNoun","app_config","project_noun","projectsNoun","projects_noun","eventName","event_name","text1","get_content_by_index","text2","text3","text4","loading","paramMap","subscribe","adminUrl","get","getSchedule","data","getProjects","getParticipantsNames","currentDate","requestSortingProposal","update","getStudents","getLeaders","keyCode","search","searchValue","searchStudents","getAllSearchedStudents","forEach","student","stu","first_name","last_name","grade","letter","first_friend","first_friend_name","second_friend","second_friend_name","third_friend","third_friend_name","first_wish","first_wish_title","second_wish","second_wish_title","third_wish","third_wish_title","project_id","project_title","role","getParticipantName","getProjectTitle","push","getAllProjects","getAllParticipantNames","getAllStudents","meta","last_page","getAllLeaders","leader","lea","user_name","email","projectID","searchedProject","filter","project","title","participantID","searchedParticipant","participant","leaderID","create","header","message","buttons","text","handler","deleteLeader","then","alertEl","present","createSortingProposal","error","event","detail","value","oldProjectId","newProjectId","oldProject","index","participants","indexOf","splice","newProject","newProposal","editSortingProposal","applySortingProposal","selector","template"],"mappings":"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","file":"log-in-admin-page-admin-students-leaders-admin-students-leaders-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Schüler und {{ projectNoun }}leiter verwalten</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Schüler\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text1\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text1 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n        <ion-button slot=\\\"start\\\" color=\\\"buttons\\\" (click)=\\\"refresh()\\\"><ion-icon color=\\\"text\\\" name=\\\"refresh\\\"></ion-icon></ion-button>\\n        <ion-button slot=\\\"start\\\" color=\\\"buttons\\\" (click)=\\\"search()\\\"><ion-icon color=\\\"text\\\" name=\\\"search\\\"></ion-icon></ion-button>\\n        <ion-input color=\\\"text\\\" (keypress)=\\\"eventHandler($event.keyCode)\\\" placeholder=\\\"Vorname Nachname Klasse\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchValue\\\" name=\\\"Serch\\\"></ion-input>\\n      </ion-item>\\n    </ion-card-content>\\n    <ion-card-content color=\\\"background\\\">\\n      <ion-grid *ngIf=\\\"searchStudents\\\">\\n        <ion-row>\\n          <ion-col><h2>Schüler</h2></ion-col>\\n          <ion-col><h2>Wünsche</h2></ion-col>\\n          <ion-col><h2>Freunde</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"background\\\" *ngFor=\\\"let participant of searchStudents\\\" id=\\\"participant.ID\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}\\n            </ion-label>\\n            <ion-label color=\\\"text\\\" *ngIf=\\\"participant.role == 2\\\">(Leiter)</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_wish_title }}<br>\\n              {{ participant.second_wish_title }}<br>\\n              {{ participant.third_wish_title }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col color=\\\"text\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_friend_name }}<br>\\n              {{ participant.second_friend_name }}<br>\\n              {{ participant.third_friend_name }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a *ngIf=\\\"participant.project_id != 0 && participant.project_title != 'fehlerhaftes Projekt'\\\" routerLink='../../{{ projectsNoun }}/{{participant.project_id}}'>{{ participant.project_title }}</a>\\n            <a *ngIf=\\\"participant.project_id == 0\\\">kein {{ projectNoun }}</a>\\n            <a *ngIf=\\\"participant.project_title == 'fehlerhaftes Projekt'\\\">{{ projectNoun }} ist fehlerhaft</a>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid *ngIf=\\\"!searchStudents\\\">\\n        <ion-row>\\n          <ion-col><h2>Schüler</h2></ion-col>\\n          <ion-col><h2>Wünsche</h2></ion-col>\\n          <ion-col><h2>Freunde</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"background\\\" *ngFor=\\\"let participant of loadedStudents\\\" id=\\\"participant.ID\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}\\n            </ion-label>\\n            <ion-label color=\\\"text\\\" *ngIf=\\\"participant.role == 2\\\"> ({{ projectNoun }}leiter)</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_wish_title }}<br>\\n              {{ participant.second_wish_title }}<br>\\n              {{ participant.third_wish_title }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col color=\\\"text\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_friend_name }}<br>\\n              {{ participant.second_friend_name }}<br>\\n              {{ participant.third_friend_name }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a *ngIf=\\\"participant.project_id != 0 && participant.project_title != 'fehlerhaftes Projekt'\\\" routerLink='../../{{ projectsNoun }}/{{participant.project_id}}'>{{ participant.project_title }}</a>\\n            <a *ngIf=\\\"participant.project_id == 0\\\">kein {{ projectNoun }}</a>\\n            <a *ngIf=\\\"participant.project_title == 'fehlerhaftes Projekt'\\\">{{ projectNoun }} ist fehlerhaft</a>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <div *ngIf=\\\"page < lastPage && !searchStudents\\\" class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" (click)=\\\"getMoreStudents()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\">Weiter Schüler laden</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        {{ projectNoun }}leiter\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text2\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text2 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col><h2>{{ projectNoun }}leiter</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let leader of loadedLeaders\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">{{ leader.user_name }}</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a color=\\\"buttons\\\" *ngIf=\\\"leader.project_id != 0\\\" routerLink='../../{{ projectsNoun }}/{{ leader.project_id }}'>{{ leader.project_title }}</a>\\n            <ion-icon color=\\\"danger\\\" name=\\\"trash\\\" *ngIf=\\\"leader.project_id == 0\\\" (click)=\\\"deleteLeader(leader.id)\\\"></ion-icon>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n  \\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Schüler sortieren\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text3\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text3 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <!-- [disabled]=\\\"!(currentDate > schedule.sort_students && currentDate <= schedule.exchange)\\\" -->\\n      <div class=\\\"ion-padding\\\" *ngIf=\\\"!sorted\\\">\\n        <ion-button color=\\\"buttons\\\" (click)=\\\"createSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Sortiervorschlag erstellen</ion-button>\\n      </div>\\n      <div class=\\\"ion-padding\\\" *ngIf=\\\"sorted\\\">\\n        <ion-button color=\\\"buttons\\\" (click)=\\\"createSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Neuen Sortiervorschlag erstellen</ion-button>\\n      </div>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" (click)=\\\"requestSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >aktuellen Sortiervorschlag ansehen</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\" *ngIf=\\\"sortedProjects.length\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Vorschlag für Einsortierung der Schüler\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text4\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text4 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-card color=\\\"background\\\" *ngFor=\\\"let project of sortedProjects\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            <ion-label *ngIf=\\\"project.participants.length < project.min_participants\\\" color=\\\"danger\\\">{{ project.title }} (Zu wenige Teilnehmer)</ion-label>\\n            <ion-label *ngIf=\\\"project.participants.length > project.max_participants\\\" color=\\\"danger\\\">{{ project.title }} (Zu viele Teilnehmer)</ion-label>\\n            <ion-label *ngIf=\\\"project.participants.length >= project.min_participants && project.participants.length <= project.max_participants\\\">{{ project.title }}</ion-label>\\n          </ion-card-title>\\n          <ion-card-subtitle>\\n            <ion-label color=\\\"text\\\">{{ project.min_grade }}. bis {{ project.max_grade }}.Klasse | {{ project.min_participants }} bis {{ project.max_participants }} Teilnehmer | {{ project.leader_name }}</ion-label>\\n          </ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <div *ngIf=\\\"project.leader && project.leader_type === 'App\\\\\\\\Student'\\\">\\n            <ion-item color=\\\"items\\\">\\n              <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ project.leader.first_name }} {{ project.leader.last_name }} {{ project.leader.grade }}{{ project.leader.letter }}</ion-text>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"project.assistant_student_leaders.length\\\">\\n            <ion-item color=\\\"items\\\" *ngFor=\\\"let assistant of project.assistant_student_leaders\\\">\\n              <ion-text color=\\\"text\\\"><ion-icon name=\\\"star-half\\\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"project.participants.length\\\">\\n            <ion-item color=\\\"items\\\" *ngFor=\\\"let participant of project.participants\\\">\\n              <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n              <ion-select slot=\\\"end\\\" name=\\\"ParticipantProject\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\" (ionChange)=\\\"moveParticipant($event)\\\"> \\n                <ion-select-option *ngFor=\\\"let newProject of sortedProjects\\\" [value]=\\\"[participant, project.id, newProject.id]\\\">{{ newProject.title }} ({{ newProject.min_grade }}. - {{ newProject.max_grade }}.Klasse)</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n          </div>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-card-content>\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button color=\\\"buttons\\\" (click)=\\\"editSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Vorschlag ändern</ion-button>\\n    </div>\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button color=\\\"buttons\\\" [disabled]=\\\"!sorted\\\" (click)=\\\"applySortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Vorschlag anwenden</ion-button>\\n    </div>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminStudentsLeadersPage } from './admin-students-leaders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminStudentsLeadersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminStudentsLeadersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminStudentsLeadersPageRoutingModule } from './admin-students-leaders-routing.module';\n\nimport { AdminStudentsLeadersPage } from './admin-students-leaders.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AdminStudentsLeadersPageRoutingModule\n  ],\n  declarations: [AdminStudentsLeadersPage]\n})\nexport class AdminStudentsLeadersPageModule {}\n","export default \".height {\\n  min-height: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL2FkbWluLXBhZ2UvYWRtaW4tc3R1ZGVudHMtbGVhZGVycy9hZG1pbi1zdHVkZW50cy1sZWFkZXJzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2ctaW4vYWRtaW4tcGFnZS9hZG1pbi1zdHVkZW50cy1sZWFkZXJzL2FkbWluLXN0dWRlbnRzLWxlYWRlcnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlaWdodCB7XHJcbiAgICBtaW4taGVpZ2h0OiA1MDBweDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ParticipantsService } from 'src/app/participants.service';\nimport { LeadersService } from 'src/app/leaders.service';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { AdminsService } from 'src/app/admins.service';\nimport { AlertService } from 'src/app/alert.service';\nimport { ConfigService } from 'src/app/config.service';\nimport { Projekt } from 'src/assets/models/Projekt.model';\nimport { ScheduleService } from 'src/app/schedule.service';\nimport { Time } from '@angular/common';\n\nexport interface ModifiedSchüler {\n  id: number;\n  first_name: string;\n  last_name: string;\n  grade: number;\n  letter: string;\n  exchange_requests?: any[];\n  first_friend: number;\n  first_friend_name: string;\n  second_friend: number;\n  second_friend_name: string;\n  third_friend: number;\n  third_friend_name: string;\n  first_wish: number;\n  first_wish_title: string;\n  second_wish: number;\n  second_wish_title: string;\n  third_wish: number;\n  third_wish_title: string;\n  project_id: number;\n  project_title?: string;\n  role: number;\n}\n\nexport interface ModifiedProjektleiter {\n  id: number;\n  user_name: string;\n  email: string;\n  project_id: number;\n  project_title?: string;\n  email_verified_at?: Time;\n}\n\n@Component({\n  selector: 'app-admin-students-leaders',\n  templateUrl: './admin-students-leaders.page.html',\n  styleUrls: ['./admin-students-leaders.page.scss'],\n})\nexport class AdminStudentsLeadersPage implements OnInit {\n  adminUrl: string;\n\n  loadedProjects: Projekt[] = [];\n  loadedParticipantsNames: any[] = [];\n\n  sortedProjects: Projekt[] = [];\n  searchStudents: ModifiedSchüler[];\n  loadedStudents: ModifiedSchüler[] = [];\n  loadedLeaders: ModifiedProjektleiter[] = [];\n\n  sorted = false;\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  currentDate: any;\n\n  searchValue: string;\n  text1: string;\n  text2: string;\n  text3: string;\n  text4: string;\n\n  page = 1;\n  lastPage = 1;\n\n  projectNoun = this.config.app_config.project_noun;\n  projectsNoun = this.config.app_config.projects_noun;\n  eventName = this.config.app_config.event_name;\n\n  constructor(private participantsService: ParticipantsService,\n              private scheduleService: ScheduleService,\n              private leadersService: LeadersService,\n              private projectsService: ProjectsService,\n              private activatedRoute: ActivatedRoute,\n              private alertCtrl: AlertController,\n              private adminsService: AdminsService,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text1 = this.config.get_content_by_index('admin-students-leaders', 0);\n    this.text2 = this.config.get_content_by_index('admin-students-leaders', 1);\n    this.text3 = this.config.get_content_by_index('admin-students-leaders', 2);\n    this.text4 = this.config.get_content_by_index('admin-students-leaders', 3);\n    this.alert.loading(2000);\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getProjects();\n    this.getParticipantsNames();\n\n    if (this.currentDate > this.schedule.sort_students && this.currentDate <= this.schedule.exchange) {\n      this.requestSortingProposal();\n    }\n\n    this.participantsService.update.subscribe(() => this.getStudents());\n    this.leadersService.update.subscribe(() => this.getLeaders());\n    this.projectsService.update.subscribe(() => this.getProjects());\n  }\n\n  ionViewWillEnter() {\n    this.alert.loading(2000);\n  }\n\n  eventHandler(keyCode) {\n    if (keyCode === 13) {\n      this.search();\n    }\n  }\n\n  search() {\n    // tslint:disable-next-line: triple-equals\n    if (this.searchValue == '') {\n      this.searchStudents = null;\n      return;\n    }\n    this.participantsService.getAllSearchedStudents(this.searchValue).subscribe(data => {\n      this.searchStudents = [];\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        this.searchStudents.push(stu);\n      });\n    });\n  }\n\n  refresh() {\n    this.page = 1;\n    this.getProjects();\n    this.getParticipantsNames();\n    this.getStudents();\n    this.getLeaders();\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.loadedProjects = data.data;\n      this.getStudents();\n      this.getLeaders();\n    });\n  }\n\n  getParticipantsNames() {\n    this.participantsService.getAllParticipantNames().subscribe(data => {\n      this.loadedParticipantsNames = data.data;\n    });\n  }\n\n  getStudents() {\n    this.loadedStudents = [];\n    this.participantsService.getAllStudents(this.page).subscribe(data => {\n      this.lastPage = data.meta.last_page;\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        // await this.getWishNames(stu.first_wish, stu.second_wish, stu.third_wish, stu);\n\n        // await this.getFriendsNames(stu.first_friend, stu.second_friend, stu.third_friend, stu);\n\n        this.loadedStudents.push(stu);\n      });\n    });\n  }\n\n  getMoreStudents() {\n    this.alert.loading(2000);\n    this.page += 1;\n    this.participantsService.getAllStudents(this.page).subscribe(data => {\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        this.loadedStudents.push(stu);\n      });\n    });\n  }\n\n  getLeaders() {\n    this.loadedLeaders = [];\n    this.leadersService.getAllLeaders().subscribe(data => {\n      data.data.forEach(leader => {\n        const lea: ModifiedProjektleiter = {\n          id: 0,\n          user_name: '',\n          email: '',\n          project_id: 0,\n          project_title: 'kein Projekt'\n        };\n\n        lea.id = leader.id;\n        lea.user_name = leader.user_name;\n        lea.email = leader.email;\n        lea.project_id = leader.project_id;\n\n        lea.project_title = this.getProjectTitle(lea.project_id);\n\n        this.loadedLeaders.push(lea);\n      });\n    });\n  }\n\n  getProjectTitle(projectID) {\n    if (projectID !== 0 && this.loadedProjects) {\n      const searchedProject = this.loadedProjects.filter(\n        project => project.id === projectID);\n      if (searchedProject[0] != null) {\n        return searchedProject[0].title;\n      } else {\n        return 'fehlerhaftes Projekt';\n      }\n    } else {\n      return 'kein Projekt';\n    }\n  }\n\n  getParticipantName(participantID) {\n    if (participantID !== 0 && this.loadedParticipantsNames) {\n      const searchedParticipant = this.loadedParticipantsNames.filter(\n        participant => participant.id === participantID);\n      if (searchedParticipant[0] != null) {\n        return searchedParticipant[0].first_name + ' ' + searchedParticipant[0].last_name;\n      } else {\n        return 'fehlerhafter Freund';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  deleteLeader(leaderID) {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie diesen Projektleiter wirklich unwiederruflich löschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Löschen',\n        handler: () => {\n          this.leadersService.deleteLeader(leaderID);\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n  createSortingProposal() {\n    this.adminsService.createSortingProposal().subscribe(data => {\n      this.alert.alert(data.message);\n      this.sorted = true;\n      this.sortedProjects = data.data;\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alert.error('Sortierung der Schüler fehlgeschlagen.', error.error);\n    });\n  }\n\n  requestSortingProposal() {\n    this.adminsService.requestSortingProposal().subscribe(data => {\n      this.sortedProjects = data.data;\n      this.sorted = true;\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alert.error('Es konnte kein Sortiervorschlag gefunden werden.', error.error);\n    });\n  }\n\n  moveParticipant(event) {\n    const participant = event.detail.value[0];\n    const oldProjectId = event.detail.value[1];\n    const newProjectId = event.detail.value[2];\n\n    if (oldProjectId !== 0 && this.sortedProjects) {\n      const searchedProject = this.sortedProjects.filter(\n        project => project.id === oldProjectId);\n      if (searchedProject[0] != null) {\n        const oldProject = searchedProject[0];\n\n        const index = oldProject.participants.indexOf(participant);\n        if (index !== -1) {\n          oldProject.participants.splice(index, 1);\n        }\n      }\n    }\n\n    if (newProjectId !== 0 && this.sortedProjects) {\n      const searchedProject = this.sortedProjects.filter(\n        project => project.id === newProjectId);\n      if (searchedProject[0] != null) {\n        const newProject = searchedProject[0];\n\n        if (participant) {\n          newProject.participants.push(participant);\n        }\n      }\n    }\n  }\n\n  editSortingProposal() {\n    const newProposal = {\n      data: this.sortedProjects\n    };\n    this.adminsService.editSortingProposal(newProposal);\n    // this.requestSortingProposal();\n    this.sorted = true;\n  }\n\n  applySortingProposal() {\n    if (this.sorted === true) {\n      this.alertCtrl.create({\n        header: 'Sind sie sicher?',\n        message: 'Wollen sie die vorgeschlagene Konfiguration wirklich anwenden?',\n        buttons: [{\n          text: 'Abbrechen',\n          role: 'cancel'\n        }, {\n          text: 'Anwenden',\n          handler: () => {\n            this.adminsService.applySortingProposal();\n            this.sorted = false;\n          }\n        }]\n      }).then(alertEl => {\n        alertEl.present();\n      });\n    }\n  }\n\n}\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.html","webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.ts","webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.module.ts","webpack:///src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.scss"],"names":["AdminStudentsLeadersPage","studentsService","scheduleService","leadersService","projectsService","activatedRoute","alertCtrl","adminsService","alert","config","subscriptions","loadedProjects","loadedParticipantsNames","sortedProjects","loadedStudents","loadedLeaders","sorted","schedule","id","begin","Date","control","registration","sort_students","exchange","projects","end","text1","get_content_by_index","text2","text3","text4","page","lastPage","projectNoun","app_config","project_noun","projectsNoun","projects_noun","eventName","event_name","currentDate","paramMap","subscribe","adminUrl","get","load","push","update","forEach","sub","unsubscribe","loading","getSchedule","data","getProjects","getAllStudentNames","requestSortingProposal","keyCode","search","searchValue","searchStudents","getAllSearchedStudents","student","stu","user_name","first_name","last_name","grade","letter","first_friend","first_friend_name","second_friend","second_friend_name","third_friend","third_friend_name","first_wish","first_wish_title","second_wish","second_wish_title","third_wish","third_wish_title","project_id","project_title","role","getParticipantName","getProjectTitle","getAllProjects","getStudents","getLeaders","getAllStudents","meta","last_page","getAllLeaders","leader","lea","email","projectID","searchedProject","filter","project","title","participantID","searchedParticipant","participant","leaderID","create","header","message","buttons","text","handler","deleteLeader","then","alertEl","present","createSortingProposal","error","event","detail","value","oldProjectId","newProjectId","oldProject","index","participants","indexOf","splice","newProject","newProposal","editSortingProposal","applySortingProposal","refresh","selector","template","routes","path","component","AdminStudentsLeadersPageModule","imports","forChild","declarations"],"mappings":"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","file":"log-in-admin-page-admin-students-leaders-admin-students-leaders-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Schüler und {{ projectNoun }}leiter verwalten</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>Schüler</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text1\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text1 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n        <ion-button slot=\\\"start\\\" color=\\\"buttons\\\" (click)=\\\"refresh()\\\"><ion-icon color=\\\"text\\\" name=\\\"refresh\\\"></ion-icon></ion-button>\\n        <ion-button slot=\\\"start\\\" color=\\\"buttons\\\" (click)=\\\"search()\\\"><ion-icon color=\\\"text\\\" name=\\\"search\\\"></ion-icon></ion-button>\\n        <ion-input color=\\\"text\\\" (keypress)=\\\"eventHandler($event.keyCode)\\\" placeholder=\\\"Vorname Nachname Klasse\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchValue\\\" name=\\\"Serch\\\"></ion-input>\\n      </ion-item>\\n    </ion-card-content>\\n    <ion-card-content color=\\\"background\\\">\\n      <ion-grid *ngIf=\\\"searchStudents\\\">\\n        <ion-row>\\n          <ion-col><h2>Benutzername</h2></ion-col>\\n          <ion-col><h2>Schüler</h2></ion-col>\\n          <ion-col><h2>Wünsche</h2></ion-col>\\n          <ion-col><h2>Freunde</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"background\\\" *ngFor=\\\"let participant of searchStudents\\\" id=\\\"participant.ID\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.user_name }}\\n            </ion-label>\\n            <ion-label color=\\\"text\\\" *ngIf=\\\"participant.role == 2\\\">(Leiter)</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}\\n            </ion-label>\\n            <ion-label color=\\\"text\\\" *ngIf=\\\"participant.role == 2\\\">(Leiter)</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_wish_title }}<br>\\n              {{ participant.second_wish_title }}<br>\\n              {{ participant.third_wish_title }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col color=\\\"text\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_friend_name }}<br>\\n              {{ participant.second_friend_name }}<br>\\n              {{ participant.third_friend_name }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a *ngIf=\\\"participant.project_id != 0 && participant.project_title != 'fehlerhaftes Projekt'\\\" routerLink='../../{{ projectsNoun }}/{{participant.project_id}}'>{{ participant.project_title }}</a>\\n            <a *ngIf=\\\"participant.project_id == 0\\\">kein {{ projectNoun }}</a>\\n            <a *ngIf=\\\"participant.project_title == 'fehlerhaftes Projekt'\\\">{{ projectNoun }} ist fehlerhaft</a>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid *ngIf=\\\"!searchStudents\\\">\\n        <ion-row>\\n          <ion-col><h2>Benutzername</h2></ion-col>\\n          <ion-col><h2>Schüler</h2></ion-col>\\n          <ion-col><h2>Wünsche</h2></ion-col>\\n          <ion-col><h2>Freunde</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"background\\\" *ngFor=\\\"let participant of loadedStudents\\\" id=\\\"participant.ID\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.user_name }}\\n            </ion-label>\\n            <ion-label color=\\\"text\\\" *ngIf=\\\"participant.role == 2\\\">(Leiter)</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}\\n            </ion-label>\\n            <ion-label color=\\\"text\\\" *ngIf=\\\"participant.role == 2\\\"> ({{ projectNoun }}leiter)</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_wish_title }}<br>\\n              {{ participant.second_wish_title }}<br>\\n              {{ participant.third_wish_title }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col color=\\\"text\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_friend_name }}<br>\\n              {{ participant.second_friend_name }}<br>\\n              {{ participant.third_friend_name }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a *ngIf=\\\"participant.project_id != 0 && participant.project_title != 'fehlerhaftes Projekt'\\\" routerLink='../../{{ projectsNoun }}/{{participant.project_id}}'>{{ participant.project_title }}</a>\\n            <a *ngIf=\\\"participant.project_id == 0\\\">kein {{ projectNoun }}</a>\\n            <a *ngIf=\\\"participant.project_title == 'fehlerhaftes Projekt'\\\">{{ projectNoun }} ist fehlerhaft</a>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <div *ngIf=\\\"page < lastPage && !searchStudents\\\" class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" (click)=\\\"getMoreStudents()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\">Weiter Schüler laden</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        {{ projectNoun }}leiter\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text2\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text2 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col><h2>{{ projectNoun }}leiter</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let leader of loadedLeaders\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">{{ leader.user_name }}</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a color=\\\"buttons\\\" *ngIf=\\\"leader.project_id != 0\\\" routerLink='../../{{ projectsNoun }}/{{ leader.project_id }}'>{{ leader.project_title }}</a>\\n            <ion-icon color=\\\"danger\\\" name=\\\"trash\\\" *ngIf=\\\"leader.project_id == 0\\\" (click)=\\\"deleteLeader(leader.id)\\\"></ion-icon>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n  \\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Schüler sortieren\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text3\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text3 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <div class=\\\"ion-padding\\\" *ngIf=\\\"!sorted\\\">\\n        <ion-button color=\\\"buttons\\\" [disabled]=\\\"!(currentDate > schedule.sort_students && currentDate <= schedule.exchange)\\\" (click)=\\\"createSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Sortiervorschlag erstellen</ion-button>\\n      </div>\\n      <div class=\\\"ion-padding\\\" *ngIf=\\\"sorted\\\">\\n        <ion-button color=\\\"buttons\\\" [disabled]=\\\"!(currentDate > schedule.sort_students && currentDate <= schedule.exchange)\\\" (click)=\\\"createSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Neuen Sortiervorschlag erstellen</ion-button>\\n      </div>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" [disabled]=\\\"!(currentDate > schedule.sort_students && currentDate <= schedule.exchange)\\\" (click)=\\\"requestSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >aktuellen Sortiervorschlag ansehen</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\" *ngIf=\\\"sortedProjects.length\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Vorschlag für Einsortierung der Schüler\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text4\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text4 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-card color=\\\"background\\\" *ngFor=\\\"let project of sortedProjects\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            <ion-label *ngIf=\\\"project.participants.length < project.min_participants\\\" color=\\\"danger\\\">{{ project.title }} (Zu wenige Teilnehmer)</ion-label>\\n            <ion-label *ngIf=\\\"project.participants.length > project.max_participants\\\" color=\\\"danger\\\">{{ project.title }} (Zu viele Teilnehmer)</ion-label>\\n            <ion-label *ngIf=\\\"project.participants.length >= project.min_participants && project.participants.length <= project.max_participants\\\">{{ project.title }}</ion-label>\\n          </ion-card-title>\\n          <ion-card-subtitle>\\n            <ion-label color=\\\"text\\\">{{ project.min_grade }}. bis {{ project.max_grade }}.Klasse | {{ project.min_participants }} bis {{ project.max_participants }} Teilnehmer | {{ project.leader_name }}</ion-label>\\n          </ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <div *ngIf=\\\"project.leader && project.leader_type === 'App\\\\\\\\Student'\\\">\\n            <ion-item color=\\\"items\\\">\\n              <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ project.leader.first_name }} {{ project.leader.last_name }} {{ project.leader.grade }}{{ project.leader.letter }}</ion-text>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"project.assistant_student_leaders.length\\\">\\n            <ion-item color=\\\"items\\\" *ngFor=\\\"let assistant of project.assistant_student_leaders\\\">\\n              <ion-text color=\\\"text\\\"><ion-icon name=\\\"star-half\\\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"project.participants.length\\\">\\n            <ion-item color=\\\"items\\\" *ngFor=\\\"let participant of project.participants\\\">\\n              <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n              <ion-select slot=\\\"end\\\" name=\\\"ParticipantProject\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\" (ionChange)=\\\"moveParticipant($event)\\\"> \\n                <ion-select-option *ngFor=\\\"let newProject of sortedProjects\\\" [value]=\\\"[participant, project.id, newProject.id]\\\">{{ newProject.title }} ({{ newProject.min_grade }}. - {{ newProject.max_grade }}.Klasse)</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n          </div>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-card-content>\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button color=\\\"buttons\\\" (click)=\\\"editSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Änderungen speichern</ion-button>\\n    </div>\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button color=\\\"buttons\\\" [disabled]=\\\"!sorted\\\" (click)=\\\"applySortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Vorschlag anwenden</ion-button>\\n    </div>\\n  </ion-card>\\n</ion-content>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { LeadersService } from 'src/app/services/leaders.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Project } from 'src/models/Project.model';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Time } from '@angular/common';\nimport { formatDate } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nexport interface ModifiedSchüler {\n  id: number;\n  user_name: string;\n  first_name: string;\n  last_name: string;\n  grade: number;\n  letter: string;\n  exchange_requests?: any[];\n  first_friend: number;\n  first_friend_name: string;\n  second_friend: number;\n  second_friend_name: string;\n  third_friend: number;\n  third_friend_name: string;\n  first_wish: number;\n  first_wish_title: string;\n  second_wish: number;\n  second_wish_title: string;\n  third_wish: number;\n  third_wish_title: string;\n  project_id: number;\n  project_title?: string;\n  role: number;\n}\n\nexport interface ModifiedProjektleiter {\n  id: number;\n  user_name: string;\n  email: string;\n  project_id: number;\n  project_title?: string;\n  email_verified_at?: Time;\n}\n\n@Component({\n  selector: 'app-admin-students-leaders',\n  templateUrl: './admin-students-leaders.page.html',\n  styleUrls: ['./admin-students-leaders.page.scss'],\n})\nexport class AdminStudentsLeadersPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n\n  loadedProjects: Project[] = [];\n  loadedParticipantsNames: any[] = [];\n\n  sortedProjects: Project[] = [];\n  searchStudents: ModifiedSchüler[];\n  loadedStudents: ModifiedSchüler[] = [];\n  loadedLeaders: ModifiedProjektleiter[] = [];\n\n  sorted = false;\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  searchValue: string;\n  text1 = this.config.get_content_by_index('admin-students-leaders', 0);\n  text2 = this.config.get_content_by_index('admin-students-leaders', 1);\n  text3 = this.config.get_content_by_index('admin-students-leaders', 2);\n  text4 = this.config.get_content_by_index('admin-students-leaders', 3);\n\n  page = 1;\n  lastPage = 1;\n\n  projectNoun = this.config.app_config.project_noun;\n  projectsNoun = this.config.app_config.projects_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private studentsService: StudentsService,\n              private scheduleService: ScheduleService,\n              private leadersService: LeadersService,\n              private projectsService: ProjectsService,\n              private activatedRoute: ActivatedRoute,\n              private alertCtrl: AlertController,\n              private adminsService: AdminsService,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n\n    this.load();\n\n    this.subscriptions.push(\n      this.studentsService.update.subscribe(() => this.load()),\n      this.leadersService.update.subscribe(() => this.load()),\n      this.projectsService.update.subscribe(() => this.load())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  load() {\n    this.alert.loading(2000);\n\n    this.page = 1;\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getProjects();\n    this.getAllStudentNames();\n\n    if (this.currentDate > this.schedule.sort_students && this.currentDate <= this.schedule.exchange) {\n      this.requestSortingProposal();\n    }\n  }\n\n  eventHandler(keyCode) {\n    if (keyCode === 13) {\n      this.search();\n    }\n  }\n\n  search() {\n    // tslint:disable-next-line: triple-equals\n    if (this.searchValue == '') {\n      this.searchStudents = null;\n      return;\n    }\n    this.studentsService.getAllSearchedStudents(this.searchValue).subscribe(data => {\n      this.searchStudents = [];\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          user_name: '',\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.user_name = student.user_name;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        this.searchStudents.push(stu);\n      });\n    });\n  }\n\n  refresh() {\n    this.page = 1;\n    this.getProjects();\n    this.getAllStudentNames();\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.loadedProjects = data.data;\n      this.getStudents();\n      this.getLeaders();\n    });\n  }\n\n  getAllStudentNames() {\n    this.studentsService.getAllStudentNames().subscribe(data => {\n      this.loadedParticipantsNames = data.data;\n    });\n  }\n\n  getStudents() {\n    this.loadedStudents = [];\n    this.studentsService.getAllStudents(this.page).subscribe(data => {\n      this.lastPage = data.meta.last_page;\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          user_name: '',\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.user_name = student.user_name;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        // await this.getWishNames(stu.first_wish, stu.second_wish, stu.third_wish, stu);\n\n        // await this.getFriendsNames(stu.first_friend, stu.second_friend, stu.third_friend, stu);\n\n        this.loadedStudents.push(stu);\n      });\n    });\n  }\n\n  getMoreStudents() {\n    this.alert.loading(2000);\n    this.page += 1;\n    this.studentsService.getAllStudents(this.page).subscribe(data => {\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          user_name: '',\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.user_name = student.user_name;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        this.loadedStudents.push(stu);\n      });\n    });\n  }\n\n  getLeaders() {\n    this.loadedLeaders = [];\n    this.leadersService.getAllLeaders().subscribe(data => {\n      data.data.forEach(leader => {\n        const lea: ModifiedProjektleiter = {\n          id: 0,\n          user_name: '',\n          email: '',\n          project_id: 0,\n          project_title: 'kein Projekt'\n        };\n\n        lea.id = leader.id;\n        lea.user_name = leader.user_name;\n        lea.email = leader.email;\n        lea.project_id = leader.project_id;\n\n        lea.project_title = this.getProjectTitle(lea.project_id);\n\n        this.loadedLeaders.push(lea);\n      });\n    });\n  }\n\n  getProjectTitle(projectID) {\n    if (projectID !== 0 && this.loadedProjects) {\n      const searchedProject = this.loadedProjects.filter(\n        project => project.id === projectID);\n      if (searchedProject[0] != null) {\n        return searchedProject[0].title;\n      } else {\n        return 'fehlerhaftes Projekt';\n      }\n    } else {\n      return 'kein Projekt';\n    }\n  }\n\n  getParticipantName(participantID) {\n    if (participantID !== 0 && this.loadedParticipantsNames) {\n      const searchedParticipant = this.loadedParticipantsNames.filter(\n        participant => participant.id === participantID);\n      if (searchedParticipant[0] != null) {\n        return searchedParticipant[0].first_name + ' ' + searchedParticipant[0].last_name;\n      } else {\n        return 'fehlerhafter Freund';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  deleteLeader(leaderID) {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie diesen Projektleiter wirklich unwiederruflich löschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Löschen',\n        handler: () => {\n          this.leadersService.deleteLeader(leaderID);\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n  createSortingProposal() {\n    this.adminsService.createSortingProposal().subscribe(data => {\n      this.alert.alert(data.message);\n      this.sorted = true;\n      this.sortedProjects = data.data;\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alert.error('Sortierung der Schüler fehlgeschlagen.', error.error);\n    });\n  }\n\n  requestSortingProposal() {\n    this.adminsService.requestSortingProposal().subscribe(data => {\n      this.sortedProjects = data.data;\n      this.sorted = true;\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alert.error('Es konnte kein Sortiervorschlag gefunden werden.', error.error);\n    });\n  }\n\n  moveParticipant(event) {\n    const participant = event.detail.value[0];\n    const oldProjectId = event.detail.value[1];\n    const newProjectId = event.detail.value[2];\n\n    if (oldProjectId !== 0 && this.sortedProjects) {\n      const searchedProject = this.sortedProjects.filter(\n        project => project.id === oldProjectId);\n      if (searchedProject[0] != null) {\n        const oldProject = searchedProject[0];\n\n        const index = oldProject.participants.indexOf(participant);\n        if (index !== -1) {\n          oldProject.participants.splice(index, 1);\n        }\n      }\n    }\n\n    if (newProjectId !== 0 && this.sortedProjects) {\n      const searchedProject = this.sortedProjects.filter(\n        project => project.id === newProjectId);\n      if (searchedProject[0] != null) {\n        const newProject = searchedProject[0];\n\n        if (participant) {\n          newProject.participants.push(participant);\n        }\n      }\n    }\n  }\n\n  editSortingProposal() {\n    const newProposal = {\n      data: this.sortedProjects\n    };\n    this.adminsService.editSortingProposal(newProposal);\n    // this.requestSortingProposal();\n    this.sorted = true;\n  }\n\n  applySortingProposal() {\n    if (this.sorted === true) {\n      this.alertCtrl.create({\n        header: 'Sind sie sicher?',\n        message: 'Wollen sie die vorgeschlagene Konfiguration wirklich anwenden?',\n        buttons: [{\n          text: 'Abbrechen',\n          role: 'cancel'\n        }, {\n          text: 'Anwenden',\n          handler: () => {\n            this.adminsService.applySortingProposal();\n            this.sorted = false;\n            this.refresh();\n          }\n        }]\n      }).then(alertEl => {\n        alertEl.present();\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminStudentsLeadersPage } from './admin-students-leaders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminStudentsLeadersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminStudentsLeadersPage]\n})\nexport class AdminStudentsLeadersPageModule {}\n","export default \".height {\\n  min-height: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcYWRtaW4tc3R1ZGVudHMtbGVhZGVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtBQUNKIiwiZmlsZSI6ImFkbWluLXN0dWRlbnRzLWxlYWRlcnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlaWdodCB7XHJcbiAgICBtaW4taGVpZ2h0OiA1MDBweDtcclxufSJdfQ== */\";"]}
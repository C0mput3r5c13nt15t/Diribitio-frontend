{"version":3,"sources":["webpack:///src/app/log-in/student-page/exchange-request/exchange-request.module.ts","webpack:///src/app/log-in/student-page/exchange-request/exchange-request.page.html","webpack:///src/app/log-in/student-page/exchange-request/exchange-request.page.scss","webpack:///src/app/log-in/student-page/exchange-request/exchange-request.page.ts"],"names":["routes","path","component","ExchangeRequestPageModule","imports","forChild","declarations","ExchangeRequestPage","activatedRoute","router","studentsService","exchangesService","alertCtrl","alert","config","subscriptions","loadedStudent","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","exchangePartner","eventName","app_config","event_name","text","get_content","studentAlreadyExchangeError","get_error","paramMap","subscribe","has","navigate","studentUrl","get","getStudent","push","update","forEach","sub","unsubscribe","getSelfStudent","data","getStudentID","createExchange","response","message","emit","error","create","header","buttons","then","alertEl","present","handler","deleteSelfExchange","selector","template"],"mappings":"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","file":"log-in-student-page-exchange-request-exchange-request-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExchangeRequestPage } from './exchange-request.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExchangeRequestPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ExchangeRequestPage]\n})\nexport class ExchangeRequestPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/SchÃ¼ler/{{ studentUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Tausch anfragen</ion-title>\\n    <ion-button color=\\\"buttons\\\" [disabled]=\\\"loadedStudent.exchange_id == 0\\\" slot=\\\"end\\\" (click)=\\\"delete()\\\"  color=\\\"danger\\\"><ion-icon name=\\\"trash\\\"></ion-icon></ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"loadedStudent.exchange_id == 0\\\" class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-card-title>Tauschanfragen senden</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <form #form=\\\"ngForm\\\" name=\\\"ExchangeForm\\\" (ngSubmit)=\\\"submit()\\\">\\n        <ion-list>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-card-title>Du</ion-card-title>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-input color=\\\"text\\\" readonly [(ngModel)]=\\\"loadedStudent.first_name\\\" name=\\\"ExchangeFirstFirstName\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-input color=\\\"text\\\" readonly [(ngModel)]=\\\"loadedStudent.last_name\\\" name=\\\"ExchangeFirstLastName\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-input color=\\\"text\\\" readonly name=\\\"ExchangeFirstGradeAndClass\\\">{{ loadedStudent.grade }}{{ loadedStudent.letter }}</ion-input>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-title *ngIf=\\\"exchangePartner.id === 0\\\">Dein Freund </ion-title>\\n            <ion-title *ngIf=\\\"exchangePartner.id != 0\\\">\\n                {{ exchangePartner.first_name }} {{ exchangePartner.last_name }} {{ exchangePartner.grade }}{{ exchangePartner.letter }}\\n            </ion-title>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" type=\\\"text\\\" required placeholder=\\\"Vorname\\\" [(ngModel)]=\\\"exchangePartner.first_name\\\" name=\\\"ExchangeSecondFirstName\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" type=\\\"text\\\" required placeholder=\\\"Nachname\\\" [(ngModel)]=\\\"exchangePartner.last_name\\\" name=\\\"ExchangeSecondLastName\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n            <ion-select [selectedText]=\\\"exchangePartner.grade\\\" required name=\\\"ParticipantGrade\\\" cancelText=\\\"Abbrechen\\\" [(ngModel)]=\\\"exchangePartner.grade\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\">\\n              <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n              <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n              <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n              <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n              <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n              <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n              <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-radio-group required name=\\\"ParticipantClass\\\" [(ngModel)]=\\\"exchangePartner.letter\\\">\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">A </ion-label>\\n                <ion-radio  color=\\\"text\\\" slot=\\\"start\\\" value=\\\"a\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">B </ion-label>\\n                <ion-radio  color=\\\"text\\\" slot=\\\"start\\\" value=\\\"b\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">C </ion-label>\\n                <ion-radio  color=\\\"text\\\" slot=\\\"start\\\" value=\\\"c\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">D </ion-label>\\n                <ion-radio  color=\\\"text\\\" slot=\\\"start\\\" value=\\\"d\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-item>\\n        </ion-list>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Tauschanfrage senden</ion-button>\\n        </div>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"loadedStudent.exchange_id != 0\\\" class=\\\"content\\\">\\n    <ion-card-content>\\n      <ion-text color=\\\"danger\\\">{{ studentAlreadyExchangeError }}</ion-text>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleGNoYW5nZS1yZXF1ZXN0LnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { Student } from 'src/models/Student.model';\nimport { ExchangesService } from 'src/app/services/exchanges.service';\nimport { AlertController } from '@ionic/angular';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-exchange-request',\n  templateUrl: './exchange-request.page.html',\n  styleUrls: ['./exchange-request.page.scss'],\n})\nexport class ExchangeRequestPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  studentUrl: string;\n\n  loadedStudent: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n\n  exchangePartner: any = {\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n  };\n\n  text: string;\n\n  studentAlreadyExchangeError: string;\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private studentsService: StudentsService,\n              private exchangesService: ExchangesService,\n              private alertCtrl: AlertController,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('user-exchange-request');\n\n    this.studentAlreadyExchangeError = this.config.get_error('student-already_exchange');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getStudent();\n\n    this.subscriptions.push(\n      this.studentsService.update.subscribe(() => this.getStudent()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getStudent() {\n    this.studentsService.getSelfStudent().subscribe(data => {\n      this.loadedStudent = data.data;\n    });\n  }\n\n  submit() {\n    this.studentsService.getStudentID(this.exchangePartner).subscribe(data => {\n      // tslint:disable-next-line:disable-next-line: triple-equals\n      if (data.id != 0 && this.loadedStudent.exchange_id == 0) {\n        this.exchangesService.createExchange(data.id).subscribe(response => {\n          this.alert.alert(response.message);\n          this.router.navigate([this.eventName + '/SchÃ¼ler/' + this.studentUrl]);\n          this.exchangesService.update.emit();\n        }, error => {\n          this.alert.error('Erstellung des Tausches fehlgeschlagen!', error.error);\n        });\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Du must zuerst einen validen Tauschpartner auswÃ¤hlen!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    });\n  }\n\n  delete() {\n    this.alertCtrl.create({\n      header: 'Bist du sicher?',\n      message: 'Willst du wirklich deine Tauschanfrage lÃ¶schen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'LÃ¶schen',\n        handler: () => {\n          this.exchangesService.deleteSelfExchange().subscribe(data => {\n            this.alert.alert(data.message);\n            this.router.navigate([this.eventName + '/SchÃ¼ler/' + this.studentUrl]);\n            this.exchangesService.update.emit();\n          }, error => {\n            this.alert.error('LÃ¶schung der Tauschanfrage fehlgeschlagen!', error.error);\n          });\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n"]}
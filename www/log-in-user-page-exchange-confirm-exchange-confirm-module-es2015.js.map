{"version":3,"sources":["./src/app/log-in/user-page/exchange-confirm/exchange-confirm.page.html","./src/app/log-in/user-page/exchange-confirm/exchange-confirm.module.ts","./src/app/log-in/user-page/exchange-confirm/exchange-confirm.page.scss","./src/app/log-in/user-page/exchange-confirm/exchange-confirm.page.ts"],"names":[],"mappings":"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","file":"log-in-user-page-exchange-confirm-exchange-confirm-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Schüler/{{ participantUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Tauschanfrage bestätigen</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"loadedUser.exchange_id == 0\\\" class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-title>Tauschanfragen annehmen</ion-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-label color=\\\"text\\\">\\n        {{ content }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item color=\\\"items\\\" *ngFor=\\\"let exchange of loadedUser.exchange_requests\\\">\\n          <ion-button color=\\\"buttons\\\" slot=\\\"start\\\" (click)=\\\"confirm(exchange.id)\\\"><ion-icon name=\\\"checkmark\\\"></ion-icon></ion-button>\\n          {{ exchange.sender.first_name }} {{ exchange.sender.last_name }} {{ exchange.sender.grade }}{{ exchange.sender.letter }} aus {{ exchange.sender.project_title }}\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"loadedUser.exchange_id != 0\\\" class=\\\"content\\\">\\n    <ion-card-content>\\n      <label color=\\\"danger\\\">{{ studentAlreadyExchangeError }}</label>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExchangeConfirmPage } from './exchange-confirm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExchangeConfirmPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ExchangeConfirmPage]\n})\nexport class ExchangeConfirmPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi91c2VyLXBhZ2UvZXhjaGFuZ2UtY29uZmlybS9leGNoYW5nZS1jb25maXJtLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ExchangesService } from 'src/app/exchanges.service';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Schüler } from 'src/assets/models/Schüler.model';\nimport { ConfigService } from 'src/app/config.service';\nimport { AlertService } from 'src/app/alert.service';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-exchange-confirm',\n  templateUrl: './exchange-confirm.page.html',\n  styleUrls: ['./exchange-confirm.page.scss'],\n})\nexport class ExchangeConfirmPage implements OnInit {\n  participantUrl: string;\n\n  loadedUser: Schüler = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n\n  currentDate: any;\n\n  content: string;\n\n  studentAlreadyExchangeError: string;\n\n  eventName = this.config.app_config.event_name;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private exchangesService: ExchangesService,\n              private projectsService: ProjectsService,\n              private alertCtrl: AlertController,\n              private config: ConfigService,\n              private alert: AlertService ) { }\n\n  ngOnInit() {\n    this.content = this.config.get_content('user-exchange-confirm');\n\n    this.studentAlreadyExchangeError = this.config.get_error('student-already_exchange');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.participantUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getExchanges();\n  }\n\n  getExchanges() {\n    this.exchangesService.getAllExchangesForParticipant().subscribe(data => {\n      this.loadedUser.exchange_requests = data.data;\n      this.loadedUser.exchange_requests.forEach(request => {\n        this.projectsService.getLittleProject(request.sender.project_id).subscribe(response => {\n          request.sender.project_title = response.data.title;\n        });\n      });\n    });\n  }\n\n  confirm(exchangeID) {\n    this.alertCtrl.create({\n      header: 'Bist du sicher?',\n      message: 'Willst du wirklich tauschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Ja',\n        handler: async () => {\n          this.exchangesService.confirmExchange(exchangeID).subscribe(data => {\n            this.alert.alert(data.message);\n            this.router.navigate([this.eventName + '/Schüler/' + this.participantUrl]);\n            this.exchangesService.update.emit();\n          }, error => {\n            this.alert.error('Bestätigung des Tausches fehlgeschlagen!', error.error);\n          });\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-projects/admin-projects.page.ts","webpack:///src/app/log-in/admin-page/admin-projects/admin-projects.page.scss","webpack:///src/app/log-in/admin-page/admin-projects/admin-projects.page.html","webpack:///src/app/log-in/admin-page/admin-projects/admin-projects.module.ts"],"names":["AdminProjectsPage","projectsService","activatedRoute","config","subscriptions","imageUrl","backend_config","projectsNoun","app_config","projects_noun","eventName","event_name","text","get_content","paramMap","subscribe","adminUrl","get","getProjects","push","update","forEach","sub","unsubscribe","getAllProjects","data","projects","selector","template","routes","path","component","AdminProjectsPageModule","imports","forChild","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAYaA,iBAAiB;AAgB5B,mCAAoBC,eAApB,EACoBC,cADpB,EAEoBC,MAFpB,EAE2C;AAAA;;AAFvB,eAAAF,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAjBZ,eAAAC,aAAA,GAAgC,EAAhC;AAQR,eAAAC,QAAA,GAAW,KAAKF,MAAL,CAAYG,cAAZ,CAA2BD,QAAtC;AACA,eAAAE,YAAA,GAAe,KAAKJ,MAAL,CAAYK,UAAZ,CAAuBC,aAAtC;AACA;;;;AAGA,eAAAC,SAAA,GAAY,KAAKP,MAAL,CAAYK,UAAZ,CAAuBG,UAAnC;AAI8C;;AAlBlB;AAAA;AAAA,qCAoBjB;AAAA;;AACT,iBAAKC,IAAL,GAAY,KAAKT,MAAL,CAAYU,WAAZ,CAAwB,gBAAxB,CAAZ;AAEA,iBAAKX,cAAL,CAAoBY,QAApB,CAA6BC,SAA7B,CAAuC,UAAAD,QAAQ,EAAI;AACjD,mBAAI,CAACE,QAAL,GAAgBF,QAAQ,CAACG,GAAT,CAAa,WAAb,CAAhB;AACD,aAFD;AAIA,iBAAKC,WAAL;AAEA,iBAAKd,aAAL,CAAmBe,IAAnB,CACE,KAAKlB,eAAL,CAAqBmB,MAArB,CAA4BL,SAA5B,CAAsC;AAAA,qBAAM,KAAI,CAACG,WAAL,EAAN;AAAA,aAAtC,CADF;AAGD;AAED;;;;AAlC4B;AAAA;AAAA,wCAqCd;AACZ,iBAAKd,aAAL,CAAmBiB,OAAnB,CAA2B,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,WAAJ,EAAJ;AAAA,aAA9B;AACD;AAvC2B;AAAA;AAAA,wCAyCd;AAAA;;AACZ,iBAAKtB,eAAL,CAAqBuB,cAArB,GAAsCT,SAAtC,CAAgD,UAAAU,IAAI,EAAI;AACtD,oBAAI,CAACC,QAAL,GAAgBD,IAAI,CAACA,IAArB;AACD,aAFD;AAGD;AA7C2B;;AAAA;AAAA,S;;;;gBAXrB;;gBACA;;gBAEA;;;;AAQIzB,uBAAiB,6DAL7B,gEAAU;AACT2B,gBAAQ,EAAE,oBADD;AAETC,gBAAQ,EAAR,4EAFS;;AAAA,OAAV,CAK6B,GAAjB5B,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,UAAM6B,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAgBaC,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DATnC,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,oBAAY,EAAE,CAAC,sEAAD;AAPN,OAAT,CASmC,GAAvBH,uBAAuB,CAAvB","file":"log-in-admin-page-admin-projects-admin-projects-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Project } from 'src/models/Project.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-projects',\n  templateUrl: './admin-projects.page.html',\n  styleUrls: ['./admin-projects.page.scss'],\n})\nexport class AdminProjectsPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n\n  projects: Project[];\n\n  text: string;\n\n  imageUrl = this.config.backend_config.imageUrl;\n  projectsNoun = this.config.app_config.projects_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private projectsService: ProjectsService,\n              private activatedRoute: ActivatedRoute,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('admin-projects');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n\n    this.getProjects();\n\n    this.subscriptions.push(\n      this.projectsService.update.subscribe(() => this.getProjects())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.projects = data.data;\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi1wcm9qZWN0cy5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>{{ projectsNoun }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>{{ projectsNoun }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item color=\\\"background\\\" *ngFor=\\\"let project of projects\\\" [routerLink]=\\\"['./', project.id]\\\">\\n          <ion-avatar [hidden]=\\\"project.image == null || project.image == ''\\\" slot=\\\"start\\\">\\n            <ion-img *ngIf=\\\"project.image != '' && project.image != null\\\" src='{{ imageUrl }}{{ project.image }}'></ion-img>\\n          </ion-avatar>\\n          <ion-label color=\\\"text\\\">\\n            <h2>{{ project.title }}</h2>\\n            <p *ngIf=\\\"!!+project.authorized === true\\\">{{ project.descr }}</p>\\n            <ion-text *ngIf=\\\"!!+project.authorized === false\\\" color=\\\"danger\\\"> (Nicht zugelassen!)</ion-text>\\n          </ion-label>\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminProjectsPage } from './admin-projects.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminProjectsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminProjectsPage]\n})\nexport class AdminProjectsPageModule {}\n"]}
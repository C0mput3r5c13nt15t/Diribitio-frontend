{"version":3,"sources":["webpack:///src/app/log-in/student-page/student-project-administration/student-project-edit/student-project-edit.page.ts","webpack:///src/app/log-in/student-page/student-project-administration/student-project-edit/student-project-edit.module.ts","webpack:///src/app/log-in/student-page/student-project-administration/student-project-edit/student-project-edit.page.html"],"names":["StudentProjectEditPage","StudentProjectEditPageModule","routes","path","component","activatedRoute","router","projectsService","scheduleService","studentsService","config","subscriptions","loadedStudent","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","editProject","authorized","editable","title","image","descr","leader_name","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","schedule","begin","Date","control","registration","sort_students","exchange","projects","end","projectNoun","this","app_config","project_noun","eventName","event_name","currentDate","paramMap","subscribe","has","studentUrl","get","navigate","getSchedule","getProject","getStudent","push","update","forEach","sub","unsubscribe","data","getSelfLeadedProject","getSelfStudent","event","file","target","files","touchUpProject","putProject","submit","forChild"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { Student } from 'src/models/Student.model';\nimport { Project } from 'src/models/Project.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-project-edit',\n  templateUrl: './student-project-edit.page.html',\n  styleUrls: ['./student-project-edit.page.scss'],\n})\nexport class StudentProjectEditPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  studentUrl: string;\n\n  loadedStudent: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 2\n  };\n\n  editProject: Project = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: []\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  image: any;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private scheduleService: ScheduleService,\n              private studentsService: StudentsService,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getSchedule();\n    this.getProject();\n    this.getStudent();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.projectsService.update.subscribe(() => this.getProject()),\n      this.studentsService.update.subscribe(() => this.getStudent())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getProject() {\n    this.projectsService.getSelfLeadedProject('students').subscribe(data => {\n      this.editProject = data.data;\n    });\n  }\n\n  getStudent() {\n    this.studentsService.getSelfStudent().subscribe(data => {\n      this.loadedStudent = data.data;\n    });\n  }\n\n  changeFile(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      this.image = file;\n    }\n  }\n\n  submit() {\n    if (this.currentDate > this.schedule.control && this.currentDate <= this.schedule.registration) {\n      this.projectsService.touchUpProject('students', this.editProject, this.studentUrl);\n    } else {\n      this.projectsService.putProject('students', this.editProject, this.studentUrl);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentProjectEditPage } from './student-project-edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentProjectEditPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StudentProjectEditPage]\n})\nexport class StudentProjectEditPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/Schüler/{{ studentUrl }}\"></ion-back-button>\n    </ion-button>\n    <ion-title>{{ projectNoun }} bearbeiten</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\"class=\"content\">\n    <ion-card-content>\n      <form #form=\"ngForm\" name=\"ProjectForm\" (ngSubmit)=\"submit()\" #Formular>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">{{ projectNoun }}leiter</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-input color=\"text\" required name=\"ProjectLeader\" [(ngModel)]=\"editProject.leader_name\" required type=\"text\"></ion-input>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">{{ projectNoun }}name</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-input color=\"text\" required name=\"ProjectName\" [(ngModel)]=\"editProject.title\" required type=\"text\"></ion-input>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">{{ projectNoun }}beschreibung</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-textarea required type=\"text\" name=\"ProjectDescr\" [(ngModel)]=\"editProject.descr\" rows=\"7\"></ion-textarea>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Kosten</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-input color=\"text\" required name=\"ProjectCost\" [(ngModel)]=\"editProject.cost\" required type=\"number\"></ion-input>€\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">1.Tag</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">von</ion-label><ion-input color=\"text\" required name=\"ProjectFirstTimeBeginn\" [(ngModel)]=\"editProject.first_day_begin\" type=\"time\"></ion-input>\n        </ion-item> \n        <ion-item color=\"items\">\n          <ion-label color=\"text\">bis</ion-label><ion-input color=\"text\" required name=\"ProjectFirstTimeEnd\" [(ngModel)]=\"editProject.first_day_end\" type=\"time\"></ion-input>\n        </ion-item> \n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">2.Tag</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">von</ion-label><ion-input color=\"text\" required name=\"ProjectSecondTimeBeginn\" [(ngModel)]=\"editProject.second_day_begin\" type=\"time\"></ion-input>\n        </ion-item>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">bis</ion-label><ion-input color=\"text\" required name=\"ProjectSecondTimeEnd\" [(ngModel)]=\"editProject.second_day_end\" type=\"time\"></ion-input>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Klassenstufe</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">von</ion-label>\n          <ion-select required name=\"ProjectMinClass\" [(ngModel)]=\"editProject.min_grade\" cancelText=\"Abbrechen\" doneText=\"Ok\">\n            <ion-select-option value=\"5\">5</ion-select-option>\n            <ion-select-option value=\"6\">6</ion-select-option>\n            <ion-select-option value=\"7\">7</ion-select-option>\n            <ion-select-option value=\"8\">8</ion-select-option>\n            <ion-select-option value=\"9\">9</ion-select-option>\n            <ion-select-option value=\"10\">10</ion-select-option>\n            <ion-select-option value=\"11\">11</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">bis</ion-label>\n          <ion-select required name=\"ProjectMaxClass\" [(ngModel)]=\"editProject.max_grade\" cancelText=\"Abbrechen\" doneText=\"Ok\">\n            <ion-select-option selected value=\"5\">5</ion-select-option>\n            <ion-select-option value=\"6\">6</ion-select-option>\n            <ion-select-option value=\"7\">7</ion-select-option>\n            <ion-select-option value=\"8\">8</ion-select-option>\n            <ion-select-option value=\"9\">9</ion-select-option>\n            <ion-select-option value=\"10\">10</ion-select-option>\n            <ion-select-option value=\"11\">11</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Teinehmeranzahl</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">von</ion-label><ion-input color=\"text\" required name=\"ProjectMinParticipants\" [(ngModel)]=\"editProject.min_participants\" required type=\"number\"></ion-input>\n        </ion-item>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">bis</ion-label><ion-input color=\"text\" required name=\"ProjectMaxParticipants\" [(ngModel)]=\"editProject.max_participants\" required type=\"number\"></ion-input>\n        </ion-item>\n        <div class=\"ion-padding\">\n          <ion-button color=\"buttons\" [disabled]=\"form.invalid || editProject.leader_id != loadedStudent.id\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">Änderungen speichern</ion-button>\n        </div>\n      </form>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n"]}
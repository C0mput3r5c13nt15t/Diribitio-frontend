{"version":3,"sources":["webpack:///src/app/home/home.page.html","webpack:///src/app/home/home.page.ts","webpack:///src/app/home/home.module.ts"],"names":["HomePage","config","scheduleService","subscriptions","schedule","id","begin","Date","control","registration","sort_students","exchange","projects","end","welcome","this","home","articles","projectsNoun","app_config","projects_noun","eventNoun","event_name","currentDate","getSchedule","push","update","subscribe","forEach","sub","unsubscribe","data","HomePageModule","forChild","path","component"],"mappings":"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","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-title>Startseite</ion-title>\n    <ion-button color=\"buttons\" slot=\"end\" [routerLink]=\"['../../Help']\"><ion-icon name=\"help-circle\"></ion-icon></ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\" class=\"content\">\n    <img class=\"logo_light\" src=\"../../assets/logo/Logo_light.svg\">\n    <img class=\"logo_dark\" src=\"../../assets/logo/Logo_dark.svg\">\n    <ion-card-header>\n      <ion-card-title>{{ welcome.title }}</ion-card-title>\n    </ion-card-header>\n    <ion-card-content *ngIf=\"welcome.text\">\n      <ion-label color=\"text\">\n        {{ welcome.text }}\n      </ion-label>\n    </ion-card-content>\n  </ion-card>\n  <ion-card color=\"background\" class=\"content\">\n    <ion-card-header>\n      <ion-card-title>Zeitplan</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-list>\n        <ion-item color=\"items\" lines=\"none\">\n          ab <ion-datetime displayFormat=\"DD.MM.YYYY\" placeholder=\"Bitte ein Datum wählen\" readonly name=\"Beginn\" [(ngModel)]=\"schedule.begin\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez'></ion-datetime>\n        </ion-item>\n        <ion-item color=\"buttons\" lines=\"none\" *ngIf=\"currentDate > schedule.begin && currentDate <= schedule.control\">\n          <ion-icon slot=\"start\" name=\"create\"></ion-icon>\n          <ion-label>Registrierung und Erstellung der {{ projectsNoun }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\" *ngIf=\"currentDate <= schedule.begin || currentDate > schedule.control\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"create\"></ion-icon>\n          <ion-label color=\"text\">Registrierung und Erstellung der {{ projectsNoun }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          bis <ion-datetime displayFormat=\"DD.MM.YYYY\" placeholder=\"Bitte ein Datum wählen\" readonly name=\"Anmeldung\" [(ngModel)]=\"schedule.control\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez'></ion-datetime>\n        </ion-item>\n        <ion-item color=\"buttons\" lines=\"none\" *ngIf=\"currentDate > schedule.control && currentDate <= schedule.registration\">\n          <ion-icon slot=\"start\" name=\"shield-checkmark\"></ion-icon>\n          <ion-label>Kontrolle und Freigabe der {{ projectsNoun }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\" *ngIf=\"currentDate <= schedule.control || currentDate > schedule.registration\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"shield-checkmark\"></ion-icon>\n          <ion-label color=\"text\">Kontrolle und Freigabe der {{ projectsNoun }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          bis <ion-datetime displayFormat=\"DD.MM.YYYY\" placeholder=\"Bitte ein Datum wählen\" readonly name=\"Anmeldung\" [(ngModel)]=\"schedule.registration\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez'></ion-datetime>\n        </ion-item>\n        <ion-item color=\"buttons\" lines=\"none\" *ngIf=\"currentDate > schedule.registration && currentDate <= schedule.sort_students\">\n          <ion-icon slot=\"start\" name=\"log-in\"></ion-icon>\n          <ion-label>Anmeldung für die {{ projectsNoun }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\" *ngIf=\"currentDate <= schedule.registration || currentDate > schedule.sort_students\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"log-in\"></ion-icon>\n          <ion-label color=\"text\">Anmeldung für die {{ projectsNoun }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          bis <ion-datetime displayFormat=\"DD.MM.YYYY\" placeholder=\"Bitte ein Datum wählen\" readonly name=\"Sortierung\" [(ngModel)]=\"schedule.sort_students\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez'></ion-datetime>\n        </ion-item>\n        <ion-item color=\"buttons\" lines=\"none\" *ngIf=\"currentDate > schedule.sort_students && currentDate <= schedule.exchange\">\n          <ion-icon slot=\"start\" name=\"funnel\"></ion-icon>\n          <ion-label>Sortierung durch den Algorithmus</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\" *ngIf=\"currentDate <= schedule.sort_students || currentDate > schedule.exchange\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"funnel\"></ion-icon>\n          <ion-label color=\"text\">Sortierung durch den Algorithmus</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          bis <ion-datetime displayFormat=\"DD.MM.YYYY\" placeholder=\"Bitte ein Datum wählen\" readonly name=\"Tausch\" [(ngModel)]=\"schedule.exchange\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez'></ion-datetime>\n        </ion-item>\n        <ion-item color=\"buttons\" lines=\"none\" *ngIf=\"currentDate > schedule.exchange && currentDate <= schedule.projects\">\n          <ion-icon slot=\"start\" name=\"swap-horizontal\"></ion-icon>\n          <ion-label>Tauschphase</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\" *ngIf=\"currentDate <= schedule.exchange || currentDate > schedule.projects\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"swap-horizontal\"></ion-icon>\n          <ion-label color=\"text\">Tauschphase</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          bis <ion-datetime displayFormat=\"DD.MM.YYYY\" placeholder=\"Bitte ein Datum wählen\" readonly name=\"Projekte\" [(ngModel)]=\"schedule.projects\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez'></ion-datetime>\n        </ion-item>\n        <ion-item color=\"buttons\" lines=\"none\" *ngIf=\"currentDate > schedule.projects && currentDate <= schedule.end\">\n          <ion-icon slot=\"start\" name=\"flag\"></ion-icon>\n          <ion-label>{{ eventNoun }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\" *ngIf=\"currentDate <= schedule.projects || currentDate > schedule.end\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"flag\"></ion-icon>\n          <ion-label color=\"text\">{{ eventNoun }}</ion-label>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          bis<ion-datetime displayFormat=\"DD.MM.YYYY\" placeholder=\"Bitte ein Datum wählen\" readonly name=\"Ende\" [(ngModel)]=\"schedule.end\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez'></ion-datetime>\n        </ion-item>\n      </ion-list>\n    </ion-card-content>\n  </ion-card>\n  <ion-card *ngFor=\"let article of articles\" color=\"background\" class=\"content\">\n    <ion-card-header>\n      <ion-card-title>{{ article.title }}</ion-card-title>\n    </ion-card-header>\n    <ion-card-content *ngIf=\"article.text\">\n      <ion-label color=\"text\">\n        {{ article.text }}\n      </ion-label>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  welcome = this.config.home.welcome;\n  articles = this.config.home.articles;\n\n  projectsNoun = this.config.app_config.projects_noun;\n  eventNoun = this.config.app_config.event_name;\n\n  constructor(private config: ConfigService,\n              private scheduleService: ScheduleService) { }\n\n  ngOnInit() {\n    this.currentDate = this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.getSchedule();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([{ path: '', component: HomePage }])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/leader-page/leader-page.page.html","webpack:///src/app/log-in/leader-page/leader-page.module.ts","webpack:///src/app/log-in/leader-page/leader-page.page.ts"],"names":["LeaderPagePage","LeaderPagePageModule","routes","path","component","activatedRoute","router","leadersService","projectsService","scheduleService","config","alert","subscriptions","loadedLeader","id","user_name","email","password","project_id","schedule","begin","Date","control","registration","sort_students","exchange","projects","end","buttonPressed","projectNoun","this","app_config","project_noun","text","get_content","currentDate","paramMap","subscribe","has","navigate","getSchedule","getLeader","push","update","forEach","sub","unsubscribe","data","getSelfLeader","email_verified_at","sendAuthentificationEmailSubscribe","message","error","logOutLeader","destroySelfLeader","logout","refresh","forChild"],"mappings":"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","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-title>Projektleiter</ion-title>\n    <ion-button color=\"buttons\" slot=\"end\" (click)=\"logout()\">\n      <ion-icon name=\"log-out\"></ion-icon>\n    </ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\"class=\"content\">\n    <ion-card-header>\n      <ion-item color=\"items\" lines=\"none\">\n        <ion-card-title><ion-label color=\"buttons\" text-wrap>Willkommen {{ loadedLeader.user_name }}</ion-label></ion-card-title>\n        <ion-button (click)=\"refresh()\" slot=\"end\" color=\"buttons\"><ion-icon name=\"refresh\"></ion-icon></ion-button>\n      </ion-item>   \n    </ion-card-header>\n    <ion-card-content *ngIf=\"text\">\n      <ion-label color=\"text\">\n        {{ text }}\n      </ion-label>\n    </ion-card-content>\n    <ion-card-content *ngIf=\"loadedLeader.email_verified_at == null && !buttonPressed\">\n      <ion-label color=\"text\">\n        Sie heaben Ihre E-Mail noch nicht verifiziert. Bitte holen Sie dies nach bevor Sie fortfahren.\n      </ion-label>\n      <div class=\"ion-padding\">\n        <ion-button color=\"buttons\" expand=\"block\" class=\"ion-no-margin\" (click)=\"sendVerificationEmail()\">E-Mail senden</ion-button>\n      </div>\n    </ion-card-content>\n    <ion-card-content>\n      <ion-list>\n        <ion-item [disabled]=\"loadedLeader.email_verified_at == null\" color=\"items\" *ngIf=\"currentDate > schedule.begin && currentDate <= schedule.control && loadedLeader.project_id == 0\" routerLink='./{{ projectNoun }} erstellen'>\n          <ion-icon color=\"text\" slot=\"start\" name=\"create\"></ion-icon>{{ projectNoun }} erstellen\n        </ion-item>\n        <ion-item [disabled]=\"loadedLeader.email_verified_at == null\" color=\"items\" *ngIf=\"loadedLeader.project_id != 0\" routerLink='./{{ projectNoun }} verwalten'>\n          <ion-icon color=\"text\" slot=\"start\" name=\"construct\"></ion-icon>{{ projectNoun }} verwalten\n        </ion-item>\n        <ion-item [disabled]=\"loadedLeader.email_verified_at == null\" color=\"items\" *ngIf=\"loadedLeader.project_id != 0\" [routerLink]=\"['./Nachricht senden']\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"send\"></ion-icon>Notiz an das Projekt anfügen\n        </ion-item>\n      </ion-list>\n      <div class=\"ion-padding\" *ngIf=\"currentDate > schedule.control && currentDate <= schedule.end &&loadedLeader.project_id == 0\">\n        <ion-button color=\"buttons\" expand=\"block\" class=\"ion-no-margin\" (click)=\"deleteAccount()\">Account löschen</ion-button>\n      </div>\n      <div class=\"ion-padding\">\n        <ion-button color=\"buttons\" expand=\"block\" class=\"ion-no-margin\" (click)=\"logout()\">Abmelden</ion-button>\n      </div>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaderPagePage } from './leader-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaderPagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LeaderPagePage]\n})\nexport class LeaderPagePageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LeadersService } from 'src/app/services/leaders.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { Projectleader } from 'src/models/Projectleader';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-leader-page',\n  templateUrl: './leader-page.page.html',\n  styleUrls: ['./leader-page.page.scss'],\n})\nexport class LeaderPagePage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  loadedLeader: Projectleader = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    project_id: 0\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  text: string;\n\n  buttonPressed = true;\n\n  projectNoun = this.config.app_config.project_noun;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private leadersService: LeadersService,\n              private projectsService: ProjectsService,\n              private scheduleService: ScheduleService,\n              private config: ConfigService,\n              private alert: AlertService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('leader-page');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('LeaderName')) {\n        this.router.navigate(['']);\n        return;\n      }\n    });\n\n    this.getSchedule();\n    this.getLeader();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.leadersService.update.subscribe(() => this.getLeader()),\n      this.projectsService.update.subscribe(() => this.getLeader())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getLeader() {\n    this.leadersService.getSelfLeader().subscribe(data => {\n      this.loadedLeader = data.data;\n\n      if (this.loadedLeader.email_verified_at == null) {\n        this.buttonPressed = false;\n      }\n    });\n  }\n\n  refresh() {\n    this.getLeader();\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  sendVerificationEmail() {\n    this.leadersService.sendAuthentificationEmailSubscribe().subscribe(data => {\n      this.alert.alert(data.message);\n      this.buttonPressed = true;\n    }, error => {\n      this.alert.error('Versandt der Verifizierungs E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  logout() {\n    this.leadersService.logOutLeader();\n  }\n\n  deleteAccount() {\n    this.leadersService.destroySelfLeader();\n  }\n\n}\n"]}
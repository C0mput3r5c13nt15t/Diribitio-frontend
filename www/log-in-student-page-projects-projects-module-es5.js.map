{"version":3,"sources":["webpack:///src/app/log-in/student-page/projects/projects.page.html","webpack:///src/app/log-in/student-page/projects/projects.module.ts","webpack:///src/app/log-in/student-page/projects/projects.page.scss","webpack:///src/app/log-in/student-page/projects/projects.page.ts"],"names":["routes","path","component","ProjectsPageModule","imports","forChild","declarations","ProjectsPage","projectsService","config","activatedRoute","router","scheduleService","subscriptions","schedule","id","begin","Date","control","registration","sort_students","exchange","projects","end","imageUrl","backend_config","projectsNoun","app_config","projects_noun","eventName","event_name","text","get_content","currentDate","paramMap","subscribe","has","navigate","studentUrl","get","getSchedule","getProjects","push","update","forEach","sub","unsubscribe","data","getAllProjects","selector","template"],"mappings":"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","file":"log-in-student-page-projects-projects-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Schüler/{{ studentUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>{{ projectsNoun }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>{{ projectsNoun }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"currentDate <= schedule.registration\\\">\\n      <ion-card color=\\\"background\\\">\\n        <ion-card-header>\\n          <ion-title color=\\\"danger\\\">\\n            Zu früh\\n          </ion-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-text color=\\\"text\\\">Die {{ projectsNoun }} werden hier erst nach dem {{ schedule.registration }} ausgestellt.</ion-text>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"currentDate > schedule.registration\\\">\\n      <ion-list *ngIf=\\\"projects\\\">\\n        <div *ngFor=\\\"let project of projects\\\">\\n          <ion-item color=\\\"background\\\" *ngIf=\\\"!!+project.authorized\\\" [routerLink]=\\\"['./', project.id]\\\">\\n            <ion-avatar [hidden]=\\\"project.image == '' || project.image == null\\\" slot=\\\"start\\\">\\n              <ion-img *ngIf=\\\"project.image != '' && project.image != null\\\" src='{{ imageUrl }}{{ project.image }}'></ion-img>\\n            </ion-avatar>\\n            <ion-label color=\\\"text\\\">\\n              <h2>{{ project.title }}</h2>\\n              <ion-text color=\\\"text\\\" *ngIf=\\\"!!+project.authorized === true\\\">{{ project.descr }}</ion-text>\\n              <ion-text *ngIf=\\\"!!+project.authorized === false\\\" color=\\\"danger\\\"> (Nicht zugelassen!)</ion-text>\\n            </ion-label>\\n          </ion-item>\\n        </div>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectsPage } from './projects.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProjectsPage]\n})\nexport class ProjectsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9qZWN0cy5wYWdlLnNjc3MifQ== */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { Project } from 'src/models/Project.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.page.html',\n  styleUrls: ['./projects.page.scss'],\n})\nexport class ProjectsPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  studentUrl: string;\n  projects: Project[];\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  imageUrl = this.config.backend_config.imageUrl;\n  projectsNoun = this.config.app_config.projects_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  text: string;\n\n  constructor(private projectsService: ProjectsService,\n              private config: ConfigService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private scheduleService: ScheduleService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('projects');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getSchedule();\n    this.getProjects();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.projectsService.update.subscribe(() => this.getProjects())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.projects = data.data;\n    });\n  }\n\n}\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-exchanges/admin-exchange-detail/admin-exchange-detail.page.html","webpack:///src/app/log-in/admin-page/admin-exchanges/admin-exchange-detail/admin-exchange-detail.module.ts","webpack:///src/app/log-in/admin-page/admin-exchanges/admin-exchange-detail/admin-exchange-detail.page.ts"],"names":["routes","path","component","AdminExchangeDetailPage","activatedRoute","router","exchangesService","projectService","alertCtrl","config","subscriptions","loadedExchange","id","sender_id","receiver_id","confirmed","accomplished","sender","receiver","firstProjectName","firstMinGrade","firstMaxGrade","secondProjectName","secondMinGrade","secondMaxGrade","projectNoun","this","app_config","project_noun","eventName","event_name","paramMap","subscribe","has","adminUrl","get","exchangeId","Number","navigate","getExchange","push","update","forEach","sub","unsubscribe","data","getProject","project_id","projectData","title","min_grade","max_grade","create","header","message","buttons","text","role","handler","deleteExchange","then","alertEl","present","carryOutExchange","AdminExchangeDetailPageModule","forChild"],"mappings":"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","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n      <ion-button color=\"buttons\" slot=\"start\">\n        <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/Admin/{{ adminUrl }}/Tauschanfragen\"></ion-back-button>\n      </ion-button>\n    <ion-title>Tauschanfrage</ion-title>\n    <ion-button color=\"buttons\" color=\"danger\" slot=\"end\" (click)=\"deleteExchange()\">\n      <ion-icon name=\"trash\"></ion-icon>\n    </ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\"class=\"content\">\n    <ion-card-header *ngIf=\"loadedExchange.sender && loadedExchange.receiver\">\n      <ion-card-title>Tauschanfrage von {{ loadedExchange.sender.first_name }} {{ loadedExchange.sender.last_name }} und {{ loadedExchange.receiver.first_name }} {{ loadedExchange.receiver.last_name }}</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <form>\n        <ion-item-group *ngIf=\"loadedExchange.sender && loadedExchange.receiver\">\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">{{ loadedExchange.sender.first_name }} {{ loadedExchange.sender.last_name }} (Ersteller/in der Anfrage)</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\" lines=\"none\">\n            Klasse: {{ loadedExchange.sender.grade }}{{ loadedExchange.sender.letter }}\n          </ion-item>\n          <ion-item color=\"items\" lines=\"none\">\n            {{ projectNoun }}: {{ firstProjectName }} ({{ firstMinGrade }}.Klasse bis {{ firstMaxGrade }}.Klasse)\n          </ion-item>\n          <ion-item color=\"items\" lines=\"none\">\n            <ion-label *ngIf=\"loadedExchange.receiver.grade > firstMaxGrade || loadedExchange.receiver.grade < firstMinGrade\" color=\"danger\">{{ loadedExchange.receiver.first_name }} {{ loadedExchange.receiver.last_name }} erfüllt NICHT die {{ projectNoun }}bedingungen!</ion-label>\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-label color=\"text\">{{ loadedExchange.receiver.first_name }} {{ loadedExchange.receiver.last_name }} (Empfänger/in)</ion-label>\n          </ion-item-divider>\n          <ion-item color=\"items\" lines=\"none\">\n            Klasse: {{ loadedExchange.receiver.grade }}{{ loadedExchange.receiver.letter }}\n          </ion-item>\n          <ion-item color=\"items\" lines=\"none\">\n            {{ projectNoun }}: {{ secondProjectName }} ({{ secondMinGrade }}.Klasse bis {{ secondMaxGrade }}.Klasse)\n          </ion-item>\n          <ion-item color=\"items\" lines=\"none\">\n            <ion-label *ngIf=\"loadedExchange.sender.grade > secondMaxGrade || loadedExchange.sender.grade < secondMinGrade\" color=\"danger\">{{ loadedExchange.sender.first_name }} {{ loadedExchange.sender.last_name }} erfüllt NICHT die {{ projectNoun }}bedingungen!</ion-label>\n          </ion-item>\n        </ion-item-group>\n        <div class=\"ion-padding\">\n          <ion-button color=\"buttons\" (click)=\"carryOutExchange()\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">Tausch bestätigen</ion-button>\n        </div>\n        <div class=\"ion-padding\">\n          <ion-button color=\"buttons\" expand=\"block\" class=\"ion-no-margin\"  color=\"buttons\" color=\"danger\" slot=\"end\" (click)=\"deleteExchange()\">Tauschanfrage löschen</ion-button>\n        </div>\n      </form>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminExchangeDetailPage } from './admin-exchange-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminExchangeDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminExchangeDetailPage]\n})\nexport class AdminExchangeDetailPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExchangesService } from 'src/app/services/exchanges.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Exchange } from 'src/models/Exchange.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-exchange-detail',\n  templateUrl: './admin-exchange-detail.page.html',\n  styleUrls: ['./admin-exchange-detail.page.scss'],\n})\nexport class AdminExchangeDetailPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n  exchangeId: number;\n\n  loadedExchange: Exchange = {\n    id: 0,\n    sender_id: 0,\n    receiver_id: 0,\n    confirmed: 0,\n    accomplished: 0,\n    sender: null,\n    receiver: null\n  };\n\n  firstProjectName = '';\n  firstMinGrade = 0;\n  firstMaxGrade = 0;\n  secondProjectName = '';\n  secondMinGrade = 0;\n  secondMaxGrade = 0;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private exchangesService: ExchangesService,\n              private projectService: ProjectsService,\n              private alertCtrl: AlertController,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ExchangeID')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.adminUrl = paramMap.get('AdminName');\n      this.exchangeId = Number(paramMap.get('ExchangeID'));\n    });\n\n    this.getExchange();\n\n    this.subscriptions.push(\n      this.exchangesService.update.subscribe(() => this.getExchange()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getExchange() {\n    this.exchangesService.getExchange(this.exchangeId).subscribe(data => {\n      this.loadedExchange = data.data;\n      this.projectService.getProject(this.loadedExchange.sender.project_id).subscribe(projectData => {\n        this.firstProjectName = projectData.data.title;\n        this.firstMinGrade = projectData.data.min_grade;\n        this.firstMaxGrade = projectData.data.max_grade;\n      });\n      this.projectService.getProject(this.loadedExchange.receiver.project_id).subscribe(projectData => {\n        this.secondProjectName = projectData.data.title;\n        this.secondMinGrade = projectData.data.min_grade;\n        this.secondMaxGrade = projectData.data.max_grade;\n      });\n    });\n  }\n\n  deleteExchange() {\n    this.alertCtrl.create({\n      header: 'Bist du sicher?',\n      message: 'Wollen Sie diesen Tausch wirklich unwiederruflich löschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Löschen',\n        handler: () => {\n          this.exchangesService.deleteExchange(this.loadedExchange.id);\n          this.router.navigate([this.eventName + '/Admin/' + this.adminUrl + '/Tauschanfragen']);\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n  carryOutExchange() {\n    this.exchangesService.carryOutExchange(this.loadedExchange.id);\n    this.router.navigate([this.eventName + '/Admin/' + this.adminUrl + '/Tauschanfragen']);\n  }\n\n}\n"]}
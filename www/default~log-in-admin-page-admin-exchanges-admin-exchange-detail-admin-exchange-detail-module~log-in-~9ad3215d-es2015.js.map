{"version":3,"sources":["./src/app/services/projects.service.ts"],"names":[],"mappings":"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","file":"default~log-in-admin-page-admin-exchanges-admin-exchange-detail-admin-exchange-detail-module~log-in-~9ad3215d-es2015.js","sourcesContent":["import { Injectable, EventEmitter, Output } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { AlertService } from './alert.service';\nimport { ConfigService } from './config.service';\nimport { Response } from 'src/models/Response.model';\nimport { Router } from '@angular/router';\n\n/**\n * This service handles all request to the backend having to do with the projects\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  /**\n   * The update event is emitted after every major successful request\n   */\n  @Output() update = new EventEmitter();\n  Data;\n\n  constructor(private http: HttpClient,\n              private auth: AuthenticationService,\n              private alert: AlertService,\n              private config: ConfigService,\n              private router: Router) { }\n\n  /**\n   * The url to the backend\n   */\n  backendUrl = this.config.backend_config.url;\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  /**\n   * Gets all projects\n   * @returns RequestObservable\n   */\n  getAllProjects() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'projects', options);\n  }\n\n  /**\n   * Gets the project with the given id\n   * @param projectID Contains the id of the project\n   * @returns RequestObservable\n   */\n  getProject(projectID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'projects/' + projectID, options);\n  }\n\n  /**\n   * Gets some of the project data with the given id\n   * @param projectID Contains the id of the project\n   * @returns RequestObservable\n   */\n  getLittleProject(projectID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'projects/show_little/' + projectID, options);\n  }\n\n  /**\n   * Gets the project data available to an admin with the given id\n   * @param projectID Contains the id of the project\n   * @returns RequestObservable\n   */\n  getProjectAdmin(projectID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'admins/project/' + projectID, options);\n  }\n\n  /**\n   * Gets the project of the student associated with the provided token\n   * @returns RequestObservable\n   */\n  getSelfProject() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'students/project', options);\n  }\n\n  /**\n   * Gets the leaded project of the student or leader associated with the provided token\n   * @param baseUrl Contains for which type of user accout this request is (students or leaders)\n   * @returns RequestObservable\n   */\n  getSelfLeadedProject(baseUrl= 'students') {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + baseUrl + '/leaded_project', options);\n  }\n\n  /**\n   * Creates a new project\n   * @param baseUrl Contains for which type of user accout this request is (students or leaders)\n   * @param projectData Contains the new project\n   * @param image Contains the image of the new project\n   * @returns RequestObservable\n   */\n  createProject(baseUrl= 'students', projectData, image= null) {\n    const headers = new HttpHeaders({\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n\n    const formData = new FormData();\n    formData.append('title', projectData.title);\n    formData.append('image', image);\n    formData.append('descr', projectData.descr);\n    formData.append('leader_name', projectData.leader_name);\n    formData.append('cost', projectData.cost);\n    formData.append('first_day_begin', projectData.first_day_begin);\n    formData.append('first_day_end', projectData.first_day_end);\n    formData.append('second_day_begin', projectData.second_day_begin);\n    formData.append('second_day_end', projectData.second_day_end);\n    formData.append('min_grade', projectData.min_grade);\n    formData.append('max_grade', projectData.max_grade);\n    formData.append('min_participants', projectData.min_participants);\n    formData.append('max_participants', projectData.max_participants);\n\n    return this.http.post<Response>(this.backendUrl + baseUrl + '/store_project', formData, options);\n  }\n\n  /**\n   * Updates the authorization of the project with the given id\n   * @param projectID Contains the id of the project to be un-/auhorized\n   * @param authorized Contains the new value for authorized\n   */\n  toogleAuthorizedProject(projectID: number, authorized: boolean) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    const sendData = {\n      authorized\n    };\n    this.http.put<Response>(this.backendUrl + 'admins/toogle_authorized/' + projectID, sendData, options).subscribe(data => {\n      if (data) {\n        this.alert.alert(data.message);\n      }\n      this.update.emit();\n    }, error => {\n      this.alert.error('Aktualisierung des Projektes fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Updates the editability of the project with the given id\n   * @param projectID Contains the id of the project to be un-/editable\n   * @param editable Contains the new value for editable\n   */\n  toogleEditableProject(projectID: number, editable: boolean) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    const sendData = {\n      editable\n    };\n    this.http.put<Response>(this.backendUrl + 'admins/toogle_editable/' + projectID, sendData, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Aktualisierung des Projektes fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Updates the project of the student/leader associated with the provided token\n   * @param baseUrl Contains for which type of user accout this request is (students or leaders)\n   * @param projectData Contains the new project data\n   * @param backUrl Contains the url that the user should be navigated to after a successful update\n   */\n  putProject(baseUrl= 'students', projectData, backUrl: string) {\n    const headers = new HttpHeaders({\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n\n    this.http.put<Response>(this.backendUrl + baseUrl + '/update_project', projectData, options).subscribe(data => {\n      this.alert.alert(data.message);\n\n      if (baseUrl === 'students') {\n        this.router.navigate([this.eventName + '/Schüler/' + backUrl]);\n      } else {\n        this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + backUrl]);\n      }\n\n      this.update.emit();\n    }, error => {\n      this.alert.error('Aktualisierung des Projektes fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Updates the project of the student/leader associated with the provided token even after the actual\n   *              deadline if ediatble allows it\n   * @param baseUrl Contains for which type of user accout this request is (students or leaders)\n   * @param projectData Contains the new project data\n   * @param backUrl Contains the url that the user should be navigated to after a successful update\n   */\n  touchUpProject(baseUrl= 'students', projectData, backUrl) {\n    const headers = new HttpHeaders({\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n\n    this.http.put<Response>(this.backendUrl + baseUrl + '/touch_up_project', projectData, options).subscribe(data => {\n      this.alert.alert(data.message);\n\n      if (baseUrl === 'students') {\n        this.router.navigate([this.eventName + '/Schüler/' + backUrl]);\n      } else {\n        this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + backUrl]);\n      }\n\n      this.update.emit();\n    }, error => {\n      this.alert.error('Aktualisierung des Projektes fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Deletes the project with the given id\n   * @param projectID Contains the id of the project to be deleted\n   */\n  deleteProject(projectID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    this.http.delete<Response>(this.backendUrl + 'admins/destroy_project/' + projectID, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Löschung des Projektes fehlgeschlagen!', error.error);\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}
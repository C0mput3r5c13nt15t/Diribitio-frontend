{"version":3,"sources":["./src/app/log-in/admin-page/admin-tokens/admin-tokens.page.html","./src/app/log-in/admin-page/admin-tokens/admin-tokens-routing.module.ts","./src/app/log-in/admin-page/admin-tokens/admin-tokens.module.ts","./src/app/log-in/admin-page/admin-tokens/admin-tokens.page.scss","./src/app/log-in/admin-page/admin-tokens/admin-tokens.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,oJAAqF,E;;;;;;;;;;;;;;;;;;;ACA3D;AACc;AAED;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAe;KAC3B;CACF,CAAC;IAMW,4BAA4B,SAA5B,4BAA4B;CAAG;AAA/B,4BAA4B;IAJxC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACM;AACF;AAEA;AAEgC;AAEvB;IAWzC,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IATjC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,yFAA4B;SAC7B;QACD,YAAY,EAAE,CAAC,kEAAe,CAAC;KAChC,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;ACnBlC;AAAe,2EAAY,mBAAmB,GAAG,6CAA6C,+WAA+W,E;;;;;;;;;;;;;;;;;ACA3Z;IAOrC,eAAe,SAAf,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;QACN;;;;;;;;QAQA;IACF,CAAC;CA6DF;;AA3EY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,wPAAuC;;KAExC,CAAC;GACW,eAAe,CA2E3B;AA3E2B","file":"log-in-admin-page-admin-tokens-admin-tokens-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminTokensPage } from './admin-tokens.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminTokensPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminTokensPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminTokensPageRoutingModule } from './admin-tokens-routing.module';\n\nimport { AdminTokensPage } from './admin-tokens.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AdminTokensPageRoutingModule\n  ],\n  declarations: [AdminTokensPage]\n})\nexport class AdminTokensPageModule {}\n","export default \".width160 {\\n  max-width: 160;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL2FkbWluLXBhZ2UvYWRtaW4tdG9rZW5zL2FkbWluLXRva2Vucy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2ctaW4vYWRtaW4tcGFnZS9hZG1pbi10b2tlbnMvYWRtaW4tdG9rZW5zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53aWR0aDE2MCB7XHJcbiAgICBtYXgtd2lkdGg6IDE2MDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-tokens',\n  templateUrl: './admin-tokens.page.html',\n  styleUrls: ['./admin-tokens.page.scss'],\n})\nexport class AdminTokensPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    /*this.text = this.config.get_content('admin-tokens');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n    this.getTokens();\n\n    this.adminsService.update.subscribe(() => this.getTokens());\n  */\n  }\n\n  /*\n  getTokens() {\n    this.adminsService.getAllTokens().subscribe(data => {\n      this.signUpTokens = data.data;\n    });\n  }\n\n  generateTokens() {\n    if (this.count > 0 && this.count <= 1000) {\n      this.adminsService.createTokens(this.count).subscribe(data => {\n        this.signUpTokens.push(data.data);\n        this.alert.alert(data.message);\n        this.adminsService.update.emit();\n      }, error => {\n        this.alert.error('Erstellung der Tokens fehlgeschlagen!', error.error);\n      });\n    } else {\n      this.alertCtrl.create({\n        header: 'Fehler',\n        message: 'Die angegebene Anzahl ist zu groß oder zu klein!',\n        buttons: [{\n          text: 'Ok',\n          role: 'cancel',\n          }]\n        }).then(alertEl => {\n          alertEl.present();\n        });\n    }\n  }\n\n  deleteTokens() {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie wirklich alle Tokens unwiederruflich löschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Löschen',\n        handler: () => {\n          this.adminsService.deleteAllTokens().subscribe(data => {\n            this.signUpTokens = [];\n            this.alert.alert(data.message);\n            this.adminsService.update.emit();\n          }, error => {\n            this.alert.error('Löschen des Tokens fehlgeschlagen!', error.error);\n          });\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n  print() {\n    console.log('Geht nicht');\n  }\n  */\n\n}\n"],"sourceRoot":"webpack:///"}
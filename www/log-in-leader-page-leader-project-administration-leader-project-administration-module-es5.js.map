{"version":3,"sources":["webpack:///src/app/log-in/leader-page/leader-project-administration/leader-project-administration.module.ts","webpack:///src/app/log-in/leader-page/leader-project-administration/leader-project-administration.page.ts","webpack:///src/app/log-in/leader-page/leader-project-administration/leader-project-administration.page.scss","webpack:///src/app/log-in/leader-page/leader-project-administration/leader-project-administration.page.html"],"names":["routes","path","component","LeaderProjectAdministrationPageModule","imports","forChild","declarations","LeaderProjectAdministrationPage","activatedRoute","router","scheduleService","projectsService","config","subscriptions","loadedLeader","id","user_name","email","password","project_id","leadedProject","authorized","editable","title","image","descr","leader_name","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","schedule","begin","Date","control","registration","sort_students","exchange","projects","end","imageUrl","backend_config","projectNoun","app_config","project_noun","eventName","event_name","leaderLoadingProject","get_error","leaderWrongTime","currentDate","paramMap","subscribe","has","navigate","leaderUrl","get","getSchedule","data","getProject","push","update","forEach","sub","unsubscribe","getSelfLeadedProject","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAgBaC,qCAAqC;AAAA;AAAA,O;;AAArCA,2CAAqC,6DATjD,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,oBAAY,EAAE,CAAC,mGAAD;AAPN,OAAT,CASiD,GAArCH,qCAAqC,CAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCTAI,+BAA+B;AA2E1C,iDAAoBC,cAApB,EACoBC,MADpB,EAEoBC,eAFpB,EAGoBC,eAHpB,EAIoBC,MAJpB,EAI2C;AAAA;;AAJvB,eAAAJ,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AA9EZ,eAAAC,aAAA,GAAgC,EAAhC;AAIR,eAAAC,YAAA,GAA8B;AAC5BC,cAAE,EAAE,CADwB;AAE5BC,qBAAS,EAAE,EAFiB;AAG5BC,iBAAK,EAAE,EAHqB;AAI5BC,oBAAQ,EAAE,EAJkB;AAK5BC,sBAAU,EAAE;AALgB,WAA9B;AAQA,eAAAC,aAAA,GAAyB;AACvBL,cAAE,EAAE,CADmB;AAEvBM,sBAAU,EAAE,CAFW;AAGvBC,oBAAQ,EAAE,CAHa;AAIvBC,iBAAK,EAAE,EAJgB;AAKvBC,iBAAK,EAAE,EALgB;AAMvBC,iBAAK,EAAE,EANgB;AAOvBC,uBAAW,EAAE,EAPU;AAQvBC,qBAAS,EAAE,CARY;AASvBC,gBAAI,EAAE,CATiB;AAUvBC,2BAAe,EAAE;AACfC,mBAAK,EAAE,CADQ;AAEfC,qBAAO,EAAE;AAFM,aAVM;AAcvBC,yBAAa,EAAE;AACbF,mBAAK,EAAE,CADM;AAEbC,qBAAO,EAAE;AAFI,aAdQ;AAkBvBE,4BAAgB,EAAE;AAChBH,mBAAK,EAAE,CADS;AAEhBC,qBAAO,EAAE;AAFO,aAlBK;AAsBvBG,0BAAc,EAAE;AACdJ,mBAAK,EAAE,CADO;AAEdC,qBAAO,EAAE;AAFK,aAtBO;AA0BvBI,qBAAS,EAAE,CA1BY;AA2BvBC,qBAAS,EAAE,CA3BY;AA4BvBC,4BAAgB,EAAE,CA5BK;AA6BvBC,4BAAgB,EAAE,CA7BK;AA8BvBC,oBAAQ,EAAE,EA9Ba;AA+BvBC,wBAAY,EAAE;AA/BS,WAAzB;AAkCA;;;;AAGA,eAAAC,QAAA,GAAqB;AACnB1B,cAAE,EAAE,CADe;AAEnB2B,iBAAK,EAAE,mEAAW,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAX,EAAkC,YAAlC,EAAgD,IAAhD,CAFY;AAGnBC,mBAAO,EAAE,mEAAW,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAX,EAAkC,YAAlC,EAAgD,IAAhD,CAHU;AAInBE,wBAAY,EAAE,mEAAW,IAAIF,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAX,EAAkC,YAAlC,EAAgD,IAAhD,CAJK;AAKnBG,yBAAa,EAAE,mEAAW,IAAIH,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAX,EAAkC,YAAlC,EAAgD,IAAhD,CALI;AAMnBI,oBAAQ,EAAE,mEAAW,IAAIJ,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAX,EAAkC,YAAlC,EAAgD,IAAhD,CANS;AAOnBK,oBAAQ,EAAE,mEAAW,IAAIL,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAX,EAAkC,YAAlC,EAAgD,IAAhD,CAPS;AAQnBM,eAAG,EAAE,mEAAW,IAAIN,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAX,EAAkC,YAAlC,EAAgD,IAAhD;AARc,WAArB;AAkBA,eAAAO,QAAA,GAAW,KAAKtC,MAAL,CAAYuC,cAAZ,CAA2BD,QAAtC;AACA,eAAAE,WAAA,GAAc,KAAKxC,MAAL,CAAYyC,UAAZ,CAAuBC,YAArC;AACA;;;;AAGA,eAAAC,SAAA,GAAY,KAAK3C,MAAL,CAAYyC,UAAZ,CAAuBG,UAAnC;AAM8C;;AA/EJ;AAAA;AAAA,qCAiF/B;AAAA;;AACT,iBAAKC,oBAAL,GAA4B,KAAK7C,MAAL,CAAY8C,SAAZ,CAAsB,wBAAtB,CAA5B;AACA,iBAAKC,eAAL,GAAuB,KAAK/C,MAAL,CAAY8C,SAAZ,CAAsB,mBAAtB,CAAvB;AAEA,iBAAKE,WAAL,GAAmB,mEAAW,IAAIjB,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAAX,EAAkC,YAAlC,EAAgD,IAAhD,CAAnB;AAEA,iBAAKnC,cAAL,CAAoBqD,QAApB,CAA6BC,SAA7B,CAAuC,UAAAD,QAAQ,EAAI;AACjD,kBAAI,CAACA,QAAQ,CAACE,GAAT,CAAa,YAAb,CAAL,EAAiC;AAC/B,qBAAI,CAACtD,MAAL,CAAYuD,QAAZ,CAAqB,CAAC,EAAD,CAArB;;AACA;AACD;;AACD,mBAAI,CAACC,SAAL,GAAiBJ,QAAQ,CAACK,GAAT,CAAa,YAAb,CAAjB;AACD,aAND;AAOA,iBAAKxD,eAAL,CAAqByD,WAArB,GAAmCL,SAAnC,CAA6C,UAAAM,IAAI,EAAI;AACnD,mBAAI,CAAC3B,QAAL,GAAgB2B,IAAI,CAACA,IAArB;AACD,aAFD;AAIA,iBAAKC,UAAL;AAEA,iBAAKxD,aAAL,CAAmByD,IAAnB,CACE,KAAK3D,eAAL,CAAqB4D,MAArB,CAA4BT,SAA5B,CAAsC;AAAA,qBAAM,KAAI,CAACO,UAAL,EAAN;AAAA,aAAtC,CADF;AAGD;AAED;;;;AAzG0C;AAAA;AAAA,wCA4G5B;AACZ,iBAAKxD,aAAL,CAAmB2D,OAAnB,CAA2B,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,WAAJ,EAAJ;AAAA,aAA9B;AACD;AA9GyC;AAAA;AAAA,uCAgH7B;AAAA;;AACX,iBAAK/D,eAAL,CAAqBgE,oBAArB,CAA0C,SAA1C,EAAqDb,SAArD,CAA+D,UAAAM,IAAI,EAAI;AACrE,oBAAI,CAAChD,aAAL,GAAqBgD,IAAI,CAACA,IAA1B;AACD,aAFD;AAGD;AApHyC;;AAAA;AAAA,S;;;;gBAfnC;;gBAAgB;;gBAKhB;;gBAJA;;gBAGA;;;;AAWI7D,qCAA+B,6DAL3C,gEAAU;AACTqE,gBAAQ,EAAE,4BADD;AAETC,gBAAQ,EAAR,2FAFS;;AAAA,OAAV,CAK2C,GAA/BtE,+BAA+B,CAA/B;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA","file":"log-in-leader-page-leader-project-administration-leader-project-administration-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaderProjectAdministrationPage } from './leader-project-administration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaderProjectAdministrationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LeaderProjectAdministrationPage]\n})\nexport class LeaderProjectAdministrationPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { Projectleader } from 'src/models/Projectleader';\nimport { Project } from 'src/models/Project.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-project-administration',\n  templateUrl: './leader-project-administration.page.html',\n  styleUrls: ['./leader-project-administration.page.scss'],\n})\nexport class LeaderProjectAdministrationPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  leaderUrl: string;\n\n  loadedLeader: Projectleader = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    project_id: 0,\n  };\n\n  leadedProject: Project = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: []\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en')\n  };\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  leaderLoadingProject: string;\n  leaderWrongTime: string;\n\n  imageUrl = this.config.backend_config.imageUrl;\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private scheduleService: ScheduleService,\n              private projectsService: ProjectsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.leaderLoadingProject = this.config.get_error('leader-loading_project');\n    this.leaderWrongTime = this.config.get_error('leader-wrong_time');\n\n    this.currentDate = formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('LeaderName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.leaderUrl = paramMap.get('LeaderName');\n    });\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getProject();\n\n    this.subscriptions.push(\n      this.projectsService.update.subscribe(() => this.getProject()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getProject() {\n    this.projectsService.getSelfLeadedProject('leaders').subscribe(data => {\n      this.leadedProject = data.data;\n    });\n  }\n\n}\n","export default \"img {\\n  width: auto;\\n  margin: 10px auto auto auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcbGVhZGVyLXByb2plY3QtYWRtaW5pc3RyYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLDJCQUFBO0FBQ0oiLCJmaWxlIjoibGVhZGVyLXByb2plY3QtYWRtaW5pc3RyYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nIHtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG4gICAgbWFyZ2luOiAxMHB4IGF1dG8gYXV0byBhdXRvO1xyXG59Il19 */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/{{ projectNoun}}leiter/{{ leaderUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>{{ projectNoun }}</ion-title>\\n    <ion-button *ngIf=\\\" !!+leadedProject.editable == false || currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" [disabled]=\\\"currentDate <= this.schedule.begin || currentDate > this.schedule.control\\\" color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">\\n      <ion-icon name=\\\"create\\\"></ion-icon>\\n    </ion-button>\\n    <ion-button *ngIf=\\\"currentDate > this.schedule.control && currentDate <= this.schedule.registration && !!+leadedProject.editable == true\\\" color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">\\n      <ion-icon name=\\\"create\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"leadedProject.leader_id == null && leadedProject.title == null && leadedProject.authorized == null\\\" class=\\\"content\\\">\\n    <ion-card-content>\\n      <ion-text color=\\\"danger\\\">{{ leaderLoadingProject }}</ion-text>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"!!+loadedLeader.project_id != null\\\" class=\\\"content\\\">\\n    <ion-img *ngIf=\\\"leadedProject.image != '' && leadedProject.image != null\\\" src='{{ imageUrl }}{{ leadedProject.image }}'></ion-img>\\n    <ion-card-header>\\n      <ion-card-title>{{ leadedProject.title }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item-group>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\" class=\\\"descr\\\">\\n          <ion-text color=\\\"text\\\">{{ leadedProject.descr }}</ion-text>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Leiter</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ leadedProject.leader_name }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Kosten</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ leadedProject.cost }}€</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Zeitraum</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">1.Tag:  {{ leadedProject.first_day_begin }} bis {{ leadedProject.first_day_end }}</ion-label>\\n        </ion-item>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">2.Tag:  {{ leadedProject.second_day_begin }} bis {{ leadedProject.second_day_end }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ leadedProject.min_grade }}. bis {{ leadedProject.max_grade }}.Klasse</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Teinehmeranzahl</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">von {{ leadedProject.min_participants }} bis {{ leadedProject.max_participants }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Nachrichten</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"leadedProject.messages.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let message of leadedProject.messages\\\">\\n            <ion-card class=\\\"message\\\" color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"buttons\\\">{{ message.sender_name }}</ion-text><br>\\n                <ion-text color=\\\"text\\\">{{ message.message }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Teilnehmer</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"leadedProject.participants.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let participant of leadedProject.participants\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button color=\\\"buttons\\\" *ngIf=\\\" !!+leadedProject.editable == false || currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" [disabled]=\\\"currentDate <= this.schedule.begin || currentDate > this.schedule.control\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\"  color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">{{ projectNoun }} bearbeiten</ion-button>\\n          <ion-button color=\\\"buttons\\\" *ngIf=\\\"currentDate > this.schedule.control && currentDate <= this.schedule.registration && !!+leadedProject.editable == true\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\"  color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">{{ projectNoun }} nachbessern</ion-button>\\n          <ion-text *ngIf=\\\"currentDate <= this.schedule.begin && !!+leadedProject.editable == false || currentDate > this.schedule.control && !!+leadedProject.editable == false\\\" color=\\\"text\\\">{{ leaderWrongTime }}</ion-text>\\n        </div>\\n      </ion-item-group>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"]}
{"version":3,"sources":["./src/app/log-in/admin-page/admin-logs/admin-logs.module.ts","./src/app/log-in/admin-page/admin-logs/admin-logs.page.ts","./src/app/log-in/admin-page/admin-logs/admin-logs.page.scss","./src/app/log-in/admin-page/admin-logs/admin-logs.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEK;AAElD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAa;KACzB;CACF,CAAC;IAWW,mBAAmB,SAAnB,mBAAmB;CAAG;AAAtB,mBAAmB;IAT/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,8DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB6B;AACZ;AACe;AAEnB;AACuB;AACJ;AACF;AACb;IAQpC,aAAa,SAAb,aAAa;IAsCxB,YAAoB,cAA8B,EAC9B,eAAgC,EAChC,aAA4B,EAC5B,SAA0B,EAC1B,KAAmB,EACnB,MAAqB;QALrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAiB;QAC1B,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAe;QA1CjC,kBAAa,GAAmB,EAAE,CAAC;QAI3C,iBAAY,GAAU,EAAE,CAAC;QACzB,gBAAW,GAAG;YACZ,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,EAAE;YACT,kBAAkB,EAAE,EAAE;SACvB,CAAC;QAEF;;WAEG;QACH,aAAQ,GAAa;YACnB,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI;YACb,YAAY,EAAE,IAAI;YAClB,aAAa,EAAE,IAAI;YACnB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,GAAG,EAAE,IAAI;SACV,CAAC;QASF;;WAEG;QACH,cAAS,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;IAOD,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAElD,IAAI,CAAC,WAAW,GAAG,kEAAU,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QAE9D,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAC/D,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAClE,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACtE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnC,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,OAAO;QACvB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACpB,MAAM,EAAE,kBAAkB;YAC1B,OAAO,EAAE,2CAA2C;YACpD,OAAO,EAAE,CAAC;oBACR,IAAI,EAAE,WAAW;oBACjB,IAAI,EAAE,QAAQ;iBACf,EAAE;oBACD,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,GAAG,EAAE;wBACZ,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE;4BAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;gCACzD,OAAO,OAAO,KAAK,WAAW,CAAC,EAAE,CAAC;4BACpC,CAAC,CAAC,CAAC;4BACH,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;yBAC/C;6BAAM;4BACL,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;yBACpE;oBACH,CAAC;iBACF,CAAC;SACH,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAChB,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAxIQ,8DAAc;YAId,iFAAe;YACf,6EAAa;YAEb,+DAAe;YADf,2EAAY;YALZ,6EAAa;;AAcT,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,kFAAqC;;KAEtC,CAAC;GACW,aAAa,CAyHzB;AAzHyB;;;;;;;;;;;;;AChB1B;AAAe,yEAAU,iBAAiB,GAAG,6CAA6C,uRAAuR,E;;;;;;;;;;;;ACAjX;AAAe,4NAA6J,aAAa,SAAS,YAAY,8ZAA8Z,QAAQ,+SAA+S,qBAAqB,24CAA24C,E","file":"log-in-admin-page-admin-logs-admin-logs-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminLogsPage } from './admin-logs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLogsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminLogsPage]\n})\nexport class AdminLogsPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AlertController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-logs',\n  templateUrl: './admin-logs.page.html',\n  styleUrls: ['./admin-logs.page.scss'],\n})\nexport class AdminLogsPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n\n  SignUpEmails: any[] = [];\n  SignUpEmail = {\n    id: 0,\n    email: '',\n    email_confirmation: ''\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  text: string;\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private scheduleService: ScheduleService,\n              private adminsService: AdminsService,\n              private alertCtrl: AlertController,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('admin-logs');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n\n    this.getSchedule();\n    this.getSignUpemails();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.adminsService.update.subscribe(() => this.getSignUpemails()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getSignUpemails() {\n    this.adminsService.getAllSignUpEmails().subscribe(data => {\n      this.SignUpEmails = data.data;\n    });\n  }\n\n  postSignUpEmail(form) {\n    this.adminsService.createSignUpEmail(this.SignUpEmail).subscribe(data => {\n      this.SignUpEmails.push(data.data);\n      this.alert.alert(data.message);\n      form.reset();\n      this.adminsService.update.emit();\n    }, error => {\n      this.alert.error('Freigeben der E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  deleteSignUpEmail(emailID) {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie diese E-Mail wirklich sperren?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Sperren',\n        handler: () => {\n          if (this.SignUpEmail.email === this.SignUpEmail.email_confirmation) {\n            this.SignUpEmails = this.SignUpEmails.filter(filterEmail => {\n              return emailID !== filterEmail.id;\n            });\n            this.adminsService.deleteSignUpEmail(emailID);\n          } else {\n            this.alert.error('Die angegebenen E-Mails stimmen nicht überein.');\n          }\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n","export default \"ion-col {\\n  height: 80px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcYWRtaW4tbG9ncy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0oiLCJmaWxlIjoiYWRtaW4tbG9ncy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29sIHtcclxuICAgIGhlaWdodDogODBweDtcclxufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Appverwaltung</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>E-Mails für Admin-Accounts verwalten</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"SignUpEmails.length\\\">\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let SignUpEmail of SignUpEmails\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-content>\\n            <ion-text color=\\\"text\\\">{{ SignUpEmail.email }}</ion-text>\\n          </ion-card-content>\\n        </ion-card>\\n        <ion-buttons (click)=\\\"deleteSignUpEmail(SignUpEmail.id)\\\"><ion-icon color=\\\"danger\\\" name=\\\"close\\\"></ion-icon></ion-buttons>\\n      </ion-item>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <form #signUpEmail=\\\"ngForm\\\" name=\\\"SignUpEmailForm\\\" (ngSubmit)=\\\"postSignUpEmail(signUpEmail)\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\"color=\\\"background\\\">\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"SignUpEmail.email\\\" name=\\\"Email\\\" placeholder=\\\"E-Mail\\\" required type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"SignUpEmail.email_confirmation\\\" name=\\\"Email\\\" placeholder=\\\"E-Mail-Bestätigung\\\" required type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button color=\\\"buttons\\\" [disabled]=\\\"signUpEmail.invalid || currentDate <= schedule.begin && currentDate > schedule.sort_students\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Freigeben</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["webpack:///src/app/log-in/reset-password/reset-password.page.ts","webpack:///src/app/log-in/reset-password/reset-password.module.ts","webpack:///src/app/log-in/reset-password/reset-password.page.scss","webpack:///src/app/log-in/reset-password/reset-password.page.html"],"names":["ResetPasswordPage","activatedRoute","router","config","auth","alert","subscriptions","formType","resetPasswordStudent","token","email","user_type","password","password_confirmation","resetPasswordLeader","resetPasswordAdmin","projectNoun","app_config","project_noun","eventName","event_name","text","get_content","paramMap","subscribe","has","snapshot","get","navigate","forEach","sub","unsubscribe","keyCode","type","form","resetStudentPassword","resetLeaderPassword","resetAdminPassword","nextInput","setFocus","resetPassword","data","message","reset","error","selector","template","routes","path","component","ResetPasswordPageModule","imports","forChild","declarations"],"mappings":"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","file":"log-in-reset-password-reset-password-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  formType = 'student';\n\n  resetPasswordStudent = {\n    token: '',\n    email: '',\n    user_type: 'students',\n    password: '',\n    password_confirmation: ''\n  };\n\n  resetPasswordLeader = {\n    token: '',\n    email: '',\n    user_type: 'leaders',\n    password: '',\n    password_confirmation: ''\n  };\n\n  resetPasswordAdmin = {\n    token: '',\n    email: '',\n    user_type: 'admins',\n    password: '',\n    password_confirmation: ''\n  };\n\n  text: string;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private config: ConfigService,\n              private auth: AuthenticationService,\n              private alert: AlertService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('reset-password');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (paramMap.has('ResetToken')) {\n        this.resetPasswordAdmin.token = this.activatedRoute.snapshot.paramMap.get('ResetToken');\n        this.resetPasswordLeader.token = this.activatedRoute.snapshot.paramMap.get('ResetToken');\n        this.resetPasswordStudent.token = this.activatedRoute.snapshot.paramMap.get('ResetToken');\n      } else {\n        this.router.navigate([this.eventName + '/Anmeldung']);\n      }\n    });\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  eventHandler(keyCode, type= 'students', form) {\n    if (keyCode === 13) {\n      if (type === 'students') {\n        this.resetStudentPassword(form);\n      } else if (type === 'leaders') {\n        this.resetLeaderPassword(form);\n      } else if (type === 'admins') {\n        this.resetAdminPassword(form);\n      }\n    }\n  }\n\n  /**\n   * Sets the focus on the given element if ENTER is pressed\n   * @param keyCode Contains the code of the pressed key\n   * @param nextInput Contains the next element to be focused\n   */\n  nextInput(keyCode, nextInput) {\n    if (keyCode === 13) {\n      nextInput.setFocus();\n    }\n  }\n\n  resetStudentPassword(form) {\n    this.auth.resetPassword(this.resetPasswordStudent).subscribe(data => {\n      this.alert.alert(data.message);\n      form.reset();\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Zurücksetzen des Passworts fehlgeschalgen!', error.error);\n    });\n  }\n\n  resetLeaderPassword(form) {\n    this.auth.resetPassword(this.resetPasswordLeader).subscribe(data => {\n      this.alert.alert(data.message);\n      form.reset();\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Zurücksetzen des Passworts fehlgeschalgen!', error.error);\n    });\n  }\n\n  resetAdminPassword(form) {\n    this.auth.resetPassword(this.resetPasswordAdmin).subscribe(data => {\n      this.alert.alert(data.message);\n      form.reset();\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Zurücksetzen des Passworts fehlgeschalgen!', error.error);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXNldC1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Anmeldung\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Passwort ändern</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-card-title>Passwort ändern</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-segment color=\\\"buttons\\\" [(ngModel)]=\\\"formType\\\">\\n        <ion-segment-button value=\\\"student\\\">\\n          <ion-label>Schüler</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"leader\\\">\\n          <ion-label>{{ projectNoun }}leiter</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"admin\\\">\\n          <ion-label>Admin</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n\\n      <form #studentResetPassword=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"resetStudentPassword(studentResetPassword)\\\" [hidden]=\\\"formType != 'student'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Schüler</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"resetPasswordStudent.email\\\" name=\\\"email\\\" placeholder=\\\"E-Mail\\\" required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password\\\" required [(ngModel)]=\\\"resetPasswordStudent.password\\\" placeholder=\\\"Passwort\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password_confirmation\\\" required [(ngModel)]=\\\"resetPasswordStudent.password_confirmation\\\" placeholder=\\\"Passwort bestätigen\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"studentResetPassword.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Passwort ändern</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form #leaderResetPassword=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"resetLeaderPassword(leaderResetPassword)\\\" [hidden]=\\\"formType != 'leader'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>{{ projectNoun }}leiter</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"resetPasswordLeader.email\\\" name=\\\"email\\\" placeholder=\\\"E-Mail\\\" required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password\\\" required [(ngModel)]=\\\"resetPasswordLeader.password\\\" placeholder=\\\"Passwort\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password_confirmation\\\" required [(ngModel)]=\\\"resetPasswordLeader.password_confirmation\\\" placeholder=\\\"Passwort bestätigen\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"leaderResetPassword.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Passwort ändern</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form #adminResetPassword=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"resetAdminPassword(adminResetPassword)\\\" [hidden]=\\\"formType != 'admin'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Admins</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"resetPasswordAdmin.email\\\" name=\\\"email\\\" placeholder=\\\"E-Mail\\\" required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password\\\" required [(ngModel)]=\\\"resetPasswordAdmin.password\\\" placeholder=\\\"Passwort\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password_confirmation\\\" required [(ngModel)]=\\\"resetPasswordAdmin.password_confirmation\\\" placeholder=\\\"Passwort bestätigen\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"adminResetPassword.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Passwort ändern</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"]}
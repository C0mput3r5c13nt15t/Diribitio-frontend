{"version":3,"sources":["webpack:///src/app/settings/settings.page.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.html"],"names":["SettingsPage","SettingsPageModule","routes","path","component","settings","config","subscriptions","background","this","ui","default_background","color","default_color","text1","get_content_by_index","text2","colorAndBackground","theme","split","forEach","sub","unsubscribe","change_theme","change","forChild"],"mappings":"0aAUaA,ECeAC,E,oFAhBPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WDFSJ,EAAN,WAQL,WAAoBK,EACAC,aADA,KAAAD,WACA,KAAAC,SARZ,KAAAC,cAAgC,GAExC,KAAAC,WAAaC,KAAKH,OAAOI,GAAGC,mBAC5B,KAAAC,MAAQH,KAAKH,OAAOI,GAAGG,c,UAJlB,O,EAAA,G,EAAA,kCAYHJ,KAAKK,MAAQL,KAAKH,OAAOS,qBAAqB,WAAY,GAC1DN,KAAKO,MAAQP,KAAKH,OAAOS,qBAAqB,WAAY,GAE1D,IACME,EADQR,KAAKJ,SAASa,MACKC,MAAM,IAAK,GAC5CV,KAAKD,WAAaS,EAAmB,GACrCR,KAAKG,MAAQK,EAAmB,KAlB7B,oCAyBHR,KAAKF,cAAca,QAAQC,YAAG,OAAIA,EAAIC,kBAzBnC,+BA6BHb,KAAKJ,SAASkB,aAAad,KAAKD,WAAYC,KAAKG,Y,2BA7B9C,K,sCAAMZ,GAAY,sB,uBAAZA,EAAY,kXEVzB,qBACE,wBACE,oBAAW,wBAAa,OAC1B,OACF,OAEA,wBACE,qBACE,0BACE,yBAAgB,0BAAY,OAC5B,4BAAmB,uBAAW,OAChC,OACA,4BACE,uBACE,SACF,OACF,OACA,4BACE,yBAAsC,yDAAwB,8BAAc,EAAAwB,WAC1E,gCACE,uBAAwB,kBAAM,OAChC,OACA,gCACE,uBAAwB,gBAAI,OAC9B,OACA,gCACE,uBAAwB,uBAAW,OACrC,OACF,OACF,OACA,2BACE,6BAAmB,uBAAW,OAChC,OACA,4BACE,uBACE,SACF,OACF,OACA,4BACE,yBAAuC,oDAAmB,8BAAc,EAAAA,WACtE,gCACE,uBAAwB,gBAAI,OAC9B,OACA,gCACE,uBAAwB,gBAAI,OAC9B,OACA,iCACE,uBAAwB,gBAAI,OAC9B,OACA,iCACE,uBAAwB,mBAAI,OAC9B,OACF,OACF,OACF,OACF,Q,MAzCQ,+BAIoC,qCAiBpC,+BAIqC,kC,4FDdtC,IAAMvB,EAAN,yB,qBAAMA,I,oDAAAA,IAAkB,SARpB,CACP,IACA,IACA,IACA,IAAawB,SAASvB,O","file":"x","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SettingsService } from 'src/app/services/settings.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  background = this.config.ui.default_background;\n  color = this.config.ui.default_color;\n  text1: string;\n  text2: string;\n\n  constructor(private settings: SettingsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text1 = this.config.get_content_by_index('settings', 0);\n    this.text2 = this.config.get_content_by_index('settings', 1);\n\n    const theme = this.settings.theme;\n    const colorAndBackground = theme.split('-', 2);\n    this.background = colorAndBackground[0];\n    this.color = colorAndBackground[1];\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  change() {\n    this.settings.change_theme(this.background, this.color);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-title>Einstellungen</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\"class=\"content\">\n    <ion-card-header>\n      <ion-card-title>Theme ändern</ion-card-title>\n      <ion-card-subtitle>Hintergrund</ion-card-subtitle>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-label color=\"text\">\n        {{ text1 }}\n      </ion-label>\n    </ion-card-content>\n    <ion-card-content>\n      <ion-segment mode=\"md\"color=\"buttons\" [(ngModel)]=\"background\" (ionChange)=\"change()\">\n        <ion-segment-button value=\"dark\">\n          <ion-label color=\"text\">Dunkel</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value=\"light\">\n          <ion-label color=\"text\">Hell</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value=\"auto\">\n          <ion-label color=\"text\">Automatisch</ion-label>\n        </ion-segment-button>\n      </ion-segment>\n    </ion-card-content>\n    <ion-card-header>\n      <ion-card-subtitle>Vordergrund</ion-card-subtitle>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-label color=\"text\">\n        {{ text2 }}\n      </ion-label>\n    </ion-card-content>\n    <ion-card-content>\n      <ion-segment mode=\"md\" color=\"buttons\" [(ngModel)]=\"color\" (ionChange)=\"change()\">\n        <ion-segment-button value=\"blue\">\n          <ion-label color=\"text\">Blau</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value=\"pink\">\n          <ion-label color=\"text\">Pink</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value=\"yellow\">\n          <ion-label color=\"text\">Gelb</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value=\"green\">\n          <ion-label color=\"text\">Grün</ion-label>\n        </ion-segment-button>\n      </ion-segment>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-exchanges/admin-exchange-detail/admin-exchange-detail.page.html","webpack:///src/app/log-in/admin-page/admin-exchanges/admin-exchange-detail/admin-exchange-detail.page.ts","webpack:///src/app/log-in/admin-page/admin-exchanges/admin-exchange-detail/admin-exchange-detail.module.ts","webpack:///src/app/log-in/admin-page/admin-exchanges/admin-exchange-detail/admin-exchange-detail.page.scss"],"names":["AdminExchangeDetailPage","activatedRoute","router","exchangesService","projectService","alertCtrl","config","subscriptions","loadedExchange","id","sender_id","receiver_id","confirmed","accomplished","sender","receiver","firstProjectName","firstMinGrade","firstMaxGrade","secondProjectName","secondMinGrade","secondMaxGrade","projectNoun","app_config","project_noun","eventName","event_name","paramMap","subscribe","has","navigate","adminUrl","get","exchangeId","Number","getExchange","push","update","forEach","sub","unsubscribe","data","getProject","project_id","projectData","title","min_grade","max_grade","create","header","message","buttons","text","role","handler","deleteExchange","then","alertEl","present","carryOutExchange","selector","template","routes","path","component","AdminExchangeDetailPageModule","imports","forChild","declarations"],"mappings":"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","file":"log-in-admin-page-admin-exchanges-admin-exchange-detail-admin-exchange-detail-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n      <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n        <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}/Tauschanfragen\\\"></ion-back-button>\\n      </ion-button>\\n    <ion-title>Tauschanfrage</ion-title>\\n    <ion-button color=\\\"buttons\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"deleteExchange()\\\">\\n      <ion-icon name=\\\"trash\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header *ngIf=\\\"loadedExchange.sender && loadedExchange.receiver\\\">\\n      <ion-card-title>Tauschanfrage von {{ loadedExchange.sender.first_name }} {{ loadedExchange.sender.last_name }} und {{ loadedExchange.receiver.first_name }} {{ loadedExchange.receiver.last_name }}</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <form>\\n        <ion-item-group *ngIf=\\\"loadedExchange.sender && loadedExchange.receiver\\\">\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">{{ loadedExchange.sender.first_name }} {{ loadedExchange.sender.last_name }} (Ersteller/in der Anfrage)</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            Klasse: {{ loadedExchange.sender.grade }}{{ loadedExchange.sender.letter }}\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            {{ projectNoun }}: {{ firstProjectName }} ({{ firstMinGrade }}.Klasse bis {{ firstMaxGrade }}.Klasse)\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label *ngIf=\\\"loadedExchange.receiver.grade > firstMaxGrade || loadedExchange.receiver.grade < firstMinGrade\\\" color=\\\"danger\\\">{{ loadedExchange.receiver.first_name }} {{ loadedExchange.receiver.last_name }} erfüllt NICHT die {{ projectNoun }}bedingungen!</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">{{ loadedExchange.receiver.first_name }} {{ loadedExchange.receiver.last_name }} (Empfänger/in)</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            Klasse: {{ loadedExchange.receiver.grade }}{{ loadedExchange.receiver.letter }}\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            {{ projectNoun }}: {{ secondProjectName }} ({{ secondMinGrade }}.Klasse bis {{ secondMaxGrade }}.Klasse)\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label *ngIf=\\\"loadedExchange.sender.grade > secondMaxGrade || loadedExchange.sender.grade < secondMinGrade\\\" color=\\\"danger\\\">{{ loadedExchange.sender.first_name }} {{ loadedExchange.sender.last_name }} erfüllt NICHT die {{ projectNoun }}bedingungen!</ion-label>\\n          </ion-item>\\n        </ion-item-group>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button color=\\\"buttons\\\" (click)=\\\"carryOutExchange()\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Tausch bestätigen</ion-button>\\n        </div>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\"  color=\\\"buttons\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"deleteExchange()\\\">Tauschanfrage löschen</ion-button>\\n        </div>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ExchangesService } from 'src/app/services/exchanges.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Exchange } from 'src/models/Exchange.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-exchange-detail',\n  templateUrl: './admin-exchange-detail.page.html',\n  styleUrls: ['./admin-exchange-detail.page.scss'],\n})\nexport class AdminExchangeDetailPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n  exchangeId: number;\n\n  loadedExchange: Exchange = {\n    id: 0,\n    sender_id: 0,\n    receiver_id: 0,\n    confirmed: 0,\n    accomplished: 0,\n    sender: null,\n    receiver: null\n  };\n\n  firstProjectName = '';\n  firstMinGrade = 0;\n  firstMaxGrade = 0;\n  secondProjectName = '';\n  secondMinGrade = 0;\n  secondMaxGrade = 0;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private exchangesService: ExchangesService,\n              private projectService: ProjectsService,\n              private alertCtrl: AlertController,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ExchangeID')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.adminUrl = paramMap.get('AdminName');\n      this.exchangeId = Number(paramMap.get('ExchangeID'));\n    });\n\n    this.getExchange();\n\n    this.subscriptions.push(\n      this.exchangesService.update.subscribe(() => this.getExchange()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getExchange() {\n    this.exchangesService.getExchange(this.exchangeId).subscribe(data => {\n      this.loadedExchange = data.data;\n      this.projectService.getProject(this.loadedExchange.sender.project_id).subscribe(projectData => {\n        this.firstProjectName = projectData.data.title;\n        this.firstMinGrade = projectData.data.min_grade;\n        this.firstMaxGrade = projectData.data.max_grade;\n      });\n      this.projectService.getProject(this.loadedExchange.receiver.project_id).subscribe(projectData => {\n        this.secondProjectName = projectData.data.title;\n        this.secondMinGrade = projectData.data.min_grade;\n        this.secondMaxGrade = projectData.data.max_grade;\n      });\n    });\n  }\n\n  deleteExchange() {\n    this.alertCtrl.create({\n      header: 'Bist du sicher?',\n      message: 'Wollen Sie diesen Tausch wirklich unwiederruflich löschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Löschen',\n        handler: () => {\n          this.exchangesService.deleteExchange(this.loadedExchange.id);\n          this.router.navigate([this.eventName + '/Admin/' + this.adminUrl + '/Tauschanfragen']);\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n  carryOutExchange() {\n    this.exchangesService.carryOutExchange(this.loadedExchange.id);\n    this.router.navigate([this.eventName + '/Admin/' + this.adminUrl + '/Tauschanfragen']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminExchangeDetailPage } from './admin-exchange-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminExchangeDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminExchangeDetailPage]\n})\nexport class AdminExchangeDetailPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi1leGNoYW5nZS1kZXRhaWwucGFnZS5zY3NzIn0= */\";"]}
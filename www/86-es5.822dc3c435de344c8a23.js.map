{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-select_3.entry.js"],"names":["findCheckedOption","el","tagName","nodeType","toUpperCase","Array","from","querySelectorAll","find","o","value","Select","hostRef","this","ionChange","ionCancel","ionFocus","ionBlur","ionStyle","inputId","selectIds","didInit","isExpanded","disabled","cancelText","okText","name","multiple","interfaceOptions","onClick","ev","setFocus","open","onFocus","emit","onBlur","emitStyle","updateOverlayOptions","mutationO","containerEl","onChange","MutationObserver","mutation","mutationList","newOption","forEach","mut","i","addedNodes","length","observe","childList","subtree","async","disconnect","event","createOverlay","overlay","onDidDismiss","then","present","selectInterface","console","warn","openPopover","openActionSheet","openAlert","childOpts","buttons","createActionSheetButtons","popover","querySelector","options","createPopoverOptions","inputs","createAlertInputs","data","selectValue","actionSheetButtons","map","option","getOptionValue","copyClasses","classList","filter","cls","join","optClass","OPTION_CLASS","role","isOptionSelected","compareWith","text","textContent","cssClass","handler","push","inputType","type","label","checked","close","mode","popoverOpts","Object","assign","component","componentProps","header","subHeader","message","create","actionSheetOpts","getLabel","labelText","alertOpts","selectedValues","dismiss","Promise","resolve","f","getText","selectedText","generateText","buttonEl","focus","placeholder","hasValue","labelId","id","addPlaceholderClass","selectText","parseValue","selectTextClasses","textPart","class","part","ref","btnEl","currentValue","compareValue","isArray","some","val","compareOptions","toString","includes","opts","v","textForValue","opt","selectOpt","style","ios","md","SelectOption","selectOptionIds","SelectPopover","target","checkedOption","checkedValue"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-5c745fbd.js';\nimport './hardware-back-button-7b6ede21.js';\nimport { c as popoverController, b as actionSheetController, a as alertController, s as safeCall } from './overlays-2cc140a1.js';\nimport { h as hostContext, g as getClassMap } from './theme-5641d27f.js';\n\nconst watchForOptions = (containerEl, tagName, onChange) => {\n    /* tslint:disable-next-line */\n    if (typeof MutationObserver === 'undefined') {\n        return;\n    }\n    const mutation = new MutationObserver(mutationList => {\n        onChange(getSelectedOption(mutationList, tagName));\n    });\n    mutation.observe(containerEl, {\n        childList: true,\n        subtree: true\n    });\n    return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n    let newOption;\n    mutationList.forEach(mut => {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n            newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n        }\n    });\n    return newOption;\n};\nconst findCheckedOption = (el, tagName) => {\n    if (el.nodeType !== 1) {\n        return undefined;\n    }\n    const options = (el.tagName === tagName.toUpperCase())\n        ? [el]\n        : Array.from(el.querySelectorAll(tagName));\n    return options.find((o) => o.value === el.value);\n};\n\nconst selectIosCss = \":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.select-icon{position:relative;opacity:0.33}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:20px}.select-icon{width:12px;height:18px}\";\n\nconst selectMdCss = \":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.select-icon{position:relative;opacity:0.33}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:16px}.select-icon{width:19px;height:19px}\";\n\nconst Select = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.inputId = `ion-sel-${selectIds++}`;\n        this.didInit = false;\n        this.isExpanded = false;\n        /**\n         * If `true`, the user cannot interact with the select.\n         */\n        this.disabled = false;\n        /**\n         * The text to display on the cancel button.\n         */\n        this.cancelText = 'Cancel';\n        /**\n         * The text to display on the ok button.\n         */\n        this.okText = 'OK';\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the select can accept multiple values.\n         */\n        this.multiple = false;\n        /**\n         * The interface the select should use: `action-sheet`, `popover` or `alert`.\n         */\n        this.interface = 'alert';\n        /**\n         * Any additional options that the `alert`, `action-sheet` or `popover` interface\n         * can take. See the [ion-alert docs](../alert), the\n         * [ion-action-sheet docs](../action-sheet) and the\n         * [ion-popover docs](../popover) for the\n         * create options for each interface.\n         *\n         * Note: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.\n         */\n        this.interfaceOptions = {};\n        this.onClick = (ev) => {\n            this.setFocus();\n            this.open(ev);\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    valueChanged() {\n        this.emitStyle();\n        if (this.didInit) {\n            this.ionChange.emit({\n                value: this.value,\n            });\n        }\n    }\n    async connectedCallback() {\n        this.updateOverlayOptions();\n        this.emitStyle();\n        this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n            this.updateOverlayOptions();\n        });\n    }\n    disconnectedCallback() {\n        if (this.mutationO) {\n            this.mutationO.disconnect();\n            this.mutationO = undefined;\n        }\n    }\n    componentDidLoad() {\n        this.didInit = true;\n    }\n    /**\n     * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n     * depending on the `interface` property on the `ion-select`.\n     *\n     * @param event The user interface event that called the open.\n     */\n    async open(event) {\n        if (this.disabled || this.isExpanded) {\n            return undefined;\n        }\n        const overlay = this.overlay = await this.createOverlay(event);\n        this.isExpanded = true;\n        overlay.onDidDismiss().then(() => {\n            this.overlay = undefined;\n            this.isExpanded = false;\n            this.setFocus();\n        });\n        await overlay.present();\n        return overlay;\n    }\n    createOverlay(ev) {\n        let selectInterface = this.interface;\n        if ((selectInterface === 'action-sheet' || selectInterface === 'popover') && this.multiple) {\n            console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover' && !ev) {\n            console.warn('Select interface cannot be a \"popover\" without passing an event. Using the \"alert\" interface instead.');\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover') {\n            return this.openPopover(ev);\n        }\n        if (selectInterface === 'action-sheet') {\n            return this.openActionSheet();\n        }\n        return this.openAlert();\n    }\n    updateOverlayOptions() {\n        const overlay = this.overlay;\n        if (!overlay) {\n            return;\n        }\n        const childOpts = this.childOpts;\n        const value = this.value;\n        switch (this.interface) {\n            case 'action-sheet':\n                overlay.buttons = this.createActionSheetButtons(childOpts, value);\n                break;\n            case 'popover':\n                const popover = overlay.querySelector('ion-select-popover');\n                if (popover) {\n                    popover.options = this.createPopoverOptions(childOpts, value);\n                }\n                break;\n            case 'alert':\n                const inputType = (this.multiple ? 'checkbox' : 'radio');\n                overlay.inputs = this.createAlertInputs(childOpts, inputType, value);\n                break;\n        }\n    }\n    createActionSheetButtons(data, selectValue) {\n        const actionSheetButtons = data.map(option => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                role: (isOptionSelected(value, selectValue, this.compareWith) ? 'selected' : ''),\n                text: option.textContent,\n                cssClass: optClass,\n                handler: () => {\n                    this.value = value;\n                }\n            };\n        });\n        // Add \"cancel\" button\n        actionSheetButtons.push({\n            text: this.cancelText,\n            role: 'cancel',\n            handler: () => {\n                this.ionCancel.emit();\n            }\n        });\n        return actionSheetButtons;\n    }\n    createAlertInputs(data, inputType, selectValue) {\n        const alertInputs = data.map(option => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                type: inputType,\n                cssClass: optClass,\n                label: option.textContent || '',\n                value,\n                checked: isOptionSelected(value, selectValue, this.compareWith),\n                disabled: option.disabled\n            };\n        });\n        return alertInputs;\n    }\n    createPopoverOptions(data, selectValue) {\n        const popoverOptions = data.map(option => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList).filter(cls => cls !== 'hydrated').join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                text: option.textContent || '',\n                cssClass: optClass,\n                value,\n                checked: isOptionSelected(value, selectValue, this.compareWith),\n                disabled: option.disabled,\n                handler: () => {\n                    this.value = value;\n                    this.close();\n                }\n            };\n        });\n        return popoverOptions;\n    }\n    async openPopover(ev) {\n        const interfaceOptions = this.interfaceOptions;\n        const mode = getIonMode(this);\n        const value = this.value;\n        const popoverOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], event: ev, componentProps: {\n                header: interfaceOptions.header,\n                subHeader: interfaceOptions.subHeader,\n                message: interfaceOptions.message,\n                value,\n                options: this.createPopoverOptions(this.childOpts, value)\n            } });\n        return popoverController.create(popoverOpts);\n    }\n    async openActionSheet() {\n        const mode = getIonMode(this);\n        const interfaceOptions = this.interfaceOptions;\n        const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts, this.value), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n        return actionSheetController.create(actionSheetOpts);\n    }\n    async openAlert() {\n        const label = this.getLabel();\n        const labelText = (label) ? label.textContent : null;\n        const interfaceOptions = this.interfaceOptions;\n        const inputType = (this.multiple ? 'checkbox' : 'radio');\n        const mode = getIonMode(this);\n        const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : labelText, inputs: this.createAlertInputs(this.childOpts, inputType, this.value), buttons: [\n                {\n                    text: this.cancelText,\n                    role: 'cancel',\n                    handler: () => {\n                        this.ionCancel.emit();\n                    }\n                },\n                {\n                    text: this.okText,\n                    handler: (selectedValues) => {\n                        this.value = selectedValues;\n                    }\n                }\n            ], cssClass: ['select-alert', interfaceOptions.cssClass,\n                (this.multiple ? 'multiple-select-alert' : 'single-select-alert')] });\n        return alertController.create(alertOpts);\n    }\n    /**\n     * Close the select interface.\n     */\n    close() {\n        // TODO check !this.overlay || !this.isFocus()\n        if (!this.overlay) {\n            return Promise.resolve(false);\n        }\n        return this.overlay.dismiss();\n    }\n    getLabel() {\n        return findItemLabel(this.el);\n    }\n    hasValue() {\n        return this.getText() !== '';\n    }\n    get childOpts() {\n        return Array.from(this.el.querySelectorAll('ion-select-option'));\n    }\n    getText() {\n        const selectedText = this.selectedText;\n        if (selectedText != null && selectedText !== '') {\n            return selectedText;\n        }\n        return generateText(this.childOpts, this.value, this.compareWith);\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'select': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'interactive-disabled': this.disabled,\n            'select-disabled': this.disabled\n        });\n    }\n    render() {\n        const { placeholder, name, disabled, isExpanded, value, el } = this;\n        const mode = getIonMode(this);\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        let addPlaceholderClass = false;\n        let selectText = this.getText();\n        if (selectText === '' && placeholder != null) {\n            selectText = placeholder;\n            addPlaceholderClass = true;\n        }\n        renderHiddenInput(true, el, name, parseValue(value), disabled);\n        const selectTextClasses = {\n            'select-text': true,\n            'select-placeholder': addPlaceholderClass\n        };\n        const textPart = addPlaceholderClass ? 'placeholder' : 'text';\n        return (h(Host, { onClick: this.onClick, role: \"listbox\", \"aria-haspopup\": \"dialog\", \"aria-disabled\": disabled ? 'true' : null, \"aria-expanded\": `${isExpanded}`, \"aria-labelledby\": labelId, class: {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'select-disabled': disabled,\n            } }, h(\"div\", { class: selectTextClasses, part: textPart }, selectText), h(\"div\", { class: \"select-icon\", role: \"presentation\", part: \"icon\" }, h(\"div\", { class: \"select-icon-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, ref: (btnEl => this.buttonEl = btnEl) })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"],\n        \"placeholder\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nconst isOptionSelected = (currentValue, compareValue, compareWith) => {\n    if (currentValue === undefined) {\n        return false;\n    }\n    if (Array.isArray(currentValue)) {\n        return currentValue.some(val => compareOptions(val, compareValue, compareWith));\n    }\n    else {\n        return compareOptions(currentValue, compareValue, compareWith);\n    }\n};\nconst getOptionValue = (el) => {\n    const value = el.value;\n    return (value === undefined)\n        ? el.textContent || ''\n        : value;\n};\nconst parseValue = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (Array.isArray(value)) {\n        return value.join(',');\n    }\n    return value.toString();\n};\nconst compareOptions = (currentValue, compareValue, compareWith) => {\n    if (typeof compareWith === 'function') {\n        return compareWith(currentValue, compareValue);\n    }\n    else if (typeof compareWith === 'string') {\n        return currentValue[compareWith] === compareValue[compareWith];\n    }\n    else {\n        return Array.isArray(compareValue) ? compareValue.includes(currentValue) : currentValue === compareValue;\n    }\n};\nconst generateText = (opts, value, compareWith) => {\n    if (value === undefined) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        return value\n            .map(v => textForValue(opts, v, compareWith))\n            .filter(opt => opt !== null)\n            .join(', ');\n    }\n    else {\n        return textForValue(opts, value, compareWith) || '';\n    }\n};\nconst textForValue = (opts, value, compareWith) => {\n    const selectOpt = opts.find(opt => {\n        return compareOptions(getOptionValue(opt), value, compareWith);\n    });\n    return selectOpt\n        ? selectOpt.textContent\n        : null;\n};\nlet selectIds = 0;\nconst OPTION_CLASS = 'select-interface-option';\nSelect.style = {\n    ios: selectIosCss,\n    md: selectMdCss\n};\n\nconst selectOptionCss = \":host{display:none}\";\n\nconst SelectOption = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-selopt-${selectOptionIds++}`;\n        /**\n         * If `true`, the user cannot interact with the select option. This property does not apply when `interface=\"action-sheet\"` as `ion-action-sheet` does not allow for disabled buttons.\n         */\n        this.disabled = false;\n    }\n    render() {\n        return (h(Host, { role: \"option\", id: this.inputId, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n};\nlet selectOptionIds = 0;\nSelectOption.style = selectOptionCss;\n\nconst selectPopoverCss = \".sc-ion-select-popover-h ion-list.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:-1px;margin-bottom:-1px}.sc-ion-select-popover-h ion-list-header.sc-ion-select-popover,.sc-ion-select-popover-h ion-label.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\nconst SelectPopover = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Array of options for the popover */\n        this.options = [];\n    }\n    onSelect(ev) {\n        const option = this.options.find(o => o.value === ev.target.value);\n        if (option) {\n            safeCall(option.handler);\n        }\n    }\n    render() {\n        const checkedOption = this.options.find(o => o.checked);\n        const checkedValue = checkedOption ? checkedOption.value : undefined;\n        return (h(Host, { class: getIonMode(this) }, h(\"ion-list\", null, this.header !== undefined && h(\"ion-list-header\", null, this.header), (this.subHeader !== undefined || this.message !== undefined) &&\n            h(\"ion-item\", null, h(\"ion-label\", { class: \"ion-text-wrap\" }, this.subHeader !== undefined && h(\"h3\", null, this.subHeader), this.message !== undefined && h(\"p\", null, this.message))), h(\"ion-radio-group\", { value: checkedValue }, this.options.map(option => h(\"ion-item\", { class: getClassMap(option.cssClass) }, h(\"ion-label\", null, option.text), h(\"ion-radio\", { value: option.value, disabled: option.disabled })))))));\n    }\n};\nSelectPopover.style = selectPopoverCss;\n\nexport { Select as ion_select, SelectOption as ion_select_option, SelectPopover as ion_select_popover };\n"]}
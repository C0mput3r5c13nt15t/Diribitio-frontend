{"version":3,"sources":["webpack:///src/app/log-in/leader-page/leader-project-generation/leader-project-generation.module.ts","webpack:///src/app/log-in/leader-page/leader-project-generation/leader-project-generation.page.html","webpack:///src/app/log-in/leader-page/leader-project-generation/leader-project-generation.page.ts","webpack:///src/app/log-in/leader-page/leader-project-generation/leader-project-generation.page.scss"],"names":["routes","path","component","LeaderProjectGenerationPageModule","imports","forChild","declarations","LeaderProjectGenerationPage","activatedRoute","router","projectsService","alert","config","subscriptions","loadedLeader","id","user_name","email","password","project_id","newProject","authorized","editable","title","image","descr","leader_name","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","projectNoun","app_config","project_noun","eventName","event_name","text","get_content","paramMap","subscribe","has","navigate","leaderUrl","get","forEach","sub","unsubscribe","event","file","target","files","createProject","data","message","update","emit","error","selector","template"],"mappings":"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","file":"log-in-leader-page-leader-project-generation-leader-project-generation-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaderProjectGenerationPage } from './leader-project-generation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaderProjectGenerationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LeaderProjectGenerationPage]\n})\nexport class LeaderProjectGenerationPageModule {}\n","export default \"<ion-header>\\n    <ion-toolbar color=\\\"menu\\\">\\n      <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n        <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/{{ projectNoun}}leiter/{{ leaderUrl }}\\\"></ion-back-button>\\n      </ion-button>\\n      <ion-title>{{ projectNoun }} erstellen</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content color=\\\"background\\\">\\n    <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n      <ion-card-header>\\n        <ion-card-title>{{ projectNoun }} erstellen</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content *ngIf=\\\"text\\\">\\n        <ion-label color=\\\"text\\\">\\n          {{ text }}\\n        </ion-label>\\n      </ion-card-content>\\n      <ion-card-content>\\n        <form #form=\\\"ngForm\\\" name=\\\"ProjectForm\\\" (ngSubmit)=\\\"create()\\\">\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">{{ projectNoun }}leiter</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required name=\\\"ProjectLeader\\\" [(ngModel)]=\\\"newProject.leader_name\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">{{ projectNoun }}name</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required name=\\\"ProjectName\\\" [(ngModel)]=\\\"newProject.title\\\" required type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">{{ projectNoun }}beschreibung</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-textarea required type=\\\"text\\\" name=\\\"ProjectDescr\\\" [(ngModel)]=\\\"newProject.descr\\\" rows=\\\"7\\\"></ion-textarea>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Titelbild</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" name=\\\"ProjectImage\\\" (change)=\\\"changeFile($event)\\\" accept=\\\".png, .jpg\\\" type=\\\"file\\\"></ion-input>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Kosten</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required name=\\\"ProjectCost\\\" [(ngModel)]=\\\"newProject.cost\\\" required type=\\\"number\\\"></ion-input>â‚¬\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">1.Tag</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">von</ion-label><ion-input display-format=\\\"hh:mm\\\" color=\\\"text\\\" required name=\\\"ProjectFirstTimeBeginn\\\" [(ngModel)]=\\\"newProject.first_day_begin\\\" type=\\\"time\\\"></ion-input>\\n          </ion-item> \\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">bis</ion-label><ion-input display-format=\\\"hh:mm\\\" color=\\\"text\\\" required name=\\\"ProjectFirstTimeEnd\\\" [(ngModel)]=\\\"newProject.first_day_end\\\" type=\\\"time\\\"></ion-input>\\n          </ion-item> \\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">2.Tag</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">von</ion-label><ion-input display-format=\\\"hh:mm\\\" color=\\\"text\\\" required name=\\\"ProjectSecondTimeBeginn\\\" [(ngModel)]=\\\"newProject.second_day_begin\\\" type=\\\"time\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">bis</ion-label><ion-input display-format=\\\"hh:mm\\\" color=\\\"text\\\" required name=\\\"ProjectSecondTimeEnd\\\" [(ngModel)]=\\\"newProject.second_day_end\\\" type=\\\"time\\\"></ion-input>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">von</ion-label>\\n            <ion-select required [selectedText]=\\\"newProject.min_grade\\\" name=\\\"ProjectMinClass\\\" [(ngModel)]=\\\"newProject.min_grade\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\">\\n              <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n              <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n              <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n              <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n              <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n              <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n              <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">bis</ion-label>\\n            <ion-select required [selectedText]=\\\"newProject.max_grade\\\" name=\\\"ProjectMaxClass\\\" [(ngModel)]=\\\"newProject.max_grade\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\">\\n              <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n              <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n              <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n              <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n              <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n              <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n              <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Teinehmeranzahl</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">von</ion-label><ion-input color=\\\"text\\\" required name=\\\"ProjectMinParticipants\\\" [(ngModel)]=\\\"newProject.min_participants\\\" required type=\\\"number\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">bis</ion-label><ion-input color=\\\"text\\\" required name=\\\"ProjectMaxParticipants\\\" [(ngModel)]=\\\"newProject.max_participants\\\" required type=\\\"number\\\"></ion-input>\\n          </ion-item>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-button color=\\\"buttons\\\"  [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">{{ projectNoun }} erstellen</ion-button>\\n          </div>\\n        </form>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-content>\\n  \";","import { Component, OnInit, ViewChild, Directive, ElementRef, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Projectleader } from 'src/models/Projectleader';\nimport { Project } from 'src/models/Project.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-project-generation',\n  templateUrl: './leader-project-generation.page.html',\n  styleUrls: ['./leader-project-generation.page.scss'],\n})\nexport class LeaderProjectGenerationPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  leaderUrl: string;\n\n  loadedLeader: Projectleader = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    project_id: 0,\n  };\n\n  newProject: Project = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: null,\n    descr: '',\n    leader_name: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: []\n  };\n\n  image: any;\n\n  text: string;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private alert: AlertService,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('leader-project-generation');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('LeaderName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.leaderUrl = paramMap.get('LeaderName');\n    });\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  changeFile(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      this.image = file;\n    }\n  }\n\n  create() {\n    this.projectsService.createProject('leaders', this.newProject, this.image).subscribe(data => {\n      this.alert.alert(data.message);\n      this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + this.leaderUrl]);\n      this.projectsService.update.emit();\n    }, error => {\n      this.alert.error('Erstellung des Projektes fehlgeschlagen!', error.error);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsZWFkZXItcHJvamVjdC1nZW5lcmF0aW9uLnBhZ2Uuc2NzcyJ9 */\";"]}
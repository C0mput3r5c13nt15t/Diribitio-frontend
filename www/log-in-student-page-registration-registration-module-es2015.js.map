{"version":3,"sources":["./src/app/log-in/student-page/registration/registration.module.ts","./src/app/log-in/student-page/registration/registration.page.scss","./src/app/log-in/student-page/registration/registration.page.ts","./src/app/log-in/student-page/registration/registration.page.html"],"names":[],"mappings":"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","file":"log-in-student-page-registration-registration-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistrationPage } from './registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegistrationPage]\n})\nexport class RegistrationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3RyYXRpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { AlertController } from '@ionic/angular';\nimport { Student } from 'src/models/Student.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.page.html',\n  styleUrls: ['./registration.page.scss'],\n})\nexport class RegistrationPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  loadedProjects = [];\n  possibleProjects = [];\n  students;\n  studentUrl: string;\n  loadedStudent: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n  appendFriend: any = {\n    id: 0,\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n  };\n  friendsList = [];\n  lowestGrade: number;\n  highestGrade: number;\n\n  text: string;\n\n  definiteArticle = this.config.definite_article;\n  indefiniteArticle = this.config.indefinite_article.toLowerCase();\n  projectsNoun = this.config.app_config.projects_noun;\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private projectsService: ProjectsService,\n              private studentsService: StudentsService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private alertCtrl: AlertController,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('student-registration');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getProjects();\n    this.getStudent();\n\n    this.subscriptions.push(\n      this.projectsService.update.subscribe(() => this.getProjects()),\n      this.studentsService.update.subscribe(() => this.getStudent())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getStudent() {\n    this.studentsService.getSelfStudent().subscribe(data => {\n      this.loadedStudent = data.data;\n      this.lowestGrade = +data.data.grade;\n      this.highestGrade = +data.data.grade;\n\n      this.friendsList = [];\n\n      this.studentsService.getFriends().subscribe(friendData => {\n        this.friendsList = friendData.data;\n\n        this.friendsList.forEach((friend) => {\n          if (+friend.grade <= this.lowestGrade) {\n            this.lowestGrade = +friend.grade;\n          }\n\n          if (+friend.grade >= this.highestGrade) {\n            this.highestGrade = +friend.grade;\n          }\n          this.filterProjects();\n        });\n      });\n    });\n  }\n\n  userChanges() {\n    this.lowestGrade = +this.loadedStudent.grade;\n    this.highestGrade = +this.loadedStudent.grade;\n\n    this.friendsList.forEach((friend) => {\n      if (+friend.grade <= this.lowestGrade) {\n        this.lowestGrade = +friend.grade;\n      }\n\n      if (+friend.grade >= this.highestGrade) {\n        this.highestGrade = +friend.grade;\n      }\n    });\n    this.filterProjects();\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.loadedProjects = data.data;\n    });\n  }\n\n  validateProject(project) {\n    if (this.lowestGrade >= +project.min_grade) {\n      if (+project.max_grade >= this.highestGrade) {\n        if (project.id !== this.loadedStudent.project_id) {\n          if (project.authorized) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  filterProjects() {\n    this.possibleProjects = [];\n    // console.log(this.lowestGrade);\n    this.loadedProjects.forEach(project => {\n      if (this.validateProject(project)) {\n        // console.log(project.max_grade);\n        this.possibleProjects.push(project);\n      }\n    });\n  }\n\n  appendFriendFunction() {\n    this.studentsService.getStudentID(this.appendFriend).subscribe(data => {\n      // tslint:disable-next-line: triple-equals\n      if (data.id != 0) {\n        this.appendFriend.id = data.id;\n\n        if (this.friendsList.length < 3  &&  !this.friendsList.some(e => e.id === data.id))  {\n          this.friendsList.push(JSON.parse(JSON.stringify(this.appendFriend)));\n          console.log(this.friendsList);\n\n          if (+this.appendFriend.grade <= this.lowestGrade) {\n            this.lowestGrade = +this.appendFriend.grade;\n          }\n\n          if (+this.appendFriend.grade >= this.highestGrade) {\n            this.highestGrade = +this.appendFriend.grade;\n          }\n        }\n\n        this.filterProjects();\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Der angegebene Schüler konnte nicht gefunden werden!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    });\n  }\n\n  removeFriendFunction(friend) {\n    this.friendsList.splice(this.friendsList.indexOf(friend), 1);\n\n    this.lowestGrade = +this.loadedStudent.grade;\n    this.highestGrade = +this.loadedStudent.grade;\n\n    this.friendsList.forEach(stillfriend => {\n      if (+stillfriend.grade < this.lowestGrade) {\n        this.lowestGrade = +stillfriend.grade;\n      }\n\n      if (+stillfriend.grade > this.highestGrade) {\n        this.highestGrade = +stillfriend.grade;\n      }\n    });\n\n    this.filterProjects();\n  }\n\n  registrate() {\n    // tslint:disable-next-line: triple-equals\n    if (this.loadedStudent.first_wish != this.loadedStudent.project_id && this.loadedStudent.second_wish != this.loadedStudent.project_id && this.loadedStudent.third_wish != this.loadedStudent.project_id) {\n      if (this.loadedStudent.first_wish !== this.loadedStudent.second_wish && this.loadedStudent.first_wish !== this.loadedStudent.third_wish && this.loadedStudent.second_wish !== this.loadedStudent.third_wish) {\n        if (this.friendsList.length === 3) {\n          this.loadedStudent.first_friend = this.friendsList[0].id;\n          this.loadedStudent.second_friend = this.friendsList[1].id;\n          this.loadedStudent.third_friend = this.friendsList[2].id;\n          this.studentsService.putSelfStudent(this.loadedStudent, this.studentUrl);\n        } else if (this.friendsList.length === 2) {\n          this.loadedStudent.first_friend = this.friendsList[0].id;\n          this.loadedStudent.second_friend = this.friendsList[1].id;\n          this.loadedStudent.third_friend = 0;\n          this.studentsService.putSelfStudent(this.loadedStudent, this.studentUrl);\n        } else if (this.friendsList.length === 1) {\n          this.loadedStudent.first_friend = this.friendsList[0].id;\n          this.loadedStudent.second_friend = 0;\n          this.loadedStudent.third_friend = 0;\n          this.studentsService.putSelfStudent(this.loadedStudent, this.studentUrl);\n        } else {\n          this.loadedStudent.first_friend = 0;\n          this.loadedStudent.second_friend = 0;\n          this.loadedStudent.third_friend = 0;\n          this.studentsService.putSelfStudent(this.loadedStudent, this.studentUrl);\n        }\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Du must drei verschiedene Projektwünsche angeben!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    } else {\n      this.alertCtrl.create({\n        header: 'Fehler',\n        message: 'Du kannst nicht an deinem eigenen Projekt teilnehmen!',\n        buttons: [{\n          text: 'Ok',\n          role: 'cancel',\n          }]\n        }).then(alertEl => {\n          alertEl.present();\n        });\n    }\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Schüler/{{ studentUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Anmeldung</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-card-title>Für {{ projectsNoun }} Anmelden</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <form #form=\\\"ngForm\\\" name=\\\"ParticipantForm\\\" (ngSubmit)=\\\"registrate()\\\">\\n        <ion-list>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required [(ngModel)]=\\\"loadedStudent.first_name\\\" name=\\\"ParticipantFirstName\\\" placeholder=\\\"Vorname\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required [(ngModel)]=\\\"loadedStudent.last_name\\\" name=\\\"ParticipantLastName\\\" placeholder=\\\"Nachname\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n            <ion-select [selectedText]=\\\"loadedStudent.grade\\\" required name=\\\"ParticipantGrade\\\" (ionChange)=\\\"userChanges()\\\" [(ngModel)]=\\\"loadedStudent.grade\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\">\\n              <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n              <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n              <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n              <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n              <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n              <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n              <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-radio-group required name=\\\"ParticipantClass\\\" [(ngModel)]=\\\"loadedStudent.letter\\\">\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">A </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"a\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">B </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"b\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">C </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"c\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">D </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"d\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">E </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"e\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">F </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"f\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-item>\\n        </ion-list>\\n\\n        <ion-card color=\\\"background\\\" *ngIf=\\\"loadedStudent.project_id == 0\\\">\\n          <form #form=\\\"ngForm\\\" name=\\\"ParticipantForm\\\" (ngSubmit)=\\\"appendFriendFunction()\\\">\\n            <ion-item color=\\\"items\\\">\\n              <ion-input color=\\\"text\\\" type=\\\"text\\\" placeholder=\\\"Vorname\\\" [(ngModel)]=\\\"appendFriend.first_name\\\" name=\\\"ExchangeSecondFirstName\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-input color=\\\"text\\\" type=\\\"text\\\" placeholder=\\\"Nachname\\\" [(ngModel)]=\\\"appendFriend.last_name\\\" name=\\\"ExchangeSecondLastName\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n              <ion-select [selectedText]=\\\"appendFriend.grade\\\" name=\\\"ParticipantGrade\\\" [(ngModel)]=\\\"appendFriend.grade\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\">\\n                <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n                <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n                <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n                <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n                <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n                <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n                <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-radio-group color=\\\"buttons\\\" name=\\\"ParticipantClass\\\" [(ngModel)]=\\\"appendFriend.letter\\\">\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">A </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"a\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">B </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"b\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">C </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"c\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">D </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"d\\\"></ion-radio>\\n                </ion-item>\\n              </ion-radio-group>\\n            </ion-item>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Als Freund hinzufügen</ion-button>\\n            </div>\\n          </form>\\n        </ion-card>\\n\\n        <ion-list>\\n          <ion-title color=\\\"background\\\">Freunde</ion-title>\\n          <ion-item color=\\\"items\\\" *ngIf=\\\"loadedStudent.project_id == 0 || loadedStudent.project_id == null\\\">\\n            <ion-list>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let friend of friendsList\\\">\\n                {{ friend.first_name }} {{ friend.last_name }} {{ friend.grade }}{{ friend.letter }}\\n                <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" (click)=\\\"removeFriendFunction(friend)\\\"><ion-icon color=\\\"text\\\" name=\\\"close\\\"></ion-icon></ion-button>\\n              </ion-item>\\n            </ion-list>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" *ngIf=\\\"loadedStudent.project_id == 0 && loadedStudent.role === 1 || loadedStudent.project_id == null && loadedStudent.role === 1\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ definiteArticle }} {{ projectNoun }} muss die Klassenstufen {{ lowestGrade }} bis {{ highestGrade }} erlauben.\\n            </ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"background\\\" *ngIf=\\\"loadedStudent.project_id != 0 && loadedStudent.project_id != null || loadedStudent.role === 2\\\">\\n            <ion-label color=\\\"danger\\\">\\n              Du kanst leider keine Freunde auswählen, da du selbst {{ indefiniteArticle }} {{ projectNoun }} erstellt hast.\\n            </ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">1. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"1. Wunsch\\\" name=\\\"ParticipantFirstWish\\\" [(ngModel)]=\\\"loadedStudent.first_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\"> \\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">2. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"2. Wunsch\\\" name=\\\"ParticipantSecondWish\\\" [(ngModel)]=\\\"loadedStudent.second_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\">\\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">3. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"3. Wunsch\\\" name=\\\"ParticipantThirdWish\\\" [(ngModel)]=\\\"loadedStudent.third_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\">\\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-list>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Anmelden</ion-button>\\n        </div>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["webpack:///src/app/log-in/log-in.page.html","webpack:///src/app/log-in/log-in.page.ts","webpack:///src/app/log-in/log-in.module.ts"],"names":["LogInPage","LogInPageModule","routes","path","component","auth","router","studentsService","scheduleService","leadersService","adminsService","alert","config","cookieService","subscriptions","formType","StudentCredentials","email","password","LeaderCredentials","AdminCredentials","tries","schedule","id","begin","Date","control","registration","sort_students","exchange","projects","end","projectNoun","this","app_config","project_noun","eventName","event_name","currentDate","getSchedule","push","update","subscribe","log_in_from_storage","forEach","sub","unsubscribe","data","keyCode","type","form","LogInStudent","LogInLeader","LogInAdmin","nextInput","setFocus","get","jwt","check_jwt","userAuth","set_jwt","token","setLoggedIn","navigate","user_name","error","logInStudent","reset","wrongPassword","logInLeader","logInAdmin","keyPressEventHandler","forChild"],"mappings":"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","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-title>Anmeldung</ion-title>\n    <ion-button color=\"buttons\" slot=\"end\" [routerLink]=\"['../../Help']\"><ion-icon name=\"help-circle\"></ion-icon></ion-button>\n  </ion-toolbar>\n  <div data-ng-controller=\"myCtrl\" data-ng-init=\"log_in_from_storage()\"></div>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\" class=\"content\">\n    <ion-card-header>\n      <ion-card-title>Einloggen</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-segment color=\"buttons\" [(ngModel)]=\"formType\">\n        <ion-segment-button value=\"student\">\n          <ion-label>Schüler</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value=\"leader\">\n          <ion-label>{{ projectNoun }}leiter</ion-label>\n        </ion-segment-button>\n        <ion-segment-button value=\"admin\">\n          <ion-label>Admin</ion-label>\n        </ion-segment-button>\n      </ion-segment>\n\n      <form #studentLoginForm=\"ngForm\" name=\"LogInForm\" (ngSubmit)=\"LogInStudent(studentLoginForm)\" [hidden]=\"formType != 'student'\" class=\"content\">\n        <ion-card color=\"background\">\n          <ion-card-header>\n            <ion-card-title>Schüler</ion-card-title>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-list>\n              <ion-item color=\"items\">\n                <ion-input name=\"email\" [(ngModel)]=\"StudentCredentials.email\" required type=\"email\" (keypress)=\"nextInput($event.keyCode, nextStudentField)\" placeholder=\"E-Mail\" color=\"text\"></ion-input>\n              </ion-item>\n              <ion-item color=\"items\">\n                <ion-input #nextStudentField name=\"password\" [(ngModel)]=\"StudentCredentials.password\" required minlength=\"8\" type=\"password\" (keypress)=\"keyPressEventHandler($event.keyCode, 'students', studentLoginForm)\" placeholder=\"Passwort\" color=\"text\"></ion-input>\n              </ion-item>\n            </ion-list>\n            <a [routerLink]=\"['./Passwort vergessen']\">Passwort vergessen?</a><br>\n            <div class=\"ion-padding\">\n              <ion-button name=\"login\" type=\"submit\" [disabled]=\"studentLoginForm.invalid\" class=\"ion-no-margin\" expand=\"block\" color=\"buttons\">Anmelden</ion-button>\n            </div>\n            <ion-label *ngIf=\"currentDate > schedule.begin && currentDate <= schedule.control\" class=\"centerd_label\" color=\"text\">oder</ion-label>\n            <div class=\"ion-padding\">\n              <ion-button *ngIf=\"currentDate > schedule.begin && currentDate <= schedule.control\" [routerLink]=\"['./Schüler Registration']\" color=\"buttons\" class=\"ion-no-margin\" expand=\"block\"><ion-icon name=\"add-circle-outline\" slot=\"start\"></ion-icon> Account erstellen</ion-button>\n            </div>\n          </ion-card-content>\n        </ion-card>\n      </form>\n\n      <form #leaderLoginForm=\"ngForm\" name=\"LogInForm\" (ngSubmit)=\"LogInLeader(leaderLoginForm)\" [hidden]=\"formType != 'leader'\" class=\"content\">\n        <ion-card color=\"background\">\n          <ion-card-header>\n            <ion-card-title>{{ projectNoun }}leiter</ion-card-title>\n          </ion-card-header>\n          <ion-card-content>\n            <ion-list>\n              <ion-item color=\"items\">\n                <ion-input name=\"email\" [(ngModel)]=\"LeaderCredentials.email\" required type=\"email\" (keypress)=\"nextInput($event.keyCode, nextLeaderField)\" placeholder=\"E-Mail\" color=\"text\"></ion-input>\n              </ion-item>\n              <ion-item color=\"items\">\n                <ion-input #nextLeaderField name=\"password\" [(ngModel)]=\"LeaderCredentials.password\" required minlength=\"8\" type=\"password\" (keypress)=\"keyPressEventHandler($event.keyCode, 'leaders', leaderLoginForm)\" placeholder=\"Passwort\" color=\"text\"></ion-input>\n              </ion-item>\n            </ion-list>\n            <a [routerLink]=\"['./Passwort vergessen']\">Passwort vergessen?</a><br>\n            <div class=\"ion-padding\">\n              <ion-button name=\"login\" type=\"submit\" [disabled]=\"leaderLoginForm.invalid\" class=\"ion-no-margin\" expand=\"block\" color=\"buttons\">Anmelden</ion-button>\n            </div>\n            <ion-label *ngIf=\"currentDate > schedule.begin && currentDate <= schedule.control\" class=\"centerd_label\" color=\"text\">oder</ion-label>\n            <div class=\"ion-padding\">\n              <ion-button *ngIf=\"currentDate > schedule.begin && currentDate <= schedule.control\" routerLink='./{{ projectNoun}}leiter Registration' color=\"buttons\" class=\"ion-no-margin\" expand=\"block\"><ion-icon name=\"add-circle-outline\" slot=\"start\"></ion-icon> Account erstellen</ion-button>\n            </div>\n          </ion-card-content>\n        </ion-card>\n      </form>\n\n      <form id=\"Formular\" #adminLoginForm=\"ngForm\" (ngSubmit)=\"LogInAdmin(adminLoginForm)\" [hidden]=\"formType != 'admin'\" class=\"content\">\n        <ion-card color=\"background\">\n          <ion-card-header>\n            <ion-card-title>Admin</ion-card-title>\n          </ion-card-header>\n          <ion-card-content>\n              <ion-list>\n                <ion-item color=\"items\">\n                  <ion-input name=\"email\" [(ngModel)]=\"AdminCredentials.email\" required type=\"email\" (keypress)=\"nextInput($event.keyCode, nextAdminField)\" placeholder=\"E-Mail\" color=\"text\"></ion-input>\n                </ion-item>\n                <ion-item color=\"items\">\n                  <ion-input #nextAdminField name=\"password\" [(ngModel)]=\"AdminCredentials.password\" required minlength=\"8\" type=\"password\" (keypress)=\"keyPressEventHandler($event.keyCode, 'admins', adminLoginForm)\" placeholder=\"Passwort\" color=\"text\"></ion-input>\n                </ion-item>\n              </ion-list>\n              <a [routerLink]=\"['./Passwort vergessen']\">Passwort vergessen?</a><br>\n              <div class=\"ion-padding\">\n                <ion-button name=\"login\" type=\"submit\" [disabled]=\"adminLoginForm.invalid\" class=\"ion-no-margin\" expand=\"block\" color=\"buttons\">Anmelden</ion-button>\n              </div>\n              <ion-label *ngIf=\"currentDate > schedule.begin && currentDate <= schedule.sort_students\" class=\"centerd_label\" color=\"text\">oder</ion-label>\n              <div class=\"ion-padding\">\n                <ion-button *ngIf=\"currentDate > schedule.begin && currentDate <= schedule.sort_students\" [routerLink]=\"['./Admin Registration']\" color=\"buttons\" class=\"ion-no-margin\" expand=\"block\"><ion-icon name=\"add-circle-outline\" slot=\"start\"></ion-icon> Account erstellen</ion-button>\n              </div>\n          </ion-card-content>\n        </ion-card>\n      </form>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { LeadersService } from 'src/app/services/leaders.service';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Subscription } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.page.html',\n  styleUrls: ['./log-in.page.scss'],\n})\nexport class LogInPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Conatins the which form should be shown on the log-in page\n   */\n  formType = 'student';\n\n  StudentCredentials = {\n    email: '',\n    password: '',\n  };\n\n  LeaderCredentials = {\n    email: '',\n    password: '',\n  };\n\n  AdminCredentials = {\n    email: '',\n    password: '',\n  };\n\n  /**\n   * Conatins the number of times a log-in has been tried\n   */\n  tries = 0;\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private auth: AuthenticationService,\n              private router: Router,\n              private studentsService: StudentsService,\n              private scheduleService: ScheduleService,\n              private leadersService: LeadersService,\n              private adminsService: AdminsService,\n              private alert: AlertService,\n              private config: ConfigService,\n              private cookieService: CookieService) {}\n\n  ngOnInit() {\n    this.currentDate = this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.getSchedule();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule())\n    );\n  }\n\n  ionViewWillEnter() {\n    this.log_in_from_storage();\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  keyPressEventHandler(keyCode, type= 'students', form) {\n    if (keyCode === 13) {\n      if (type === 'students') {\n        this.LogInStudent(form);\n      } else if (type === 'leaders') {\n        this.LogInLeader(form);\n      } else if (type === 'admins') {\n        this.LogInAdmin(form);\n      }\n    }\n  }\n\n  /**\n   * Sets the focus on the given element if ENTER is pressed\n   * @param keyCode Contains the code of the pressed key\n   * @param nextInput Contains the next element to be focused\n   */\n  nextInput(keyCode, nextInput) {\n    if (keyCode === 13) {\n      nextInput.setFocus();\n    }\n  }\n\n  log_in_from_storage() {\n    if (this.cookieService.get('Diribitio-Session')) {\n      const jwt = this.cookieService.get('Diribitio-Session');\n      this.auth.check_jwt(jwt).subscribe(data => {\n        const userAuth = data.auth;\n\n        this.auth.set_jwt(data.token);\n        this.auth.setLoggedIn(true);\n\n        if (userAuth === 'admins') {\n          this.router.navigate([this.eventName + '/Admin/' + data.user_name]);\n        } else if (userAuth === 'leaders') {\n          this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + data.user_name]);\n        } else if (userAuth === 'students') {\n          this.router.navigate([this.eventName + '/Schüler/' + data.user_name]);\n        }\n      }, (error) => {\n        this.alert.error('Die Sitzung ist bereits abgelaufen!', error);\n        this.auth.setLoggedIn(false);\n      });\n    }\n  }\n\n  LogInStudent(form) {\n    this.studentsService.logInStudent(this.StudentCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/Schüler/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInLeader(form) {\n    this.leadersService.logInLeader(this.LeaderCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInAdmin(form) {\n    this.adminsService.logInAdmin(this.AdminCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/Admin/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  wrongPassword() {\n    this.tries += 1;\n\n    if (this.tries >= 5) {\n      this.alert.wrongPassword(this.tries * 3000, this.tries);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LogInPage } from './log-in.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogInPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LogInPage]\n})\nexport class LogInPageModule {}\n"]}
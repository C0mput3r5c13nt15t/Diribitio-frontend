{"version":3,"sources":["webpack:///src/app/log-in/student-page/exchange-confirm/exchange-confirm.page.html","webpack:///src/app/log-in/student-page/exchange-confirm/exchange-confirm.page.ts","webpack:///src/app/log-in/student-page/exchange-confirm/exchange-confirm.module.ts","webpack:///src/app/log-in/student-page/exchange-confirm/exchange-confirm.page.scss"],"names":["ExchangeConfirmPage","router","activatedRoute","exchangesService","projectsService","alertCtrl","config","alert","subscriptions","loadedStudent","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","eventName","app_config","event_name","content","get_content","studentAlreadyExchangeError","get_error","currentDate","Date","paramMap","subscribe","has","navigate","studentUrl","get","getExchanges","push","update","forEach","sub","unsubscribe","getAllExchangesForParticipant","data","request","getLittleProject","sender","response","project_title","title","exchangeID","create","header","message","buttons","text","handler","confirmExchange","emit","error","then","alertEl","present","selector","template","routes","path","component","ExchangeConfirmPageModule","imports","forChild","declarations"],"mappings":"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","file":"log-in-student-page-exchange-confirm-exchange-confirm-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Schüler/{{ studentUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Tauschanfrage bestätigen</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"loadedStudent.exchange_id == 0\\\" class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-card-title>Tauschanfragen annehmen</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-label color=\\\"text\\\">\\n        {{ content }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item color=\\\"items\\\" *ngFor=\\\"let exchange of loadedStudent.exchange_requests\\\">\\n          <ion-button color=\\\"buttons\\\" slot=\\\"start\\\" (click)=\\\"confirm(exchange.id)\\\"><ion-icon name=\\\"checkmark\\\"></ion-icon></ion-button>\\n          {{ exchange.sender.first_name }} {{ exchange.sender.last_name }} {{ exchange.sender.grade }}{{ exchange.sender.letter }} aus {{ exchange.sender.project_title }}\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"loadedStudent.exchange_id != 0\\\" class=\\\"content\\\">\\n    <ion-card-content>\\n      <label color=\\\"danger\\\">{{ studentAlreadyExchangeError }}</label>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ExchangesService } from 'src/app/services/exchanges.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Student } from 'src/models/Student.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { formatDate } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-exchange-confirm',\n  templateUrl: './exchange-confirm.page.html',\n  styleUrls: ['./exchange-confirm.page.scss'],\n})\nexport class ExchangeConfirmPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  studentUrl: string;\n\n  loadedStudent: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  content: string;\n\n  studentAlreadyExchangeError: string;\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private exchangesService: ExchangesService,\n              private projectsService: ProjectsService,\n              private alertCtrl: AlertController,\n              private config: ConfigService,\n              private alert: AlertService ) { }\n\n  ngOnInit() {\n    this.content = this.config.get_content('user-exchange-confirm');\n\n    this.studentAlreadyExchangeError = this.config.get_error('student-already_exchange');\n\n    this.currentDate = formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getExchanges();\n\n    this.subscriptions.push(\n      this.exchangesService.update.subscribe(() => this.getExchanges()),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getExchanges() {\n    this.exchangesService.getAllExchangesForParticipant().subscribe(data => {\n      this.loadedStudent.exchange_requests = data.data;\n      this.loadedStudent.exchange_requests.forEach(request => {\n        this.projectsService.getLittleProject(request.sender.project_id).subscribe(response => {\n          request.sender.project_title = response.data.title;\n        });\n      });\n    });\n  }\n\n  confirm(exchangeID) {\n    this.alertCtrl.create({\n      header: 'Bist du sicher?',\n      message: 'Willst du wirklich tauschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Ja',\n        handler: async () => {\n          this.exchangesService.confirmExchange(exchangeID).subscribe(data => {\n            this.alert.alert(data.message);\n            this.router.navigate([this.eventName + '/Schüler/' + this.studentUrl]);\n            this.exchangesService.update.emit();\n          }, error => {\n            this.alert.error('Bestätigung des Tausches fehlgeschlagen!', error.error);\n          });\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExchangeConfirmPage } from './exchange-confirm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExchangeConfirmPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ExchangeConfirmPage]\n})\nexport class ExchangeConfirmPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleGNoYW5nZS1jb25maXJtLnBhZ2Uuc2NzcyJ9 */\";"]}
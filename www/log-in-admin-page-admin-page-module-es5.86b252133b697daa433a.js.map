{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-page.page.html","webpack:///src/app/log-in/admin-page/admin-page.page.ts","webpack:///src/app/log-in/admin-page/admin-page.module.ts"],"names":["AdminPagePage","AdminPagePageModule","routes","path","component","activatedRoute","router","adminsService","scheduleService","config","alert","subscriptions","loadedAdmin","id","user_name","email","password","schedule","begin","Date","control","registration","sort_students","exchange","projects","end","buttonPressed","projectsNoun","this","app_config","projects_noun","projectNoun","project_noun","text","get_content","currentDate","paramMap","subscribe","has","navigate","getSchedule","getAdmin","push","update","forEach","sub","unsubscribe","data","getSelfAdmin","email_verified_at","sendAuthentificationEmailSubscribe","message","error","logOutAdmin","logout","refresh","forChild"],"mappings":"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","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-title>Admin</ion-title>\n    <ion-button color=\"buttons\" slot=\"end\" (click)=\"logout()\">\n      <ion-icon name=\"log-out\"></ion-icon>\n    </ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\" class=\"content\">\n    <ion-card-header>\n      <ion-item color=\"items\" lines=\"none\">\n        <ion-card-title><ion-label color=\"buttons\" text-wrap>Willkommen {{ loadedAdmin.user_name }}</ion-label></ion-card-title>\n        <ion-button (click)=\"refresh()\" slot=\"end\" color=\"buttons\"><ion-icon name=\"refresh\"></ion-icon></ion-button>\n      </ion-item>  \n    </ion-card-header>\n    <ion-card-content *ngIf=\"text\">\n      <ion-label color=\"text\">\n        {{ text }}\n      </ion-label>\n    </ion-card-content>\n    <ion-card-content *ngIf=\"loadedAdmin.email_verified_at == null && !buttonPressed\">\n      <ion-label color=\"text\">\n        Sie heaben Ihre E-Mail noch nicht verifiziert. Bitte holen Sie dies nach bevor Sie fortfahren.\n      </ion-label>\n      <div class=\"ion-padding\">\n        <ion-button color=\"buttons\" expand=\"block\" class=\"ion-no-margin\" (click)=\"sendVerificationEmail()\">E-Mail senden</ion-button>\n      </div>\n    </ion-card-content>\n    <ion-card-content>\n      <ion-list>\n        <ion-item [disabled]=\"loadedAdmin.email_verified_at == null\" color=\"items\" routerLink='./{{ projectsNoun }}'>\n          <ion-icon color=\"text\" slot=\"start\" name=\"apps\"></ion-icon>{{ projectsNoun }} verwalten\n        </ion-item>\n        <ion-item [disabled]=\"loadedAdmin.email_verified_at == null\" color=\"items\" routerLink='./Schüler und {{projectNoun}}leiter verwalten'>\n          <ion-icon color=\"text\" slot=\"start\" name=\"people\"></ion-icon>Schüler und {{ projectNoun }}leiter verwalten\n        </ion-item>\n        <ion-item *ngIf=\"currentDate > schedule.exchange && currentDate <= schedule.projects\" [disabled]=\"loadedAdmin.email_verified_at == null\" color=\"items\" [routerLink]=\"['./Tauschanfragen']\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"people\"></ion-icon>Tauschanfragen verwalten\n        </ion-item>\n        <ion-item [disabled]=\"loadedAdmin.email_verified_at == null\" color=\"items\" [routerLink]=\"['./Zeitplan verwalten']\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"calendar\"></ion-icon>Zeitplan verwalten\n        </ion-item>\n        <ion-item [disabled]=\"loadedAdmin.email_verified_at == null\" color=\"items\" [routerLink]=\"['./App verwalten']\">\n          <ion-icon color=\"text\" slot=\"start\" name=\"construct\"></ion-icon>App verwalten\n        </ion-item>\n      </ion-list>\n      <div class=\"ion-padding\">\n        <ion-button color=\"buttons\" expand=\"block\" class=\"ion-no-margin\" (click)=\"logout()\">Abmelden</ion-button>\n      </div>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { Admin } from 'src/models/Admin.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.page.html',\n  styleUrls: ['./admin-page.page.scss'],\n})\nexport class AdminPagePage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  loadedAdmin: Admin = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: ''\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  text: string;\n\n  buttonPressed = true;\n\n  projectsNoun = this.config.app_config.projects_noun;\n  projectNoun = this.config.app_config.project_noun;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private adminsService: AdminsService,\n              private scheduleService: ScheduleService,\n              private config: ConfigService,\n              private alert: AlertService) { }\n\n  ngOnInit() {\n    this.projectsNoun = this.config.app_config.projects_noun;\n    this.projectNoun = this.config.app_config.project_noun;\n\n    this.text = this.config.get_content('admin-page');\n\n    this.currentDate = this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('AdminName')) {\n        this.router.navigate(['']);\n        return;\n      }\n    });\n\n    this.getSchedule();\n    this.getAdmin();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.adminsService.update.subscribe(() => this.getAdmin())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getAdmin() {\n    this.adminsService.getSelfAdmin().subscribe(data => {\n      this.loadedAdmin = data.data;\n\n      if (this.loadedAdmin.email_verified_at == null) {\n        this.buttonPressed = false;\n      }\n    });\n  }\n\n  refresh() {\n    this.getAdmin();\n    this.getSchedule();\n  }\n\n  sendVerificationEmail() {\n    this.adminsService.sendAuthentificationEmailSubscribe().subscribe(data => {\n      this.alert.alert(data.message);\n      this.buttonPressed = true;\n    }, error => {\n      this.alert.error('Versandt der Verifizierungs E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  logout() {\n    this.adminsService.logOutAdmin();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminPagePage } from './admin-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminPagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminPagePage]\n})\nexport class AdminPagePageModule {}\n"]}
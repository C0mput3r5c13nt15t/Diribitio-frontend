{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","webpack:///src/app/services/messages.service.ts","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","webpack:///src/app/services/schedule.service.ts","webpack:///src/app/services/leaders.service.ts","webpack:///node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","webpack:///src/app/services/exchanges.service.ts","webpack:///node_modules/@ionic/core/dist/esm/theme-5641d27f.js","webpack:///src/app/services/admins.service.ts"],"names":["HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","MessagesService","http","auth","alert","config","update","backendUrl","backend_config","url","baseUrl","messageData","headers","Authorization","jwt","post","messageID","subscribe","emit","error","providedIn","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","ScheduleService","get","schedule","put","LeadersService","router","projectNoun","app_config","project_noun","eventName","event_name","signUpData","form","data","token","set_jwt","setLoggedIn","navigate","sendAuthentificationEmail","reset","message","loginData","leaderID","createButtonActiveGesture","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","dispatchClick","click","undefined","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","ExchangesService","exchangeID","receiverID","sendData","receiver_id","hostContext","selector","closest","createColorClasses","color","cssClassMap","length","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","direction","animation","test","querySelector","preventDefault","push","AdminsService","emailData","emailID","sortingProposal"],"mappings":"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","file":"common-es5.js","sourcesContent":["const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { AlertService } from './alert.service';\nimport { ConfigService } from './config.service';\nimport { Response } from 'src/models/Response.model';\n\n/**\n * This service handles all request to the backend having to do with the messages\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagesService {\n  /**\n   * The update event is emitted after every major successful request\n   */\n  @Output() update = new EventEmitter();\n\n  constructor(private http: HttpClient,\n              private auth: AuthenticationService,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  /**\n   * The url to the backend\n   */\n  backendUrl = this.config.backend_config.url;\n\n  /**\n   * Creates a new message for a project\n   * @param baseUrl Contains for which type of user accout this request is (students or leaders)\n   * @param messageData Contains the message\n   * @returns RequestObservable\n   */\n  createMessage(baseUrl= 'students', messageData) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + baseUrl + '/store_leaded_project_message', messageData, options);\n  }\n\n  /**\n   * Deletes the message with the given id from a project\n   * @param baseUrl Contains for which type of user accout this request is (students or leaders)\n   * @param messageID Contains the id of the message to be deleted\n   * @returns RequestObservable\n   */\n  deleteMessage(baseUrl= 'students', messageID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    this.http.delete<Response>(this.backendUrl + baseUrl + '/destroy_leaded_project_message/' + messageID, options).subscribe(() => {\n      this.update.emit();\n    }, error => {\n      this.alert.error('Löschung der Nachricht fehlgeschlagen!', error.error);\n    });\n  }\n}\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { ConfigService } from './config.service';\nimport { Response } from 'src/models/Response.model';\n\n/**\n * This service handles all request to the backend having to do with the shedule\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScheduleService {\n  /**\n   * The update event is emitted after every major successful request\n   */\n  @Output() update = new EventEmitter();\n\n  constructor(private http: HttpClient,\n              private auth: AuthenticationService,\n              private config: ConfigService) { }\n\n  /**\n   * The url to the backend\n   */\n  backendUrl = this.config.backend_config.url;\n\n  /**\n   * Gets the current schedule\n   * @returns RequestObservable\n   */\n  getSchedule() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'schedule/1', options);\n  }\n\n  /**\n   * Updates the current schedule\n   * @param schedule Contains the new schedule\n   * @returns RequestObservable\n   */\n  putSchedule(schedule) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    return this.http.put<Response>(this.backendUrl + 'admins/update_schedule', schedule, options);\n  }\n}\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { AlertService } from './alert.service';\nimport { ConfigService } from './config.service';\nimport { Response } from 'src/models/Response.model';\nimport { Router } from '@angular/router';\n\n/**\n * This service handles all request to the backend having to do with the leaders\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeadersService {\n  /**\n   * The update event is emitted after every major successful request\n   */\n  @Output() update = new EventEmitter();\n\n  constructor(private http: HttpClient,\n              private auth: AuthenticationService,\n              private alert: AlertService,\n              private config: ConfigService,\n              private router: Router) { }\n\n  /**\n   * The url to the backend\n   */\n  backendUrl = this.config.backend_config.url;\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  /**\n   * Creates a new leader account\n   * @param signUpData Contains the credentials for the account creation\n   * @param form Contains the form to be resetted after the creation\n   */\n  signUpLeader(signUpData, form) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'leaders/register', signUpData, options).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.auth.setLoggedIn(true);\n        this.router.navigate([this.eventName + '/Anmeldung']);\n      }\n      this.alert.alert('Dein Account wurde erfolgreich erstellt!');\n      this.sendAuthentificationEmail();\n      this.update.emit();\n      form.reset();\n    }, error => {\n      this.alert.error('Erstellung des Accounts fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Sends the authentification email to the leader associated with the provided token\n   */\n  sendAuthentificationEmail() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'leaders/email/resend', null, options).subscribe(data => {\n      this.alert.alert(data.message);\n    }, error => {\n      this.alert.error('Versandt der Verifizierungs E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Sends the authentification email to the leader associated with the provided token (same as before)\n   * @returns RequestObservable\n   */\n  sendAuthentificationEmailSubscribe() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'leaders/email/resend', null, options);\n  }\n\n  /**\n   * Logs in as leader with the given credentials\n   * @param loginData Contains the credentials to be used (email and password)\n   * @returns RequestObservable\n   */\n  logInLeader(loginData) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'leaders/login', loginData, options);\n  }\n\n  /**\n   * Logs out the leader associated with the provided token\n   */\n  logOutLeader() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'leaders/logout', null, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.auth.setLoggedIn(false);\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Logout fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Gets the leader associated with the provided token\n   * @returns RequestObservable\n   */\n  getSelfLeader() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'leaders/self', options);\n  }\n\n  /**\n   * Gets all leaders\n   * @returns RequestObservable\n   */\n  getAllLeaders() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'admins/index_leaders', options);\n  }\n\n  /**\n   * Deletes the leader with the given id\n   * @param leaderID Contains the id of the leader to be deleted\n   */\n  deleteLeader(leaderID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    this.http.delete<Response>(this.backendUrl + 'admins/destroy_leader/' + leaderID, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Löschung des ' + this.projectNoun + 'leiters fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Deletes the leader associated with the provided token\n   */\n  destroySelfLeader() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    this.http.delete<Response>(this.backendUrl + 'leaders/self_destroy', options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.auth.setLoggedIn(false);\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Löschung Ihres Accounts fehlgeschlagen!', error.error);\n    });\n  }\n}\n","import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { AlertService } from './alert.service';\nimport { ConfigService } from './config.service';\nimport { Response } from 'src/models/Response.model';\n\n/**\n * This service handles all request to the backend having to do with the exchanges\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExchangesService {\n  /**\n   * The update event is emitted after every major successful request\n   */\n  @Output() update = new EventEmitter();\n\n  constructor(private http: HttpClient,\n              private auth: AuthenticationService,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  /**\n   * The url to the backend\n   */\n  backendUrl = this.config.backend_config.url;\n\n  /**\n   * Gets all exchange requests for the student associated with the provided toke\n   * @returns Requestobservable\n   */\n  getAllExchangesForParticipant() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'students/exchange_requests', options);\n  }\n\n  /**\n   * Gets all exchanges\n   * @returns Requestobservable\n   */\n  getAllexchanges() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'admins/index_exchanges', options);\n  }\n\n  /**\n   * Gets the exchage with the given id\n   * @param exchangeID Contains the id of the exchange\n   * @returns RequestObservable\n   */\n  getExchange(exchangeID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'admins/exchange/' + exchangeID, options);\n  }\n\n  /**\n   * Confirms the exchage with the given id\n   * @param exchangeID Contains the id of the exchange\n   * @returns RequestObservable\n   */\n  confirmExchange(exchangeID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.put<Response>(this.backendUrl + 'students/confirm_exchange/' + exchangeID, null, options);\n  }\n\n  /**\n   * Carries out the exchage with the given id\n   * @param exchangeID Contains the id of the exchange\n   */\n  carryOutExchange(exchangeID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    this.http.put<Response>(this.backendUrl + 'admins/accomplish_exchange/' + exchangeID, null, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Durchführung des Tausches fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Creates an exchage request to the student with the given id\n   * @param receiverID Contains the id of the recieving student\n   * @returns RequestObservable\n   */\n  createExchange(receiverID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    const sendData = {\n      receiver_id: receiverID\n    };\n    return this.http.post<Response>(this.backendUrl + 'students/store_exchange', sendData, options);\n  }\n\n  /**\n   * Deletes the current exchange of the student associated with the provided toke\n   * @returns RequestObservable\n   */\n  deleteSelfExchange() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.delete<Response>(this.backendUrl + 'students/destroy_exchange', options);\n  }\n\n  /**\n   * Deletes the exchage with the given id\n   * @param exchangeID Contains the id of the exchage\n   */\n  deleteExchange(exchangeID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    this.http.delete<Response>(this.backendUrl + 'admins/destroy_exchange/' + exchangeID, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Löschung der Tauschanfrage fehlgeschlagen!', error.error);\n    });\n  }\n\n}\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { AlertService } from './alert.service';\nimport { ConfigService } from './config.service';\nimport { Response } from 'src/models/Response.model';\nimport { Router } from '@angular/router';\n\n/**\n * This service handles all request to the backend having to do with the admins\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminsService {\n  /**\n   * The update event is emitted after every major successful request\n   */\n  @Output() update = new EventEmitter();\n\n  constructor(private http: HttpClient,\n              private auth: AuthenticationService,\n              private alert: AlertService,\n              private config: ConfigService,\n              private router: Router) { }\n\n  /**\n   * The url to the backend\n   */\n  backendUrl = this.config.backend_config.url;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  /**\n   * Creates a new admin account\n   * @param signUpData Contains the credentials for the account creation\n   * @param form Contains the form to be resetted after the creation\n   */\n  signUpAdmin(signUpData, form) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'admins/register', signUpData, options).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.auth.setLoggedIn(true);\n        this.router.navigate([this.eventName + '/Anmeldung']);\n      }\n      this.alert.alert('Dein Account wurde erfolgreich erstellt!');\n      this.sendAuthentificationEmail();\n      this.update.emit();\n      form.reset();\n    }, error => {\n      this.alert.error('Erstellung des Accounts fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Sends the authentification email to the admin associated with the provided token\n   */\n  sendAuthentificationEmail() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'admins/email/resend', null, options).subscribe(data => {\n      this.alert.alert(data.message);\n    }, error => {\n      this.alert.error('Versandt der Verifizierungs E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Sends the authentification email to the admin associated with the provided token (same as before)\n   * @returns RequestObservable\n   */\n  sendAuthentificationEmailSubscribe() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'admins/email/resend', null, options);\n  }\n\n  /**\n   * Logs in as admin with the given credentials\n   * @param loginData Contains the credentials to be used (email and password)\n   * @returns RequestObservable\n   */\n  logInAdmin(loginData) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'admins/login', loginData, options);\n  }\n\n  /**\n   * Logs out the admin associated with the provided token\n   */\n  logOutAdmin() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'admins/logout', null, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.auth.setLoggedIn(false);\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Logout fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Gets the admin associated with the provided token\n   * @returns RequestObservable\n   */\n  getSelfAdmin() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'admins/self', options);\n  }\n\n  /**\n   * Gets all emails that are allowed for the creation of admin accounts\n   * @returns RequestObservable\n   */\n  getAllSignUpEmails() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'sign_up_emails', options);\n  }\n\n  /**\n   * Authorizes a new email to be used for the creation of an admin account\n   * @param emailData Contains the email to be authorized\n   * @returns RequestObservable\n   */\n  createSignUpEmail(emailData) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'sign_up_emails', emailData, options);\n  }\n\n  /**\n   * Forbids the furter use of an email that was previously allowed for the creation of an admin account\n   * @param emailID Contains the id of the email to be forbidden\n   */\n  deleteSignUpEmail(emailID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    this.http.delete<Response>(this.backendUrl + 'sign_up_emails/' + emailID, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Sperrung der E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Creates a sorting proposal\n   * @returns RequestObservable\n   */\n  createSortingProposal() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'admins/create_sorting_proposal', null, options);\n  }\n\n  /**\n   * Gets the current sorting proposal\n   * @returns RequestObservable\n   */\n  requestSortingProposal() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'admins/request_sorting_proposal', options);\n  }\n\n  /**\n   * Updates the current sorting proposal\n   * @returns RequestObservable\n   */\n  editSortingProposal(sortingProposal) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'admins/edit_sorting_proposal', sortingProposal, options).subscribe(data => {\n      this.alert.alert(data.message);\n    }, error => {\n      this.alert.error('Erstellung eines Backups fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Applies the current sorting proposal to the actual database\n   * @returns MessageString\n   */\n  applySortingProposal() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'admins/apply_sorting_proposal', null, options).subscribe(data => {\n      this.alert.alert(data.message);\n    }, error => {\n      this.alert.error('Anwendung des Sortiervorschlags fehlgeschlagen!', error.error);\n    });\n  }\n\n}\n"]}
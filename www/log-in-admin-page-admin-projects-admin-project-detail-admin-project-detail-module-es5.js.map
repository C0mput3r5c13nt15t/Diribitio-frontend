{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.module.ts","webpack:///src/app/log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.page.html","webpack:///src/app/log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.page.scss","webpack:///src/app/log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.page.ts"],"names":["routes","path","component","AdminProjectDetailPageModule","imports","forChild","declarations","AdminProjectDetailPage","activatedRoute","router","scheduleService","projectsService","alertCtrl","config","subscriptions","loadedProject","id","authorized","editable","title","image","descr","leader_name","leader_type","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","leader","assistant_student_leaders","loadedStudentLeader","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","schedule","begin","control","registration","sort_students","exchange","projects","end","imageUrl","backend_config","projectNoun","app_config","project_noun","projectsNoun","projects_noun","eventName","event_name","adminWrongTime","get_error","currentDate","Date","paramMap","subscribe","has","navigate","adminUrl","get","projectId","Number","getSchedule","getProject","push","update","forEach","sub","unsubscribe","data","getProjectAdmin","toogleAuthorizedProject","Boolean","toogleEditableProject","create","header","message","buttons","text","handler","deleteProject","then","alertEl","present","selector","template"],"mappings":"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","file":"log-in-admin-page-admin-projects-admin-project-detail-admin-project-detail-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminProjectDetailPage } from './admin-project-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminProjectDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminProjectDetailPage]\n})\nexport class AdminProjectDetailPageModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}/{{ projectsNoun }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>{{ projectNoun }}</ion-title>\\n    <ion-button [disabled]=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"deleteProject()\\\">\\n      <ion-icon name=\\\"trash\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-img *ngIf=\\\"loadedProject.image != '' && loadedProject.image != null\\\" src='{{ imageUrl }}{{ loadedProject.image }}'></ion-img>\\n    <ion-card-header>\\n      <ion-card-title text-wrap>{{ loadedProject.title }}</ion-card-title>\\n      <ion-card-subtitle>\\n        <ion-label color=\\\"text\\\">Erstellt am {{ loadedProject.created_at | date: 'dd.MM.yyyy' }} | Zuletzt aktualisiert am {{ loadedProject.updated_at | date: 'dd.MM.yyyy' }}</ion-label>\\n      </ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item-group>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\" class=\\\"descr\\\">\\n          <ion-label color=\\\"text\\\">{{ loadedProject.descr }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Leiter</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ loadedProject.leader_name }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Kosten</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ loadedProject.cost }}â‚¬</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Zeitraum</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">1.Tag:  {{ loadedProject.first_day_begin }} bis {{ loadedProject.first_day_end }}</ion-label>\\n        </ion-item>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">2.Tag:  {{ loadedProject.second_day_begin }} bis {{ loadedProject.second_day_end }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ loadedProject.min_grade }}. bis {{ loadedProject.max_grade }}.Klasse</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Teinehmeranzahl</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">von {{ loadedProject.min_participants }} bis {{ loadedProject.max_participants }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\" *ngIf=\\\"loadedProject.messages.length\\\">\\n          <ion-label color=\\\"text\\\">Nachrichten</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"loadedProject.messages.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let message of loadedProject.messages\\\">\\n            <ion-card class=\\\"message\\\" color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"buttons\\\">{{ message.sender_name }}</ion-text><br>\\n                <ion-text color=\\\"text\\\">{{ message.message }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\" *ngIf=\\\"loadedProject.leader\\\">\\n          <ion-label color=\\\"text\\\">Projektleiter</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"loadedProject.leader && loadedProject.leader_type === 'App\\\\\\\\Student'\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ loadedProject.leader.first_name }} {{ loadedProject.leader.last_name }} {{ loadedProject.leader.grade }}{{ loadedProject.leader.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <div *ngIf=\\\"loadedProject.leader && loadedProject.leader_type === 'App\\\\\\\\Leader'\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ loadedProject.leader.user_name }} {{ loadedProject.leader.email }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\" *ngIf=\\\"loadedProject.assistant_student_leaders.length\\\">\\n          <ion-label color=\\\"text\\\">Assistenten</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"loadedProject.assistant_student_leaders.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let assistant of loadedProject.assistant_student_leaders\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\"><ion-icon name=\\\"star-half\\\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Teilnehmer</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"loadedProject.participants.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let participant of loadedProject.participants\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <div *ngIf=\\\"!loadedProject.participants.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"danger\\\">keine Teilnehmer</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Administration</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">Zugelassen</ion-label><ion-toggle [disabled]=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration || !!+loadedProject.editable == true\\\"  color=\\\"buttons\\\" [(ngModel)]=\\\"!!+loadedProject.authorized\\\" (ionChange)=\\\"authorizedChanged()\\\">Aktiviert</ion-toggle>\\n        </ion-item>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">Bearbeitbar</ion-label><ion-toggle [disabled]=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\"  color=\\\"buttons\\\" [(ngModel)]=\\\"!!+loadedProject.editable\\\" (ionChange)=\\\"editableChanged()\\\">Aktiviert</ion-toggle>\\n        </ion-item>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button [disabled]=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"deleteProject()\\\">{{ projectNoun }} lÃ¶schen</ion-button>\\n          <ion-label *ngIf=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" color=\\\"text\\\">\\n            {{ adminWrongTime }}\\n          </ion-label>\\n        </div>\\n      </ion-item-group>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","export default \"img {\\n  width: auto;\\n  margin: 10px auto auto auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGFkbWluLXByb2plY3QtZGV0YWlsLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSwyQkFBQTtBQUNKIiwiZmlsZSI6ImFkbWluLXByb2plY3QtZGV0YWlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImltZyB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIG1hcmdpbjogMTBweCBhdXRvIGF1dG8gYXV0bztcclxufSJdfQ== */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Student } from 'src/models/Student.model';\nimport { Project } from 'src/models/Project.model';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-project-detail',\n  templateUrl: './admin-project-detail.page.html',\n  styleUrls: ['./admin-project-detail.page.scss'],\n})\nexport class AdminProjectDetailPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n\n  projectId: number;\n\n  loadedProject: Project = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_type: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: [],\n    leader: null,\n    assistant_student_leaders: []\n  };\n\n  loadedStudentLeader: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 2\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  adminWrongTime: string;\n\n  imageUrl = this.config.backend_config.imageUrl;\n  projectNoun = this.config.app_config.project_noun;\n  projectsNoun = this.config.app_config.projects_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private scheduleService: ScheduleService,\n              private projectsService: ProjectsService,\n              private alertCtrl: AlertController,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.adminWrongTime = this.config.get_error('admin-wrong_time');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ProjectID')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.adminUrl = paramMap.get('AdminName');\n      this.projectId = Number(paramMap.get('ProjectID'));\n    });\n\n    this.getSchedule();\n    this.getProject();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.projectsService.update.subscribe(() => this.getProject())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getProject() {\n    this.projectsService.getProjectAdmin(this.projectId).subscribe(data => {\n      if (!data.data) {\n        this.router.navigate([this.eventName + '/Admin/' + this.adminUrl]);\n      } else {\n        this.loadedProject = data.data;\n      }\n    });\n  }\n\n  authorizedChanged() {\n    if (this.currentDate > this.schedule.control && this.currentDate <= this.schedule.registration) {\n      this.projectsService.toogleAuthorizedProject(this.loadedProject.id, Boolean(this.loadedProject.authorized));\n    }\n  }\n\n  editableChanged() {\n    this.projectsService.toogleEditableProject(this.loadedProject.id, Boolean(this.loadedProject.editable));\n  }\n\n  deleteProject() {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie dieses Projekt wirklich unwiederruflich lÃ¶schen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'LÃ¶schen',\n        handler: () => {\n          this.projectsService.deleteProject(this.loadedProject.id);\n          this.router.navigate([this.eventName + '/Admin/' + this.adminUrl + '/' + this.projectsNoun]);\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n"]}
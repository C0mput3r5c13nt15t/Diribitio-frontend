{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.page.html","webpack:///src/app/log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.module.ts","webpack:///src/app/log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.page.scss","webpack:///src/app/log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.page.ts"],"names":["routes","path","component","AdminProjectDetailPageModule","imports","forChild","declarations","AdminProjectDetailPage","activatedRoute","router","scheduleService","projectsService","alertCtrl","config","loadedProject","id","authorized","editable","title","image","descr","leader_name","leader_type","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","leader","assistant_student_leaders","loadedStudentLeader","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","schedule","begin","control","registration","sort_students","exchange","projects","end","projectNoun","app_config","project_noun","adminWrongTime","get_error","currentDate","Date","paramMap","subscribe","has","navigate","adminUrl","get","projectId","getSchedule","data","getProject","update","ProjectID","getProjectAdmin","toogleAuthorizedProject","toogleEditableProject","create","header","message","buttons","text","handler","deleteProject","then","alertEl","present","selector","template"],"mappings":"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","file":"log-in-admin-page-admin-projects-admin-project-detail-admin-project-detail-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"Projekttage/Admin/{{ adminUrl }}/Projekte\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>{{ projectNoun }}</ion-title>\\n    <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"deleteProject()\\\">\\n      <ion-icon name=\\\"trash\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-img *ngIf=\\\"loadedProject.image != '' && loadedProject.image != null\\\" [src]='\\\"http://192.248.186.231:8000/storage/images/\\\" + loadedProject.image'></ion-img>\\n    <ion-card-header>\\n      <ion-title>\\n        <h1>{{ loadedProject.title }}</h1>\\n      </ion-title>\\n      <ion-card-subtitle>\\n        <ion-label color=\\\"text\\\">Erstellt am {{ loadedProject.created_at | date: 'dd.MM.yyyy' }} | Zuletzt aktualisiert am {{ loadedProject.updated_at | date: 'dd.MM.yyyy' }}</ion-label>\\n      </ion-card-subtitle>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item-group>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ loadedProject.descr }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Leiter</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ loadedProject.leader_name }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Kosten</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ loadedProject.cost }}â‚¬</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Zeitraum</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">1.Tag:  {{ loadedProject.first_day_begin }} bis {{ loadedProject.first_day_end }}</ion-label>\\n        </ion-item>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">2.Tag:  {{ loadedProject.second_day_begin }} bis {{ loadedProject.second_day_end }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ loadedProject.min_grade }}. bis {{ loadedProject.max_grade }}.Klasse</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Teinehmeranzahl</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">von {{ loadedProject.min_participants }} bis {{ loadedProject.max_participants }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\" *ngIf=\\\"loadedProject.messages.length\\\">\\n          <ion-label color=\\\"text\\\">Nachrichten</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"loadedProject.messages.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let message of loadedProject.messages\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\">{{ message.message }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\" *ngIf=\\\"loadedProject.leader\\\">\\n          <ion-label color=\\\"text\\\">Projektleiter</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"loadedProject.leader && loadedProject.leader_type === 'App\\\\\\\\Student'\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ loadedProject.leader.first_name }} {{ loadedProject.leader.last_name }} {{ loadedProject.leader.grade }}{{ loadedProject.leader.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <div *ngIf=\\\"loadedProject.leader && loadedProject.leader_type === 'App\\\\\\\\Leader'\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ loadedProject.leader.user_name }} {{ loadedProject.leader.email }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\" *ngIf=\\\"loadedProject.assistant_student_leaders.length\\\">\\n          <ion-label color=\\\"text\\\">Assistenten</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"loadedProject.assistant_student_leaders.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let assistant of loadedProject.assistant_student_leaders\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\"><ion-icon name=\\\"star-half\\\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Teilnehmer</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"loadedProject.participants.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let participant of loadedProject.participants\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <div *ngIf=\\\"!loadedProject.participants.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"danger\\\">keine Teilnehmer</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Administration</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">Zugelassen</ion-label><ion-toggle [disabled]=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration || !!+loadedProject.editable == true\\\"  color=\\\"buttons\\\" [(ngModel)]=\\\"!!+loadedProject.authorized\\\" (ionChange)=\\\"authorizedChanged()\\\">Aktiviert</ion-toggle>\\n        </ion-item>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">Bearbeitbar</ion-label><ion-toggle [disabled]=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\"  color=\\\"buttons\\\" [(ngModel)]=\\\"!!+loadedProject.editable\\\" (ionChange)=\\\"editableChanged()\\\">Aktiviert</ion-toggle>\\n        </ion-item>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button [disabled]=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"deleteProject()\\\">{{ projectNoun }} lÃ¶schen</ion-button>\\n          <ion-label *ngIf=\\\"currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" color=\\\"text\\\">\\n            {{ adminWrongTime }}\\n          </ion-label>\\n        </div>\\n      </ion-item-group>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminProjectDetailPage } from './admin-project-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminProjectDetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminProjectDetailPage]\n})\nexport class AdminProjectDetailPageModule {}\n","export default \"img {\\n  width: auto;\\n  margin: 10px auto auto auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL2FkbWluLXBhZ2UvYWRtaW4tcHJvamVjdHMvYWRtaW4tcHJvamVjdC1kZXRhaWwvYWRtaW4tcHJvamVjdC1kZXRhaWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLDJCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2ctaW4vYWRtaW4tcGFnZS9hZG1pbi1wcm9qZWN0cy9hZG1pbi1wcm9qZWN0LWRldGFpbC9hZG1pbi1wcm9qZWN0LWRldGFpbC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBtYXJnaW46IDEwcHggYXV0byBhdXRvIGF1dG87XHJcbn0iXX0= */\";","import { Component, OnInit, Output } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { SchÃ¼ler } from 'src/assets/models/SchÃ¼ler.model';\nimport { Projekt } from 'src/assets/models/Projekt.model';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/schedule.service';\nimport { ConfigService } from 'src/app/config.service';\n\n@Component({\n  selector: 'app-admin-project-detail',\n  templateUrl: './admin-project-detail.page.html',\n  styleUrls: ['./admin-project-detail.page.scss'],\n})\nexport class AdminProjectDetailPage implements OnInit {\n  adminUrl: string;\n\n  projectId;\n\n  loadedProject: Projekt = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_type: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: [],\n    leader: null,\n    assistant_student_leaders: []\n  };\n\n  loadedStudentLeader: SchÃ¼ler = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 2\n  };\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  currentDate: any;\n\n  adminWrongTime: string;\n\n  projectNoun: string;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private scheduleService: ScheduleService,\n              private projectsService: ProjectsService,\n              private alertCtrl: AlertController,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.projectNoun = this.config.app_config.project_noun;\n\n    this.adminWrongTime = this.config.get_error('admin-wrong_time');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ProjectID')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.adminUrl = paramMap.get('AdminName');\n      this.projectId = paramMap.get('ProjectID');\n    });\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getProject(this.projectId);\n\n    this.projectsService.update.subscribe(() => this.getProject(this.projectId));\n  }\n\n  getProject(ProjectID) {\n    this.projectsService.getProjectAdmin(ProjectID).subscribe(data => {\n      this.loadedProject = data.data;\n    });\n  }\n\n  authorizedChanged() {\n    this.projectsService.toogleAuthorizedProject(this.loadedProject.id, this.loadedProject.authorized);\n  }\n\n  editableChanged() {\n    this.projectsService.toogleEditableProject(this.loadedProject.id, this.loadedProject.editable);\n  }\n\n  deleteProject() {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie dieses Projekt wirklich unwiederruflich lÃ¶schen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'LÃ¶schen',\n        handler: () => {\n          this.projectsService.deleteProject(this.loadedProject.id);\n          this.router.navigate(['Projekttage/Admin/' + this.adminUrl + '/Projekte']);\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n"]}
{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js"],"names":["Tab","hostRef","this","loaded","active","setActive","prepareLazyLoaded","isActive","component","a","delegate","el","e","console","error","Promise","resolve","tab","role","class","style","Tabs","ionNavWillLoad","ionTabsWillChange","ionTabsDidChange","transitioning","useRouter","onTabClicked","ev","detail","href","router","document","querySelector","push","select","closest","tabs","length","emit","tabBar","selectedTab","getTab","shouldSwitch","notifyRouter","tabSwitch","id","changed","element","markVisible","tabId","reject","leavingTab","navChanged","onIonTabButtonClick","name","Array","from","querySelectorAll","tabEl","find","t"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-92848855.js';\nimport { a as attachComponent } from './framework-delegate-d1eb6504.js';\n\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\n\nconst Tab = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.loaded = false;\n        /** @internal */\n        this.active = false;\n    }\n    async componentWillLoad() {\n        if (this.active) {\n            await this.setActive();\n        }\n    }\n    /** Set the active component for the tab */\n    async setActive() {\n        await this.prepareLazyLoaded();\n        this.active = true;\n    }\n    changeActive(isActive) {\n        if (isActive) {\n            this.prepareLazyLoaded();\n        }\n    }\n    prepareLazyLoaded() {\n        if (!this.loaded && this.component != null) {\n            this.loaded = true;\n            try {\n                return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        return Promise.resolve(undefined);\n    }\n    render() {\n        const { tab, active, component } = this;\n        return (h(Host, { role: \"tabpanel\", \"aria-hidden\": !active ? 'true' : null, \"aria-labelledby\": `tab-button-${tab}`, class: {\n                'ion-page': component === undefined,\n                'tab-hidden': !active\n            } }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"active\": [\"changeActive\"]\n    }; }\n};\nTab.style = tabCss;\n\nconst tabsCss = \":host{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:100%;height:100%;contain:layout size style;z-index:0}.tabs-inner{position:relative;-ms-flex:1;flex:1;contain:layout size style}\";\n\nconst Tabs = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\n        this.ionTabsWillChange = createEvent(this, \"ionTabsWillChange\", 3);\n        this.ionTabsDidChange = createEvent(this, \"ionTabsDidChange\", 3);\n        this.transitioning = false;\n        /** @internal */\n        this.useRouter = false;\n        this.onTabClicked = (ev) => {\n            const { href, tab } = ev.detail;\n            if (this.useRouter && href !== undefined) {\n                const router = document.querySelector('ion-router');\n                if (router) {\n                    router.push(href);\n                }\n            }\n            else {\n                this.select(tab);\n            }\n        };\n    }\n    async componentWillLoad() {\n        if (!this.useRouter) {\n            this.useRouter = !!document.querySelector('ion-router') && !this.el.closest('[no-router]');\n        }\n        if (!this.useRouter) {\n            const tabs = this.tabs;\n            if (tabs.length > 0) {\n                await this.select(tabs[0]);\n            }\n        }\n        this.ionNavWillLoad.emit();\n    }\n    componentWillRender() {\n        const tabBar = this.el.querySelector('ion-tab-bar');\n        if (tabBar) {\n            const tab = this.selectedTab ? this.selectedTab.tab : undefined;\n            tabBar.selectedTab = tab;\n        }\n    }\n    /**\n     * Select a tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async select(tab) {\n        const selectedTab = getTab(this.tabs, tab);\n        if (!this.shouldSwitch(selectedTab)) {\n            return false;\n        }\n        await this.setActive(selectedTab);\n        await this.notifyRouter();\n        this.tabSwitch();\n        return true;\n    }\n    /**\n     * Get a specific tab by the value of its `tab` property or an element reference.\n     *\n     * @param tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property.\n     */\n    async getTab(tab) {\n        return getTab(this.tabs, tab);\n    }\n    /**\n     * Get the currently selected tab.\n     */\n    getSelected() {\n        return Promise.resolve(this.selectedTab ? this.selectedTab.tab : undefined);\n    }\n    /** @internal */\n    async setRouteId(id) {\n        const selectedTab = getTab(this.tabs, id);\n        if (!this.shouldSwitch(selectedTab)) {\n            return { changed: false, element: this.selectedTab };\n        }\n        await this.setActive(selectedTab);\n        return {\n            changed: true,\n            element: this.selectedTab,\n            markVisible: () => this.tabSwitch(),\n        };\n    }\n    /** @internal */\n    async getRouteId() {\n        const tabId = this.selectedTab && this.selectedTab.tab;\n        return tabId !== undefined ? { id: tabId, element: this.selectedTab } : undefined;\n    }\n    setActive(selectedTab) {\n        if (this.transitioning) {\n            return Promise.reject('transitioning already happening');\n        }\n        this.transitioning = true;\n        this.leavingTab = this.selectedTab;\n        this.selectedTab = selectedTab;\n        this.ionTabsWillChange.emit({ tab: selectedTab.tab });\n        selectedTab.active = true;\n        return Promise.resolve();\n    }\n    tabSwitch() {\n        const selectedTab = this.selectedTab;\n        const leavingTab = this.leavingTab;\n        this.leavingTab = undefined;\n        this.transitioning = false;\n        if (!selectedTab) {\n            return;\n        }\n        if (leavingTab !== selectedTab) {\n            if (leavingTab) {\n                leavingTab.active = false;\n            }\n            this.ionTabsDidChange.emit({ tab: selectedTab.tab });\n        }\n    }\n    notifyRouter() {\n        if (this.useRouter) {\n            const router = document.querySelector('ion-router');\n            if (router) {\n                return router.navChanged('forward');\n            }\n        }\n        return Promise.resolve(false);\n    }\n    shouldSwitch(selectedTab) {\n        const leavingTab = this.selectedTab;\n        return selectedTab !== undefined && selectedTab !== leavingTab && !this.transitioning;\n    }\n    get tabs() {\n        return Array.from(this.el.querySelectorAll('ion-tab'));\n    }\n    render() {\n        return (h(Host, { onIonTabButtonClick: this.onTabClicked }, h(\"slot\", { name: \"top\" }), h(\"div\", { class: \"tabs-inner\" }, h(\"slot\", null)), h(\"slot\", { name: \"bottom\" })));\n    }\n    get el() { return getElement(this); }\n};\nconst getTab = (tabs, tab) => {\n    const tabEl = (typeof tab === 'string')\n        ? tabs.find(t => t.tab === tab)\n        : tab;\n    if (!tabEl) {\n        console.error(`tab with id: \"${tabEl}\" does not exist`);\n    }\n    return tabEl;\n};\nTabs.style = tabsCss;\n\nexport { Tab as ion_tab, Tabs as ion_tabs };\n"]}
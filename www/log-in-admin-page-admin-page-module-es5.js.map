{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-page.page.html","webpack:///src/app/log-in/admin-page/admin-page.module.ts","webpack:///src/app/log-in/admin-page/admin-page.page.scss","webpack:///src/app/log-in/admin-page/admin-page.page.ts"],"names":["routes","path","component","AdminPagePageModule","imports","forChild","declarations","AdminPagePage","activatedRoute","router","adminsService","scheduleService","config","alert","loadedAdmin","id","user_name","email","password","schedule","begin","control","registration","sort_students","exchange","projects","end","buttonPressed","projectsNoun","app_config","projects_noun","projectNoun","project_noun","text","get_content","currentDate","Date","paramMap","subscribe","has","navigate","getSchedule","data","getAdmin","update","getSelfAdmin","email_verified_at","sendAuthentificationEmailSubscribe","message","error","logOutAdmin","selector","template"],"mappings":"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","file":"log-in-admin-page-admin-page-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Admin</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" (click)=\\\"logout()\\\">\\n      <ion-icon name=\\\"log-out\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n        <ion-card-title><ion-label color=\\\"buttons\\\">Wilkommen {{ loadedAdmin.user_name }}</ion-label></ion-card-title>\\n        <ion-button (click)=\\\"refresh()\\\" slot=\\\"end\\\" color=\\\"buttons\\\"><ion-icon name=\\\"refresh\\\"></ion-icon></ion-button>\\n      </ion-item>  \\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"loadedAdmin.email_verified_at == null && !buttonPressed\\\">\\n      <ion-label color=\\\"text\\\">\\n        Sie heaben ihre E-Mail noch nicht verifiziert. Bitte holen sie dies nach bevor sie fortfahren.\\n      </ion-label>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"sendVerificationEmail()\\\">E-Mail senden</ion-button>\\n      </div>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item [disabled]=\\\"loadedAdmin.email_verified_at == null\\\" color=\\\"items\\\" [routerLink]=\\\"['./Projekte']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"apps\\\"></ion-icon>{{ projectsNoun }} verwalten\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedAdmin.email_verified_at == null\\\" color=\\\"items\\\" [routerLink]=\\\"['./Schüler und Projektleiter verwalten']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"people\\\"></ion-icon>Schüler und {{ projectNoun }}leiter verwalten\\n        </ion-item>\\n        <ion-item *ngIf=\\\"currentDate > schedule.exchange && currentDate <= schedule.projects\\\" [disabled]=\\\"loadedAdmin.email_verified_at == null\\\" color=\\\"items\\\" [routerLink]=\\\"['./Tauschanfragen']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"people\\\"></ion-icon>Tauschanfragen verwalten\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedAdmin.email_verified_at == null\\\" color=\\\"items\\\" [routerLink]=\\\"['./Zeitplan verwalten']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"calendar\\\"></ion-icon>Zeitplan verwalten\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedAdmin.email_verified_at == null\\\" color=\\\"items\\\" [routerLink]=\\\"['./App verwalten']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"construct\\\"></ion-icon>App verwalten\\n        </ion-item>\\n      </ion-list>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"logout()\\\">Abmelden</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminPagePage } from './admin-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminPagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminPagePage]\n})\nexport class AdminPagePageModule {}\n","export default \"ion-col {\\n  height: 80px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL2FkbWluLXBhZ2UvYWRtaW4tcGFnZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2ctaW4vYWRtaW4tcGFnZS9hZG1pbi1wYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb2wge1xyXG4gICAgaGVpZ2h0OiA4MHB4O1xyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminsService } from 'src/app/admins.service';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { formatDate } from '@angular/common';\nimport { Admin } from 'src/assets/models/Admin.model';\nimport { ConfigService } from 'src/app/config.service';\nimport { ScheduleService } from 'src/app/schedule.service';\nimport { AlertService } from 'src/app/alert.service';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.page.html',\n  styleUrls: ['./admin-page.page.scss'],\n})\nexport class AdminPagePage implements OnInit {\n  loadedAdmin: Admin = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: ''\n  };\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  currentDate: any;\n\n  text: string;\n\n  buttonPressed = true;\n\n  projectsNoun: string;\n  projectNoun: string;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private adminsService: AdminsService,\n              private scheduleService: ScheduleService,\n              private config: ConfigService,\n              private alert: AlertService) { }\n\n  ngOnInit() {\n    this.projectsNoun = this.config.app_config.projects_noun;\n    this.projectNoun = this.config.app_config.project_noun;\n\n    this.text = this.config.get_content('admin-page');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('AdminName')) {\n        this.router.navigate(['']);\n        return;\n      }\n    });\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getAdmin();\n    this.adminsService.update.subscribe(() => this.getAdmin());\n  }\n\n  getAdmin() {\n    this.adminsService.getSelfAdmin().subscribe(data => {\n      this.loadedAdmin = data.data;\n\n      if (this.loadedAdmin.email_verified_at == null) {\n        this.buttonPressed = false;\n      }\n    });\n  }\n\n  refresh() {\n    this.getAdmin();\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  sendVerificationEmail() {\n    this.adminsService.sendAuthentificationEmailSubscribe().subscribe(data => {\n      this.alert.alert(data.message);\n      this.buttonPressed = true;\n    }, error => {\n      this.alert.error('Verifizierungs E-Mail konnte nicht versandt werden!', error.error);\n    });\n  }\n\n  logout() {\n    this.adminsService.logOutAdmin();\n  }\n\n}\n"]}
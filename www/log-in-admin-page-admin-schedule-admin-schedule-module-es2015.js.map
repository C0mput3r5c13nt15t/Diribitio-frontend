{"version":3,"sources":["./src/app/log-in/admin-page/admin-schedule/admin-schedule.page.html","./src/app/log-in/admin-page/admin-schedule/admin-schedule.page.ts","./src/app/log-in/admin-page/admin-schedule/admin-schedule.page.scss","./src/app/log-in/admin-page/admin-schedule/admin-schedule.module.ts"],"names":[],"mappings":"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","file":"log-in-admin-page-admin-schedule-admin-schedule-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Zeitplan verwalten</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <form #form=\\\"ngForm\\\" name=\\\"ParticipantForm\\\" (ngSubmit)=\\\"manageSchedule()\\\">\\n    <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n      <ion-card-header>\\n        <ion-card-title>Zeitplan</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content *ngIf=\\\"text\\\">\\n        <ion-label color=\\\"text\\\">\\n          {{ text }}\\n        </ion-label>\\n      </ion-card-content>\\n      <ion-card-content>\\n        <ion-list>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            ab <ion-datetime placeholder=\\\"Bitte ein Datum wählen\\\" required name=\\\"Beginn\\\" [(ngModel)]=\\\"schedule.begin\\\" picker-format=\\\"YYYY-MM-DD\\\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez' display-timezone=\\\"utc\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\"></ion-datetime>\\n          </ion-item>\\n          <ion-item color=\\\"buttons\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"create\\\"></ion-icon>\\n            <ion-label>Registrierung und Erstellung der {{ projectsNoun }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate <= schedule.begin || currentDate > schedule.control\\\">\\n            <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"create\\\"></ion-icon>\\n            <ion-label color=\\\"text\\\">Registrierung und Erstellung der {{ projectsNoun }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            bis <ion-datetime placeholder=\\\"Bitte ein Datum wählen\\\" name=\\\"Kontrolle\\\" [(ngModel)]=\\\"schedule.control\\\" picker-format=\\\"YYYY-MM-DD\\\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez' display-timezone=\\\"utc\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\"></ion-datetime>\\n          </ion-item>\\n          <ion-item color=\\\"buttons\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate > schedule.control && currentDate <= schedule.registration\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"shield-checkmark\\\"></ion-icon>\\n            <ion-label>Kontrolle und Freigabe der {{ projectsNoun }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate <= schedule.control || currentDate > schedule.registration\\\">\\n            <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"shield-checkmark\\\"></ion-icon>\\n            <ion-label color=\\\"text\\\">Kontrolle und Freigabe der {{ projectsNoun }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            bis <ion-datetime placeholder=\\\"Bitte ein Datum wählen\\\" required name=\\\"Anmeldung\\\" [(ngModel)]=\\\"schedule.registration\\\" picker-format=\\\"YYYY-MM-DD\\\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez' display-timezone=\\\"utc\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\"></ion-datetime>\\n          </ion-item>\\n          <ion-item color=\\\"buttons\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate > schedule.registration && currentDate <= schedule.sort_students\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"log-in\\\"></ion-icon>\\n            <ion-label>Anmeldung für die {{ projectsNoun }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate <= schedule.registration || currentDate > schedule.sort_students\\\">\\n            <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"log-in\\\"></ion-icon>\\n            <ion-label color=\\\"text\\\">Anmeldung für die {{ projectsNoun }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            bis <ion-datetime placeholder=\\\"Bitte ein Datum wählen\\\" required name=\\\"Sortierung\\\" [(ngModel)]=\\\"schedule.sort_students\\\" picker-format=\\\"YYYY-MM-DD\\\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez' display-timezone=\\\"utc\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\"></ion-datetime>\\n          </ion-item>\\n          <ion-item color=\\\"buttons\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate > schedule.sort_students && currentDate <= schedule.exchange\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"funnel\\\"></ion-icon>\\n            <ion-label>Sortierung durch den Algorithmus</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate <= schedule.sort_students || currentDate > schedule.exchange\\\">\\n            <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"funnel\\\"></ion-icon>\\n            <ion-label color=\\\"text\\\">Sortierung durch den Algorithmus</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            bis <ion-datetime placeholder=\\\"Bitte ein Datum wählen\\\" required name=\\\"Tausch\\\" [(ngModel)]=\\\"schedule.exchange\\\" picker-format=\\\"YYYY-MM-DD\\\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez' display-timezone=\\\"utc\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\"></ion-datetime>\\n          </ion-item>\\n          <ion-item color=\\\"buttons\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate > schedule.exchange && currentDate <= schedule.projects\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"swap-horizontal\\\"></ion-icon>\\n            <ion-label>Tauschphase</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate <= schedule.exchange || currentDate > schedule.projects\\\">\\n            <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"swap-horizontal\\\"></ion-icon>\\n            <ion-label color=\\\"text\\\">Tauschphase</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            bis <ion-datetime placeholder=\\\"Bitte ein Datum wählen\\\" required name=\\\"Projekte\\\" [(ngModel)]=\\\"schedule.projects\\\" picker-format=\\\"YYYY-MM-DD\\\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez' display-timezone=\\\"utc\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\"></ion-datetime>\\n          </ion-item>\\n          <ion-item color=\\\"buttons\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate > schedule.projects && currentDate <= schedule.end\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"flag\\\"></ion-icon>\\n            <ion-label>{{ eventName }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngIf=\\\"currentDate <= schedule.projects || currentDate > schedule.end\\\">\\n            <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"flag\\\"></ion-icon>\\n            <ion-label color=\\\"text\\\">{{ eventName }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            bis<ion-datetime placeholder=\\\"Bitte ein Datum wählen\\\" required name=\\\"Ende\\\" [(ngModel)]=\\\"schedule.end\\\" picker-format=\\\"YYYY-MM-DD\\\" monthShortNames='Jan, Feb, März, Apr, Mai, Jun, Jul, Aug, Sept, Okt, Nov, Dez' display-timezone=\\\"utc\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\"></ion-datetime>\\n          </ion-item>\\n        </ion-list>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Zeitplan bestätigen</ion-button>\\n        </div>\\n      </ion-card-content>\\n    </ion-card>\\n  </form>\\n</ion-content>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-schedule',\n  templateUrl: './admin-schedule.page.html',\n  styleUrls: ['./admin-schedule.page.scss'],\n})\nexport class AdminSchedulePage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: new Date(),\n    control: new Date(),\n    registration: new Date(),\n    sort_students: new Date(),\n    exchange: new Date(),\n    projects: new Date(),\n    end: new Date()\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  text: string;\n\n  projectsNoun = this.config.app_config.projects_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private scheduleService: ScheduleService,\n              private router: Router,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('admin-schedule');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n\n    this.getSchedule();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  manageSchedule() {\n    this.alert.alert(JSON.stringify(this.schedule));\n    this.scheduleService.putSchedule(this.schedule).subscribe(data => {\n      this.alert.alert(data.message);\n      this.scheduleService.update.emit();\n      this.router.navigate([this.eventName + '/Admin/' + this.adminUrl]);\n    }, error => {\n      this.alert.error('Aktualisierung des Zeitplans fehlgeschlagen!', error.error);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi1zY2hlZHVsZS5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminSchedulePage } from './admin-schedule.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminSchedulePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminSchedulePage]\n})\nexport class AdminSchedulePageModule {}\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./src/app/log-in/leader-page/messages/messages.page.html","./src/app/log-in/leader-page/messages/messages.module.ts","./src/app/log-in/leader-page/messages/messages.page.scss","./src/app/log-in/leader-page/messages/messages.page.ts"],"names":[],"mappings":"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","file":"log-in-leader-page-messages-messages-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"Projekttage/Benutzer/{{ leaderUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Nachrichten</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-list class=\\\"content\\\" *ngIf=\\\"leadedProject.messages.length\\\">\\n    <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let message of leadedProject.messages\\\">\\n      <ion-card color=\\\"background\\\">\\n        <ion-card-content>\\n          <ion-text color=\\\"text\\\">{{ message.message }}</ion-text>\\n        </ion-card-content>\\n      </ion-card>\\n      <ion-buttons (click)=\\\"delete(message)\\\"><ion-icon color=\\\"danger\\\" name=\\\"close\\\"></ion-icon></ion-buttons>\\n    </ion-item>\\n  </ion-list>\\n  <ion-card color=\\\"background\\\"name=\\\"MessageBox\\\" class=\\\"content\\\">\\n    <form id=\\\"Formular\\\" #form=\\\"ngForm\\\" name=\\\"MessageForm\\\" (ngSubmit)=\\\"send(form)\\\">\\n      <ion-item color=\\\"items\\\">\\n        <ion-input color=\\\"text\\\" required name=\\\"MessageText\\\" [(ngModel)]=\\\"newMessage.message\\\" type=\\\"text\\\"></ion-input>\\n      </ion-item>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\"><ion-label><ion-icon name=\\\"send\\\"></ion-icon>Nachricht senden</ion-label></ion-button>\\n      </div>\\n    </form>\\n  </ion-card>\\n</ion-content>\\n  \\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MessagesPage } from './messages.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MessagesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MessagesPage]\n})\nexport class MessagesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi9sZWFkZXItcGFnZS9tZXNzYWdlcy9tZXNzYWdlcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { MessagesService } from 'src/app/messages.service';\nimport { Projektleiter } from 'src/assets/models/Projektleiter';\nimport { Projekt } from 'src/assets/models/Projekt.model';\nimport { AlertService } from 'src/app/alert.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.page.html',\n  styleUrls: ['./messages.page.scss'],\n})\nexport class MessagesPage implements OnInit {\n  leaderUrl: string;\n\n  loadedLeader: Projektleiter = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    project_id: 0,\n  };\n\n  leadedProject: Projekt = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: []\n  };\n\n  newMessage: any = {\n    message: ''\n  };\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private alert: AlertService,\n              private projectsService: ProjectsService,\n              private messagesService: MessagesService) {}\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('LeaderName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.leaderUrl = paramMap.get('LeaderName');\n    });\n    this.getProject();\n    this.messagesService.update.subscribe(() => this.getProject());\n  }\n\n  getProject() {\n    this.projectsService.getSelfLeadedProject('leaders').subscribe(data => {\n      this.leadedProject = data.data;\n    });\n  }\n\n  send(message) {\n    if (message.valid === true) {\n      this.messagesService.createMessage('leaders', this.newMessage).subscribe(data => {\n        this.messagesService.update.emit();\n        this.leadedProject.messages.push(data.data);\n      }, error => {\n        this.alert.error('Versandt der Nachricht fehlgeschlagen!', error.error);\n      });\n      message.reset();\n    }\n  }\n\n  delete(Message) {\n    this.leadedProject.messages = this.leadedProject.messages.filter(message => {\n      return message.id !== Message.id;\n    });\n    this.messagesService.deleteMessage('leaders', Message.id);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
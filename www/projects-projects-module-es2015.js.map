{"version":3,"sources":["./src/app/projects/projects.page.html","./src/app/projects/projects.module.ts","./src/app/projects/projects.page.scss","./src/app/projects/projects.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,+HAAgE,gBAAgB,sUAAsU,gBAAgB,iIAAiI,QAAQ,8WAA8W,gBAAgB,6BAA6B,yBAAyB,2sBAA2sB,iBAAiB,yFAAyF,iBAAiB,8QAA8Q,E;;;;;;;;;;;;;;;;;;;;;;ACA7hE;AACM;AACF;AACU;AAEV;AAEE;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;IAWW,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACzB/B;AAAe,6GAA8C,2IAA2I,E;;;;;;;;;;;;;;;;;;;;;ACAtJ;AACI;AAEJ;AAEL;AACS;IAOzC,YAAY,SAAZ,YAAY;IAmBvB,YAAoB,eAAgC,EAChC,MAAqB,EACrB,eAAgC;QAFhC,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAe;QACrB,oBAAe,GAAf,eAAe,CAAiB;QAlBpD,aAAQ,GAAa;YACnB,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI;YACb,YAAY,EAAE,IAAI;YAClB,aAAa,EAAE,IAAI;YACnB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,GAAG,EAAE,IAAI;SACV,CAAC;QAGF,iBAAY,GAAG,UAAU,CAAC;QAE1B,SAAI,GAAG,EAAE,CAAC;IAI8C,CAAC;IAEzD,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC;QAEzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,kEAAU,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QAE9D,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,GAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAzDQ,iEAAe;YAEf,6DAAa;YAGb,iEAAe;;AAOX,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,0NAAmC;;KAEpC,CAAC;GACW,YAAY,CA6CxB;AA7CwB","file":"projects-projects-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>{{ projectsNoun }}</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" [routerLink]=\\\"['../../Help']\\\"><ion-icon name=\\\"help-circle\\\"></ion-icon></ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-title>\\n        {{ projectsNoun }}\\n      </ion-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"currentDate <= schedule.registration\\\">\\n      <ion-card color=\\\"background\\\">\\n        <ion-card-header>\\n          <ion-title color=\\\"danger\\\">\\n            Zu fr√ºh\\n          </ion-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-text color=\\\"text\\\">Die {{ projectsNoun }} werden hier erst nach dem {{ schedule.registration }} ausgestellt.</ion-text>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"currentDate > schedule.registration\\\">\\n      <ion-list *ngIf=\\\"projects\\\">\\n        <div *ngFor=\\\"let project of projects\\\">\\n          <ion-item color=\\\"background\\\" *ngIf=\\\"!!+project.authorized\\\" [routerLink]=\\\"['./', project.id]\\\">\\n            <ion-avatar [hidden]=\\\"project.image == '' || project.image == null\\\" slot=\\\"start\\\">\\n              <ion-img *ngIf=\\\"project.image != '' && project.image != null\\\" [src]='\\\"http://192.248.186.231:8000/storage/images/\\\" + project.image'></ion-img>\\n            </ion-avatar>\\n            <ion-label color=\\\"text\\\">\\n              <h2>{{ project.title }}</h2>\\n              <ion-text color=\\\"text\\\" *ngIf=\\\"!!+project.authorized === true\\\">{{ project.descr }}</ion-text>\\n              <ion-text *ngIf=\\\"!!+project.authorized === false\\\" color=\\\"danger\\\"> (Nicht zugelassen!)</ion-text>\\n            </ion-label>\\n          </ion-item>\\n        </div>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectsPage } from './projects.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProjectsPage]\n})\nexport class ProjectsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3RzL3Byb2plY3RzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { ProjectsService } from '../projects.service';\nimport { Projekt } from 'src/assets/models/Projekt.model';\nimport { ConfigService } from '../config.service';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from '../schedule.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.page.html',\n  styleUrls: ['./projects.page.scss'],\n})\nexport class ProjectsPage implements OnInit {\n  projects: Projekt[];\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n  currentDate: any;\n\n  projectsNoun = 'Projekte';\n\n  text = '';\n\n  constructor(private projectsService: ProjectsService,\n              private config: ConfigService,\n              private scheduleService: ScheduleService) { }\n\n  ngOnInit() {\n    this.projectsNoun = this.config.app_config.projects_noun;\n\n    this.text = this.config.get_content('projects');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getProjects();\n\n    this.projectsService.update.subscribe(() => {this.getProjects(); });\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.projects = data.data;\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
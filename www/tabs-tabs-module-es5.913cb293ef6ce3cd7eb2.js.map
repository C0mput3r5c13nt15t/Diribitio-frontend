{"version":3,"sources":["webpack:///src/app/services/authentication.service.ts","webpack:///src/app/tabs/tabs.page.html","webpack:///src/app/tabs/tabs.page.ts","webpack:///src/app/authentication.guard.ts","webpack:///src/app/tabs/tabs.module.ts","webpack:///src/app/tabs/tabs.router.static.module.ts"],"names":["AuthenticationService","http","router","config","alert","cookieService","loggedIn","JWT","backendUrl","this","backend_config","url","eventName","app_config","event_name","jwt","set","newState","headers","Authorization","post","forgotPasswordData","subscribe","data","message","navigate","error","resetPasswordData","AuthenticationGuard","TabsPage","TabsPageModule","TabsPageRoutingModule","screensizeService","auth","alertService","alertsAndErrors","maxLifetime","ui","alert_errors_max_lifetime","projectsNoun","projects_noun","isDesktopView","isDesktop","window","location","reload","update","getAlertsAndErrors","source","interval","regularInterval","deleteOldAlertsAndErrors","now","Date","getTime","forEach","time","fadeOutAlertOrError","id","alertID","element","document","getElementById","toString","classList","add","onanimationend","deleteAlertOrError","delete_alert_error","isLoggedIn","redirectUrl","next","state","checkLogin","routes","path","component","children","loadChildren","then","m","HelpPageModule","SettingsPageModule","ImprintDataProtectionPageModule","HomePageModule","LogInPageModule","ForgotPasswordPageModule","ResetPasswordPageModule","AdminGenerationPageModule","LeaderGenerationPageModule","StudentGenerationPageModule","canActivate","LeaderPagePageModule","LeaderProjectGenerationPageModule","LeaderProjectAdministrationPageModule","LeaderProjectEditPageModule","LeaderMessagesPageModule","StudentPagePageModule","ProjectsPageModule","ProjectDetailPageModule","RegistrationPageModule","ExchangeRequestPageModule","ExchangeConfirmPageModule","ProjectPageModule","StudentProjectGenerationPageModule","PromoteStudentsPageModule","StudentProjectAdministrationPageModule","StudentProjectEditPageModule","StudentMessagesPageModule","AdminPagePageModule","AdminProjectsPageModule","AdminExchangesPageModule","AdminProjectDetailPageModule","AdminExchangeDetailPageModule","AdminSchedulePageModule","AdminStudentsLeadersPageModule","AdminLogsPageModule","VerifyEmailPageModule","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { ConfigService } from './config.service';\nimport { Response } from 'src/models/Response.model';\nimport { AlertService } from './alert.service';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n/**\n * This service handles all everything having to do with the authentification especially the management of the jwt\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  /**\n   * Contains the logged in state\n   */\n  private loggedIn = false;\n  /**\n   * Contains the active jwt\n   */\n  private JWT = '';\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private config: ConfigService,\n              private alert: AlertService,\n              private cookieService: CookieService) {}\n\n  /**\n   * The url to the backend\n   */\n  backendUrl = this.config.backend_config.url;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  /**\n   * Gets the current jwt\n   * @returns jwt\n   */\n  get jwt() {\n    return this.JWT;\n  }\n\n  /**\n   * Sets the current jwt and saves it to locale storage\n   * @param jwt Contains the jwt to be set\n   */\n  set_jwt(jwt: string) {\n    this.JWT = jwt;\n    this.cookieService.set('Diribitio-Session', this.jwt, 2, '/', null, false, 'Strict');\n  }\n\n  /**\n   * Asynchronously sets the current jwtand saves it to locale storage\n   * @param jwt Contains the jwt to be set\n   */\n  async async_set_jwt(jwt: string) {\n    this.JWT = jwt;\n    this.cookieService.set('Diribitio-Session', this.jwt, 2, '/', null, false, 'Strict');\n  }\n\n  /**\n   * Returns whether the user is logged in or not\n   * @returns boolean\n   */\n  get isLoggedIn() {\n    return this.loggedIn;\n  }\n\n  /**\n   * Sets loggedIn to the new state and if the new state is false removes the jwt from storage\n   * @param newState Contains the new logged in state\n   */\n  setLoggedIn(newState: boolean) {\n    this.loggedIn = newState;\n\n    if (newState === false) {\n      this.cookieService.delete('Diribitio-Session');\n    }\n  }\n\n  /**\n   * Checks if the given jwt is still valid and if it is refreshes it\n   * @param jwt Contains the jwt to be checked\n   * @returns RequestObservable\n   */\n  check_jwt(jwt) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + jwt,\n    });\n\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'auth/refresh', null, options);\n  }\n\n  /**\n   * Sends a password reset email to the user with the given email\n   * @param forgotPasswordData Contains the email of the user\n   */\n  forgotPassword(forgotPasswordData) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.JWT,\n    });\n\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'auth/password/email', forgotPasswordData, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Die E-Mail konnte nicht versandt werden.', error.error);\n    });\n  }\n\n  /**\n   * Resets the user password\n   * @param resetPasswordData Contains the email and the new password of the user\n   * @returns RequestObservable\n   */\n  resetPassword(resetPasswordData) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'auth/password/reset', resetPasswordData, options);\n  }\n\n}\n","<head>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.0.0/animate.min.css\"\n  />\n</head>\n<ion-tabs *ngIf=\"!isDesktop\">\n\n  <ion-tab-bar color=\"menu\" slot=\"bottom\">\n\n    <ion-tab-button routerLink=\"/{{ eventName }}/Einstellungen\" routerDirection=\"root\">\n      <ion-icon name=\"settings\"></ion-icon>\n      <ion-label>Einstellungen</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button routerLink=\"/{{ eventName }}/Impressum und Datenschutzerklärung\" routerDirection=\"root\">\n      <ion-icon name=\"document\"></ion-icon>\n      <ion-label>Impressum</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button routerLink=\"/{{ eventName }}/Home\" routerDirection=\"root\">\n      <ion-icon name=\"Home\"></ion-icon>\n      <ion-label>Home</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button *ngIf=\"!auth.isLoggedIn\" routerLink=\"/{{ eventName }}/Anmeldung\" routerDirection=\"root\">\n      <ion-icon name=\"log-in\"></ion-icon>\n      <ion-label>Anmeldung</ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button *ngIf=\"auth.isLoggedIn\" routerLink=\"/{{ eventName }}/Anmeldung\" routerDirection=\"root\">\n      <ion-icon name=\"person\"></ion-icon>\n      <ion-label>Dashboard</ion-label>\n    </ion-tab-button>\n\n  </ion-tab-bar>\n\n</ion-tabs>\n\n<div *ngIf=\"isDesktop\" class=\"desktop\">\n  <ion-header id=\"navbar\">\n    <ion-toolbar color=\"menu\">\n      <ion-row class=\"ion-align-items-center\">\n        <ion-col size=\"2\">\n          <img class=\"logo ion-text-left\" routerLink=\"/{{ eventName }}/Home\" src=\"../../assets/logo/Logo_light.svg\">\n        </ion-col>\n        <ion-col>\n          <div class=\"navbar\" class=\"ion-text-right\">\n            <ion-button color=\"buttons\" fill=\"clear\" routerLink=\"/{{ eventName }}/Home\" routerDirection=\"root\" routerLinkActive=\"active-link\"\n              class=\"link\">\n              Home\n            </ion-button>\n            <ion-button color=\"buttons\" *ngIf=\"!auth.isLoggedIn\" fill=\"clear\" routerLink=\"/{{ eventName }}/Anmeldung\" routerDirection=\"root\" routerLinkActive=\"active-link\"\n              class=\"link\">\n              Anmeldung\n            </ion-button>\n            <ion-button color=\"buttons\" *ngIf=\"auth.isLoggedIn\" fill=\"clear\" routerLink=\"/{{ eventName }}/Anmeldung\" routerDirection=\"root\" routerLinkActive=\"active-link\"\n              class=\"link\">\n              Dashboard\n            </ion-button>\n            <ion-button color=\"buttons\" fill=\"clear\" routerLink=\"/{{ eventName }}/Help\" routerDirection=\"root\" routerLinkActive=\"active-link\"\n              class=\"link\">\n              Hilfe\n            </ion-button>\n            <ion-button color=\"buttons\" fill=\"clear\" routerLink=\"/{{ eventName }}/Einstellungen\" routerDirection=\"root\" routerLinkActive=\"active-link\"\n              class=\"link\">\n              Einstellungen\n            </ion-button>\n          </div>\n        </ion-col>\n      </ion-row>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-router-outlet class=\"desktop-wrapper\"></ion-router-outlet>\n\n  <ion-item [id]=\"message.id\" class=\"animate__animated animate__fadeInDown\" *ngFor=\"let message of alertsAndErrors\" (click)=\"fadeOutAlertOrError(message.id)\" button=\"true\" [color]=\"message.type == 'alert' ? 'success' : 'danger'\">\n    <ion-label class=\"ion-text-center\" color=\"light\">\n      {{ message.desrc }}\n    </ion-label>\n  </ion-item>\n\n  <ion-footer color=\"menu\" class=\"footer\">\n    <span>© Paul Maier | <a routerLink=\"/{{ eventName }}/Impressum und Datenschutzerklärung\">Impressum und Datenschutz</a><br></span>\n  </ion-footer>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ScreensizeService } from 'src/app/services/screensize.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { interval, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n  isDesktop: boolean;\n\n  /**\n   * Contains all active alert and error messages\n   */\n  alertsAndErrors = [];\n  /**\n   * Contains the maximum lifetime for alert and error messages\n   */\n  maxLifetime = this.config.ui.alert_errors_max_lifetime * 1000;\n  /**\n   * Conatins the noun to be used instead of projects\n   */\n  projectsNoun = this.config.app_config.projects_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n  /**\n   * Conatins the subscription for a regular interval\n   */\n  private regularInterval: Subscription;\n\n  constructor(private screensizeService: ScreensizeService,\n              public auth: AuthenticationService,\n              private alertService: AlertService,\n              private config: ConfigService) {\n    this.screensizeService.isDesktopView().subscribe(isDesktop => {\n      if (this.isDesktop && !isDesktop) {\n        window.location.reload();\n      }\n      this.isDesktop = isDesktop;\n    });\n    this.alertService.update.subscribe(() => this.getAlertsAndErrors());\n    const source = interval(this.maxLifetime / 2);\n    this.regularInterval = source.subscribe(() => this.deleteOldAlertsAndErrors(this.maxLifetime));\n  }\n\n  getAlertsAndErrors() {\n    this.alertsAndErrors = this.alertService.alertsAndErrors;\n  }\n\n  /**\n   * Deletes all alert and error messages that are older than the maximum lifetime\n   * @param maxLifetime Contains the maximum lifetime\n   */\n  deleteOldAlertsAndErrors(maxLifetime: number) {\n    const now = new Date().getTime();\n    this.alertsAndErrors.forEach((alert) => {\n      if (now - alert.time > maxLifetime) {\n        this.fadeOutAlertOrError(alert.id);\n      }\n    });\n  }\n\n  fadeOutAlertOrError(alertID) {\n    const element = document.getElementById(alertID.toString());\n    element.classList.add('animate__fadeOutLeft');\n    element.onanimationend = () => {\n      this.deleteAlertOrError(alertID);\n    };\n  }\n\n  deleteAlertOrError(alertID) {\n    this.alertService.delete_alert_error(alertID);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from './services/authentication.service';\nimport { ConfigService } from './services/config.service';\n\n/**\n * This guard handles which routes are available and which aren't\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private auth: AuthenticationService,\n              private router: Router,\n              private config: ConfigService) {}\n\n  /**\n   * Contains the logged in state\n   */\n  isLoggedIn = false;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n  /**\n   * Contains the url to which unauthenticated requests are redirected\n   */\n  redirectUrl = this.eventName + '/Anmeldung';\n\n  /**\n   * Checks if the user is allowed to access the page\n   */\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    const url: string = state.url;\n\n    return this.checkLogin();\n  }\n\n  /**\n   * Checks if the user is logged in\n   */\n  checkLogin(): boolean {\n    if (this.auth.isLoggedIn) { return true; }\n\n    this.router.navigate([this.eventName + '/Anmeldung']);\n    return false;\n  }\n}\n\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs.router.static.module';\n\nimport { TabsPage } from './tabs.page';\n\n/**\n * This Module cointanis the navigation and footer for mobile and desktop view and displays all the error and alert messages.\n */\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\nimport { AuthenticationGuard } from '../authentication.guard';\n\n/**\n * Contains all Routes for the application\n */\nconst routes: Routes = [\n  {\n    path: 'Projekttage',\n    component: TabsPage,\n    children: [\n      {\n        path: 'Help',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../help/help.module').then(m => m.HelpPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Einstellungen',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../settings/settings.module').then(m => m.SettingsPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Impressum und Datenschutzerklärung',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../imprint-data-protection/imprint-data-protection.module').then(m => m.ImprintDataProtectionPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Home',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../home/home.module').then(m => m.HomePageModule)\n          }\n        ]\n      },\n      {\n        path: 'Anmeldung',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/log-in.module').then(m => m.LogInPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Anmeldung/Passwort vergessen',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/forgot-password/forgot-password.module').then(m => m.ForgotPasswordPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Anmeldung/Passwort zurücksetzen/:ResetToken',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/reset-password/reset-password.module').then(m => m.ResetPasswordPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Anmeldung/Admin Registration',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-generation/admin-generation.module').then(m => m.AdminGenerationPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Anmeldung/Projektleiter Registration',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/leader-generation/leader-generation.module').then(m => m.LeaderGenerationPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Anmeldung/Schüler Registration',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-generation/student-generation.module').then(m => m.StudentGenerationPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Projektleiter/:LeaderName',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/leader-page/leader-page.module').then(m => m.LeaderPagePageModule)\n          }\n        ]\n      },\n      {\n        path: 'Projektleiter/:LeaderName/Projekt erstellen',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/leader-page/leader-project-generation/leader-project-generation.module').then(m => m.LeaderProjectGenerationPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Projektleiter/:LeaderName/Projekt verwalten',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/leader-page/leader-project-administration/leader-project-administration.module').then(m => m.LeaderProjectAdministrationPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Projektleiter/:LeaderName/Projekt verwalten/Projekt bearbeiten',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/leader-page/leader-project-administration/leader-project-edit/leader-project-edit.module').then(m => m.LeaderProjectEditPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Projektleiter/:LeaderName/Nachricht senden',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/leader-page/leader-messages/leader-messages.module').then(m => m.LeaderMessagesPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/student-page.module').then(m => m.StudentPagePageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Projekte',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/projects/projects.module').then(m => m.ProjectsPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Projekte/:ProjectID',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/projects/project-detail/project-detail.module').then(m => m.ProjectDetailPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Anmeldung',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/registration/registration.module').then(m => m.RegistrationPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Tauschanfrage senden',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/exchange-request/exchange-request.module').then(m => m.ExchangeRequestPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Tauschanfrage bestätigen',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/exchange-confirm/exchange-confirm.module').then(m => m.ExchangeConfirmPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Projekt',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/project/project.module').then(m => m.ProjectPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Projekt erstellen',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/student-project-generation/student-project-generation.module').then(m => m.StudentProjectGenerationPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Assistenten verwalten',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/promote-students/promote-students.module').then(m => m.PromoteStudentsPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Projekt verwalten',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/student-project-administration/student-project-administration.module').then(m => m.StudentProjectAdministrationPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Projekt verwalten/Projekt bearbeiten',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/student-project-administration/student-project-edit/student-project-edit.module').then(m => m.StudentProjectEditPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Schüler/:ParticipantName/Nachricht senden',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/student-page/student-messages/student-messages.module').then(m => m.StudentMessagesPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Admin/:AdminName',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-page/admin-page.module').then(m => m.AdminPagePageModule)\n          }\n        ]\n      },\n      {\n        path: 'Admin/:AdminName/Projekte',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-page/admin-projects/admin-projects.module').then(m => m.AdminProjectsPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Admin/:AdminName/Tauschanfragen',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-page/admin-exchanges/admin-exchanges.module').then(m => m.AdminExchangesPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Admin/:AdminName/Projekte/:ProjectID',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-page/admin-projects/admin-project-detail/admin-project-detail.module').then(m => m.AdminProjectDetailPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Admin/:AdminName/Tauschanfragen/:ExchangeID',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-page/admin-exchanges/admin-exchange-detail/admin-exchange-detail.module').then(m => m.AdminExchangeDetailPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Admin/:AdminName/Zeitplan verwalten',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-page/admin-schedule/admin-schedule.module').then(m => m.AdminSchedulePageModule)\n          }\n        ]\n      },\n      {\n        path: 'Admin/:AdminName/Schüler und Projektleiter verwalten',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-page/admin-students-leaders/admin-students-leaders.module').then(m => m.AdminStudentsLeadersPageModule)\n          }\n        ]\n      },\n      {\n        path: 'Admin/:AdminName/App verwalten',\n        canActivate: [AuthenticationGuard],\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/admin-page/admin-logs/admin-logs.module').then(m => m.AdminLogsPageModule)\n          }\n        ]\n      },\n      {\n        path: 'E-Mail verifizieren/:Status',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../log-in/verify-email/verify-email.module').then(m => m.VerifyEmailPageModule)\n          }\n        ]\n      },\n      {\n        path: '',\n        redirectTo: '/Projekttage/Home',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/Projekttage/Home',\n    pathMatch: 'full'\n  }\n];\n\n/**\n * This module contains the default routes for the TabsPageModule\n * Note that these are NOT actually used for routing and just represent the defaul routes\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule { }\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/student-page/exchange-request/exchange-request.page.html","webpack:///src/app/log-in/student-page/exchange-request/exchange-request.module.ts","webpack:///src/app/log-in/student-page/exchange-request/exchange-request.page.ts"],"names":["routes","path","component","ExchangeRequestPage","activatedRoute","router","studentsService","exchangesService","alertCtrl","alert","config","subscriptions","loadedStudent","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","exchangePartner","eventName","this","app_config","event_name","text","get_content","studentAlreadyExchangeError","get_error","paramMap","subscribe","has","studentUrl","get","navigate","getStudent","push","update","forEach","sub","unsubscribe","getSelfStudent","data","getStudentID","createExchange","response","message","emit","error","create","header","buttons","then","alertEl","present","handler","deleteSelfExchange","delete","ExchangeRequestPageModule","forChild"],"mappings":"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","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/SchÃ¼ler/{{ studentUrl }}\"></ion-back-button>\n    </ion-button>\n    <ion-title>Tausch anfragen</ion-title>\n    <ion-button color=\"buttons\" [disabled]=\"loadedStudent.exchange_id == 0\" slot=\"end\" (click)=\"delete()\"  color=\"danger\"><ion-icon name=\"trash\"></ion-icon></ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\" *ngIf=\"loadedStudent.exchange_id == 0\" class=\"content\">\n    <ion-card-header color=\"background\">\n      <ion-card-title>Tauschanfragen senden</ion-card-title>\n    </ion-card-header>\n    <ion-card-content *ngIf=\"text\">\n      <ion-label color=\"text\">\n        {{ text }}\n      </ion-label>\n    </ion-card-content>\n    <ion-card-content>\n      <form #form=\"ngForm\" name=\"ExchangeForm\" (ngSubmit)=\"submit()\">\n        <ion-list>\n          <ion-item-divider color=\"background\">\n            <ion-card-title>Du</ion-card-title>\n          </ion-item-divider>\n          <ion-item color=\"items\" lines=\"none\">\n            <ion-input color=\"text\" readonly [(ngModel)]=\"loadedStudent.first_name\" name=\"ExchangeFirstFirstName\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\" lines=\"none\">\n            <ion-input color=\"text\" readonly [(ngModel)]=\"loadedStudent.last_name\" name=\"ExchangeFirstLastName\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\" lines=\"none\">\n            <ion-input color=\"text\" readonly name=\"ExchangeFirstGradeAndClass\">{{ loadedStudent.grade }}{{ loadedStudent.letter }}</ion-input>\n          </ion-item>\n          <ion-item-divider color=\"background\">\n            <ion-title *ngIf=\"exchangePartner.id === 0\">Dein Freund </ion-title>\n            <ion-title *ngIf=\"exchangePartner.id != 0\">\n                {{ exchangePartner.first_name }} {{ exchangePartner.last_name }} {{ exchangePartner.grade }}{{ exchangePartner.letter }}\n            </ion-title>\n          </ion-item-divider>\n          <ion-item color=\"items\">\n            <ion-input color=\"text\" type=\"text\" required placeholder=\"Vorname\" [(ngModel)]=\"exchangePartner.first_name\" name=\"ExchangeSecondFirstName\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-input color=\"text\" type=\"text\" required placeholder=\"Nachname\" [(ngModel)]=\"exchangePartner.last_name\" name=\"ExchangeSecondLastName\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-label color=\"text\">Klassenstufe</ion-label>\n            <ion-select [selectedText]=\"exchangePartner.grade\" required name=\"ParticipantGrade\" cancelText=\"Abbrechen\" [(ngModel)]=\"exchangePartner.grade\" cancelText=\"Abbrechen\" doneText=\"Ok\">\n              <ion-select-option value=\"5\">5</ion-select-option>\n              <ion-select-option value=\"6\">6</ion-select-option>\n              <ion-select-option value=\"7\">7</ion-select-option>\n              <ion-select-option value=\"8\">8</ion-select-option>\n              <ion-select-option value=\"9\">9</ion-select-option>\n              <ion-select-option value=\"10\">10</ion-select-option>\n              <ion-select-option value=\"11\">11</ion-select-option>\n            </ion-select>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-radio-group required name=\"ParticipantClass\" [(ngModel)]=\"exchangePartner.letter\">\n              <ion-item color=\"items\" lines=\"none\">\n                <ion-label color=\"text\">A </ion-label>\n                <ion-radio  color=\"text\" slot=\"start\" value=\"a\"></ion-radio>\n              </ion-item>\n              <ion-item color=\"items\" lines=\"none\">\n                <ion-label color=\"text\">B </ion-label>\n                <ion-radio  color=\"text\" slot=\"start\" value=\"b\"></ion-radio>\n              </ion-item>\n              <ion-item color=\"items\" lines=\"none\">\n                <ion-label color=\"text\">C </ion-label>\n                <ion-radio  color=\"text\" slot=\"start\" value=\"c\"></ion-radio>\n              </ion-item>\n              <ion-item color=\"items\" lines=\"none\">\n                <ion-label color=\"text\">D </ion-label>\n                <ion-radio  color=\"text\" slot=\"start\" value=\"d\"></ion-radio>\n              </ion-item>\n            </ion-radio-group>\n          </ion-item>\n        </ion-list>\n        <div class=\"ion-padding\">\n          <ion-button color=\"buttons\" [disabled]=\"form.invalid\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">Tauschanfrage senden</ion-button>\n        </div>\n      </form>\n    </ion-card-content>\n  </ion-card>\n  <ion-card color=\"background\" *ngIf=\"loadedStudent.exchange_id != 0\" class=\"content\">\n    <ion-card-content>\n      <ion-text color=\"danger\">{{ studentAlreadyExchangeError }}</ion-text>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExchangeRequestPage } from './exchange-request.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExchangeRequestPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ExchangeRequestPage]\n})\nexport class ExchangeRequestPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { Student } from 'src/models/Student.model';\nimport { ExchangesService } from 'src/app/services/exchanges.service';\nimport { AlertController } from '@ionic/angular';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-exchange-request',\n  templateUrl: './exchange-request.page.html',\n  styleUrls: ['./exchange-request.page.scss'],\n})\nexport class ExchangeRequestPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  studentUrl: string;\n\n  loadedStudent: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n\n  exchangePartner: any = {\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n  };\n\n  text: string;\n\n  studentAlreadyExchangeError: string;\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private studentsService: StudentsService,\n              private exchangesService: ExchangesService,\n              private alertCtrl: AlertController,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('student-exchange-request');\n\n    this.studentAlreadyExchangeError = this.config.get_error('student-already_exchange');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getStudent();\n\n    this.subscriptions.push(\n      this.studentsService.update.subscribe(() => this.getStudent()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getStudent() {\n    this.studentsService.getSelfStudent().subscribe(data => {\n      this.loadedStudent = data.data;\n    });\n  }\n\n  submit() {\n    this.studentsService.getStudentID(this.exchangePartner).subscribe(data => {\n      // tslint:disable-next-line:disable-next-line: triple-equals\n      if (data.id != 0 && this.loadedStudent.exchange_id == 0) {\n        this.exchangesService.createExchange(data.id).subscribe(response => {\n          this.alert.alert(response.message);\n          this.router.navigate([this.eventName + '/SchÃ¼ler/' + this.studentUrl]);\n          this.exchangesService.update.emit();\n        }, error => {\n          this.alert.error('Erstellung des Tausches fehlgeschlagen!', error.error);\n        });\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Du must zuerst einen validen Tauschpartner auswÃ¤hlen!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    });\n  }\n\n  delete() {\n    this.alertCtrl.create({\n      header: 'Bist du sicher?',\n      message: 'Willst du wirklich deine Tauschanfrage lÃ¶schen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'LÃ¶schen',\n        handler: () => {\n          this.exchangesService.deleteSelfExchange().subscribe(data => {\n            this.alert.alert(data.message);\n            this.router.navigate([this.eventName + '/SchÃ¼ler/' + this.studentUrl]);\n            this.exchangesService.update.emit();\n          }, error => {\n            this.alert.error('LÃ¶schung der Tauschanfrage fehlgeschlagen!', error.error);\n          });\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n"]}
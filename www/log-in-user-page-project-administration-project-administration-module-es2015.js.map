{"version":3,"sources":["./src/app/log-in/user-page/project-administration/project-administration.page.html","./src/app/log-in/user-page/project-administration/project-administration.module.ts","./src/app/log-in/user-page/project-administration/project-administration.page.scss","./src/app/log-in/user-page/project-administration/project-administration.page.ts"],"names":[],"mappings":"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","file":"log-in-user-page-project-administration-project-administration-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar color=\\\"menu\\\">\\n      <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n        <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Schüler/{{ participantUrl }}\\\"></ion-back-button>\\n      </ion-button>\\n      <ion-title>{{ projectNoun }}</ion-title>\\n      <ion-button color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">\\n        <ion-icon name=\\\"create\\\"></ion-icon>\\n      </ion-button>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content color=\\\"background\\\">\\n    <ion-card color=\\\"background\\\" *ngIf=\\\"leadedProject.leader_id == null && leadedProject.title == null && leadedProject.authorized == null\\\" class=\\\"content\\\">\\n      <ion-card-content>\\n        <ion-text color=\\\"danger\\\">{{ studentLoadingProject }}</ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-card color=\\\"background\\\" *ngIf=\\\"loadedUser.role === 2\\\" class=\\\"content\\\">\\n      <ion-img *ngIf=\\\"leadedProject.image != '' && leadedProject.image != null\\\" src='{{ imageUrl }}{{ leadedProject.image }}'></ion-img>\\n      <ion-card-header>\\n        <ion-title>\\n          <h1>{{ leadedProject.title }}</h1>\\n        </ion-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-item-group>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-text color=\\\"text\\\">{{ leadedProject.descr }}</ion-text>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Leiter</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">{{ leadedProject.leader_name }}</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Kosten</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">{{ leadedProject.cost }}€</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Zeitraum</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">1.Tag:  {{ leadedProject.first_day_begin }} bis {{ leadedProject.first_day_end }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">2.Tag:  {{ leadedProject.second_day_begin }} bis {{ leadedProject.second_day_end }}</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">{{ leadedProject.min_grade }}. bis {{ leadedProject.max_grade }}.Klasse</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Teinehmeranzahl</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">von {{ leadedProject.min_participants }} bis {{ leadedProject.max_participants }}</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Nachrichten</ion-label>\\n          </ion-item-divider>\\n          <div *ngIf=\\\"leadedProject.messages.length\\\">\\n            <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let message of leadedProject.messages\\\">\\n              <ion-card color=\\\"background\\\">\\n                <ion-card-content>\\n                  <ion-text color=\\\"text\\\">{{ message.message }}</ion-text>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item>\\n          </div>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Teilnehmer</ion-label>\\n          </ion-item-divider>\\n          <div *ngIf=\\\"leadedProject.leader_type === 'App\\\\\\\\Student' && leadedProject.leader_id == loadedUser.id\\\">\\n            <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n              <ion-card color=\\\"background\\\">\\n                <ion-card-content>\\n                  <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ loadedUser.first_name }} {{ loadedUser.last_name }} {{ loadedUser.grade }}{{ loadedUser.letter }} (eigener Account)</ion-text>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"leadedProject.assistant_student_leaders.length\\\">\\n            <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let assistant of leadedProject.assistant_student_leaders\\\">\\n              <ion-card color=\\\"background\\\">\\n                <ion-card-content>\\n                  <ion-text color=\\\"text\\\"><ion-icon name=\\\"star-half\\\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"leadedProject.participants.length\\\">\\n            <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let participant of leadedProject.participants\\\">\\n              <ion-card color=\\\"background\\\">\\n                <ion-card-content>\\n                  <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item>\\n          </div>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-button color=\\\"buttons\\\" *ngIf=\\\"!!+leadedProject.editable == false || currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" [disabled]=\\\"leadedProject.leader_id != loadedUser.id || currentDate <= this.schedule.begin || currentDate > this.schedule.control\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\"  color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">{{ projectNoun }} bearbeiten</ion-button>\\n            <ion-button color=\\\"buttons\\\" *ngIf=\\\"leadedProject.leader_id == loadedUser.id && currentDate > this.schedule.control && currentDate <= this.schedule.registration && !!+leadedProject.editable == true\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\"  color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">{{ projectNoun }} nachbessern</ion-button>\\n            <ion-text *ngIf=\\\"leadedProject.leader_id != loadedUser.id\\\" color=\\\"text\\\">{{ studentNoProjectEditByAssistants }}</ion-text>\\n            <ion-text *ngIf=\\\"currentDate <= this.schedule.begin && !!+leadedProject.editable == false || currentDate > this.schedule.control && !!+leadedProject.editable == false\\\" color=\\\"text\\\">{{ studentWrongTime }}</ion-text>\\n          </div>\\n        </ion-item-group>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectAdministrationPage } from './project-administration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectAdministrationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProjectAdministrationPage]\n})\nexport class ProjectAdministrationPageModule {}\n","export default \"img {\\n  width: auto;\\n  margin: 10px auto auto auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL3VzZXItcGFnZS9wcm9qZWN0LWFkbWluaXN0cmF0aW9uL3Byb2plY3QtYWRtaW5pc3RyYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLDJCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2ctaW4vdXNlci1wYWdlL3Byb2plY3QtYWRtaW5pc3RyYXRpb24vcHJvamVjdC1hZG1pbmlzdHJhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBtYXJnaW46IDEwcHggYXV0byBhdXRvIGF1dG87XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ParticipantsService } from 'src/app/participants.service';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { Projekt } from 'src/assets/models/Projekt.model';\nimport { Schüler } from 'src/assets/models/Schüler.model';\nimport { ConfigService } from 'src/app/config.service';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { ScheduleService } from 'src/app/schedule.service';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-project-administration',\n  templateUrl: './project-administration.page.html',\n  styleUrls: ['./project-administration.page.scss'],\n})\nexport class ProjectAdministrationPage implements OnInit {\n  participantUrl: string;\n\n  loadedUser: Schüler = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 2\n  };\n\n  leadedProject: Projekt = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_type: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: [],\n    assistant_student_leaders: []\n  };\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n  currentDate: any;\n\n  studentNoProjectEditByAssistants: string;\n  studentLoadingProject: string;\n  studentWrongTime: string;\n\n  imageUrl = this.config.backend_config.imageUrl;\n  projectNoun = this.config.app_config.project_noun;\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private scheduleService: ScheduleService,\n              private participantsService: ParticipantsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.projectNoun = this.config.app_config.project_noun;\n\n    this.studentNoProjectEditByAssistants = this.config.get_error('student-no_project_edit_by_assistants');\n    this.studentLoadingProject = this.config.get_error('student-loading_project');\n    this.studentWrongTime = this.config.get_error('student-wrong_time');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.participantUrl = paramMap.get('ParticipantName');\n    });\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getProject();\n    this.getStudent();\n  }\n\n  getProject() {\n    this.projectsService.getSelfLeadedProject('students').subscribe(data => {\n      this.leadedProject = data.data;\n    });\n  }\n\n  getStudent() {\n    this.participantsService.getSelfParticipant().subscribe(data => {\n      this.loadedUser = data.data;\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
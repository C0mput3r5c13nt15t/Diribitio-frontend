{"version":3,"sources":["./src/app/log-in/student-page/student-page.page.html","./src/app/log-in/student-page/student-page.module.ts","./src/app/log-in/student-page/student-page.page.ts","./src/app/log-in/student-page/student-page.page.scss"],"names":[],"mappings":"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","file":"log-in-student-page-student-page-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Schüler</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" (click)=\\\"logout()\\\">\\n      <ion-icon name=\\\"log-out\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n        <ion-card-title><ion-label color=\\\"buttons\\\" text-wrap>Willkommen {{ loadedStudent.user_name }}</ion-label></ion-card-title>\\n        <ion-button (click)=\\\"refresh()\\\" slot=\\\"end\\\" color=\\\"buttons\\\"><ion-icon name=\\\"refresh\\\"></ion-icon></ion-button>\\n      </ion-item>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"loadedStudent.email_verified_at == null && !buttonPressed\\\">\\n      <ion-label color=\\\"text\\\">\\n        Sie heaben ihre E-Mail noch nicht verifiziert. Bitte holen sie dies nach bevor sie fortfahren.\\n      </ion-label>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"sendVerificationEmail()\\\">E-Mail senden</ion-button>\\n      </div>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"currentDate > schedule.registration\\\" routerLink='./{{ projectsNoun }}'>\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"apps\\\"></ion-icon>Alle {{ projectsNoun }}\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"currentDate > schedule.registration && currentDate <= schedule.sort_students\\\" [routerLink]=\\\"['./Anmeldung']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"log-in\\\"></ion-icon>Anmeldedaten eingeben\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedStudent.role === 1 && loadedStudent.project_id != 0 && currentDate > schedule.exchange && currentDate <= schedule.projects\\\" [routerLink]=\\\"['./Tauschanfrage senden']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"send\\\"></ion-icon>Tauschanfragen senden\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedStudent.role === 1 && loadedStudent.exchange_requests.length > 0 && loadedStudent.project_id != 0 && loadedStudent.exchange_id == 0 && currentDate > schedule.exchange && currentDate <= schedule.projects\\\" [routerLink]=\\\"['./Tauschanfrage bestätigen']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"swap-horizontal\\\"></ion-icon>Tauschanfrage bestätigen\\n          <ion-badge color=\\\"buttons\\\" slot=\\\"end\\\">{{ loadedStudent.exchange_requests.length }}</ion-badge>\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedStudent.role === 1 && loadedStudent.project_id != 0\\\" routerLink='./{{ projectNoun }}'>\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"people\\\"></ion-icon>{{ projectNoun }} einsehen\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control && loadedStudent.project_id == 0 && loadedStudent.role === 1 && studentsCanCreateProjects\\\" routerLink='./{{ projectNoun }} erstellen'>\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"create\\\"></ion-icon>{{ projectNoun }} erstellen\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedStudent.role === 2 && loadedStudent.project_id != 0 && studentsCanCreateProjects\\\" routerLink='./{{ projectNoun }} verwalten'>\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"construct\\\"></ion-icon>{{ projectNoun }} verwalten\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control && loadedStudent.role === 2 && loadedStudent.project_id != 0 && studentsCanCreateProjects\\\" [routerLink]=\\\"['./Assistenten verwalten']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"construct\\\"></ion-icon>Assistenten verwalten\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedStudent.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedStudent.role === 2 && loadedStudent.project_id != 0 && studentsCanCreateProjects\\\" [routerLink]=\\\"['./Nachricht senden']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"send\\\"></ion-icon>Nachricht senden\\n        </ion-item>\\n      </ion-list>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"logout()\\\">Abmelden</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentPagePage } from './student-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentPagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StudentPagePage]\n})\nexport class StudentPagePageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ExchangesService } from 'src/app/services/exchanges.service';\nimport { DatePipe } from '@angular/common';\nimport {formatDate} from '@angular/common';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { Student } from 'src/models/Student.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-student-page',\n  templateUrl: './student-page.page.html',\n  styleUrls: ['./student-page.page.scss'],\n  providers: [DatePipe]\n})\nexport class StudentPagePage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  loadedStudent: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  text: string;\n\n  buttonPressed = true;\n\n  projectNoun = this.config.app_config.project_noun;\n  projectsNoun = this.config.app_config.projects_noun;\n\n  studentsCanCreateProjects = this.config.app_config.students_can_create_projects;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private exchangesService: ExchangesService,\n              private studentsService: StudentsService,\n              private projectsService: ProjectsService,\n              private scheduleService: ScheduleService,\n              private config: ConfigService,\n              private alert: AlertService) {}\n\n  ngOnInit() {\n    this.text = this.config.get_content('user-page');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n    });\n\n    this.getSchedule();\n    this.getStudent();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.studentsService.update.subscribe(() => this.getStudent()),\n      this.projectsService.update.subscribe(() => this.getStudent())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getStudent() {\n    this.studentsService.getSelfStudent().subscribe(data => {\n      this.loadedStudent = data.data;\n      this.loadedStudent.exchange_requests = [];\n      if (this.currentDate > this.schedule.exchange && this.currentDate <= this.schedule.projects) {\n        this.exchangesService.getAllExchangesForParticipant().subscribe(requestData => {\n          this.loadedStudent.exchange_requests = requestData.data;\n        });\n      }\n      if (this.loadedStudent.email_verified_at == null) {\n        this.buttonPressed = false;\n      }\n    });\n  }\n\n  refresh() {\n    this.getStudent();\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  logout() {\n    this.studentsService.logOutStudent();\n  }\n\n  sendVerificationEmail() {\n    this.studentsService.sendAuthentificationEmailSubscribe().subscribe(data => {\n      this.alert.alert(data.message);\n      this.buttonPressed = true;\n    }, error => {\n      this.alert.error('Versandt der Verifizierungs E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdHVkZW50LXBhZ2UucGFnZS5zY3NzIn0= */\";"],"sourceRoot":"webpack:///"}
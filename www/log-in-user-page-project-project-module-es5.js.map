{"version":3,"sources":["webpack:///src/app/log-in/user-page/project/project.page.html","webpack:///src/app/log-in/user-page/project/project.module.ts","webpack:///src/app/log-in/user-page/project/project.page.scss","webpack:///src/app/log-in/user-page/project/project.page.ts"],"names":["routes","path","component","ProjectPageModule","imports","forChild","declarations","ProjectPage","activatedRoute","router","projectsService","config","loadedUser","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","chosenProject","authorized","editable","title","image","descr","leader_name","leader_type","leader_id","messages","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","participants","assistant_student_leaders","imageUrl","backend_config","projectNoun","app_config","project_noun","eventName","event_name","studentLoadingProject","get_error","studentProjectNotAllowed","paramMap","subscribe","has","navigate","getProject","getSelfProject","data","selector","template"],"mappings":"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","file":"log-in-user-page-project-project-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Schüler/{{ participantUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>{{ projectNoun }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"chosenProject.leader_id == null && chosenProject.title == null && chosenProject.authorized == null\\\"  class=\\\"content\\\">\\n    <ion-card-content>\\n      <ion-text color=\\\"danger\\\">{{ studentLoadingProject }}</ion-text>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"!!+chosenProject.authorized === true\\\" class=\\\"content\\\">\\n    <ion-img *ngIf=\\\"chosenProject.image != '' && chosenProject.image != null\\\" src='{{ imageUrl }}{{ chosenProject.image }}'></ion-img>\\n    <ion-card-header>\\n      <ion-title>\\n        <h1>{{ chosenProject.title }}</h1>\\n      </ion-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-item-group>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-text color=\\\"text\\\">{{ chosenProject.descr }}</ion-text>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Leiter</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ chosenProject.leader_name }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Kosten</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ chosenProject.cost }}€</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Zeitraum</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">1.Tag: {{ chosenProject.first_day_begin }} bis {{ chosenProject.first_day_end }}</ion-label>\\n        </ion-item>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">2.Tag: {{ chosenProject.second_day_begin }} bis {{ chosenProject.second_day_end }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">{{ chosenProject.min_grade }}. bis {{ chosenProject.max_grade }}.Klasse</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Teinehmeranzahl</ion-label>\\n        </ion-item-divider>\\n        <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n          <ion-label color=\\\"text\\\">von {{ chosenProject.min_participants }} bis {{ chosenProject.max_participants }}</ion-label>\\n        </ion-item>\\n        <ion-item-divider color=\\\"background\\\" *ngIf=\\\"chosenProject.messages.length\\\">\\n          <ion-label color=\\\"text\\\">Nachrichten</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"chosenProject.messages.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let message of chosenProject.messages\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\">{{ message.message }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <ion-item-divider color=\\\"background\\\">\\n          <ion-label color=\\\"text\\\">Teilnehmer</ion-label>\\n        </ion-item-divider>\\n        <div *ngIf=\\\"chosenProject.leader && chosenProject.leader_type === 'App\\\\\\\\Student'\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ chosenProject.leader.first_name }} {{ chosenProject.leader.last_name }} {{ chosenProject.leader.grade }}{{ chosenProject.leader.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <div *ngIf=\\\"chosenProject.assistant_student_leaders.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let assistant of chosenProject.assistant_student_leaders\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\"><ion-icon name=\\\"star-half\\\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n        <div *ngIf=\\\"chosenProject.participants.length\\\">\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let participant of chosenProject.participants\\\">\\n            <ion-card color=\\\"background\\\">\\n              <ion-card-content>\\n                <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n              </ion-card-content>\\n            </ion-card>\\n          </ion-item>\\n        </div>\\n      </ion-item-group>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"!!+chosenProject.authorized == false\\\"  class=\\\"content\\\">\\n    <ion-card-content>\\n      <ion-text color=\\\"danger\\\">{{ studentProjectNotAllowed }}</ion-text>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectPage } from './project.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProjectPage]\n})\nexport class ProjectPageModule {}\n","export default \"img {\\n  width: auto;\\n  margin: 10px auto auto auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL3VzZXItcGFnZS9wcm9qZWN0L3Byb2plY3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLDJCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2ctaW4vdXNlci1wYWdlL3Byb2plY3QvcHJvamVjdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBtYXJnaW46IDEwcHggYXV0byBhdXRvIGF1dG87XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { Schüler } from 'src/assets/models/Schüler.model';\nimport { Projekt } from 'src/assets/models/Projekt.model';\nimport { ConfigService } from 'src/app/config.service';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.page.html',\n  styleUrls: ['./project.page.scss'],\n})\nexport class ProjectPage implements OnInit {\n  participantUrl: string;\n\n  loadedUser: Schüler = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n\n  chosenProject: Projekt = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_type: '',\n    leader_id: 0,\n    messages: [],\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    participants: [],\n    assistant_student_leaders: []\n  };\n\n  studentLoadingProject: string;\n  studentProjectNotAllowed: string;\n\n  imageUrl = this.config.backend_config.imageUrl;\n  projectNoun = this.config.app_config.project_noun;\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.studentLoadingProject = this.config.get_error('student_loading_project');\n    this.studentProjectNotAllowed = this.config.get_error('student_project_not_allowed');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n    });\n\n    this.getProject();\n  }\n\n  getProject() {\n    this.projectsService.getSelfProject().subscribe(data => {\n      this.chosenProject = data.data;\n    });\n  }\n\n}\n"]}
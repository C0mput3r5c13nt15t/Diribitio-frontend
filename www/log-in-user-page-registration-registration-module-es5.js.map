{"version":3,"sources":["webpack:///src/app/log-in/user-page/registration/registration.page.html","webpack:///src/app/log-in/user-page/registration/registration.module.ts","webpack:///src/app/log-in/user-page/registration/registration.page.scss","webpack:///src/app/log-in/user-page/registration/registration.page.ts"],"names":["routes","path","component","RegistrationPageModule","imports","forChild","declarations","RegistrationPage","projectsService","participantsService","activatedRoute","router","alertCtrl","config","loadedProjects","possibleProjects","loadedUser","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","appendFriend","friendsList","definiteArticle","definite_article","indefiniteArticle","indefinite_article","toLowerCase","projectsNoun","app_config","projects_noun","projectNoun","project_noun","text","get_content","paramMap","subscribe","has","navigate","participantUrl","get","getProjects","update","getUser","getSelfParticipant","data","lowestGrade","highestGrade","getFriends","friendData","forEach","friend","filterProjects","getAllProjects","project","min_grade","max_grade","authorized","validateProject","push","getParticipantID","length","some","e","JSON","parse","stringify","console","log","create","header","message","buttons","then","alertEl","present","splice","indexOf","stillfriend","putSelfParticipant","selector","template"],"mappings":"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","file":"log-in-user-page-registration-registration-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"Projekttage/Benutzer/{{ participantUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Anmeldung</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-title>Für {{ projectsNoun }} Anmelden</ion-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <form #form=\\\"ngForm\\\" name=\\\"ParticipantForm\\\" (ngSubmit)=\\\"registrate()\\\">\\n        <ion-list>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required [(ngModel)]=\\\"loadedUser.first_name\\\" name=\\\"ParticipantFirstName\\\" placeholder=\\\"Vorname\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required [(ngModel)]=\\\"loadedUser.last_name\\\" name=\\\"ParticipantLastName\\\" placeholder=\\\"Nachname\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n            <ion-select [selectedText]=\\\"loadedUser.grade\\\" required name=\\\"ParticipantGrade\\\" (ionChange)=\\\"userChanges()\\\" [(ngModel)]=\\\"loadedUser.grade\\\">\\n              <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n              <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n              <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n              <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n              <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n              <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n              <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-radio-group required name=\\\"ParticipantClass\\\" [(ngModel)]=\\\"loadedUser.letter\\\">\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">A </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"a\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">B </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"b\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">C </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"c\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">D </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"d\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-item>\\n        </ion-list>\\n\\n        <ion-card color=\\\"background\\\" *ngIf=\\\"loadedUser.project_id == 0\\\">\\n          <form #form=\\\"ngForm\\\" name=\\\"ParticipantForm\\\" (ngSubmit)=\\\"appendFriendFunction()\\\">\\n            <ion-item color=\\\"items\\\">\\n              <ion-input color=\\\"text\\\" type=\\\"text\\\" placeholder=\\\"Vorname\\\" [(ngModel)]=\\\"appendFriend.first_name\\\" name=\\\"ExchangeSecondFirstName\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-input color=\\\"text\\\" type=\\\"text\\\" placeholder=\\\"Nachname\\\" [(ngModel)]=\\\"appendFriend.last_name\\\" name=\\\"ExchangeSecondLastName\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n              <ion-select [selectedText]=\\\"appendFriend.grade\\\" name=\\\"ParticipantGrade\\\" [(ngModel)]=\\\"appendFriend.grade\\\">\\n                <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n                <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n                <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n                <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n                <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n                <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n                <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-radio-group color=\\\"buttons\\\" name=\\\"ParticipantClass\\\" [(ngModel)]=\\\"appendFriend.letter\\\">\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">A </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"a\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">B </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"b\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">C </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"c\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">D </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"d\\\"></ion-radio>\\n                </ion-item>\\n              </ion-radio-group>\\n            </ion-item>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Als Freund hinzufügen</ion-button>\\n            </div>\\n          </form>\\n        </ion-card>\\n\\n        <ion-list>\\n          <ion-title color=\\\"background\\\">Freunde</ion-title>\\n          <ion-item color=\\\"items\\\" *ngIf=\\\"loadedUser.project_id == 0 || loadedUser.project_id == null\\\">\\n            <ion-list>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let friend of friendsList\\\">\\n                {{ friend.first_name }} {{ friend.last_name }} {{ friend.grade }}{{ friend.letter }}\\n                <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" (click)=\\\"removeFriendFunction(friend)\\\"><ion-icon color=\\\"text\\\" name=\\\"close\\\"></ion-icon></ion-button>\\n              </ion-item>\\n            </ion-list>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" *ngIf=\\\"loadedUser.project_id == 0 && loadedUser.role === 1 || loadedUser.project_id == null && loadedUser.role === 1\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ definiteArticle }} {{ projectNoun }} muss die Klassenstufen {{ lowestGrade }} bis {{ highestGrade }} erlauben.\\n            </ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"background\\\" *ngIf=\\\"loadedUser.project_id != 0 && loadedUser.project_id != null || loadedUser.role === 2\\\">\\n            <ion-label color=\\\"danger\\\">\\n              Du kanst leider keine Freunde auswählen, da du selbst {{ indefiniteArticle }} {{ projectNoun }} erstellt hast.\\n            </ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">1. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"1. Wunsch\\\" name=\\\"ParticipantFirstWish\\\" [(ngModel)]=\\\"loadedUser.first_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\"> \\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">2. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"2. Wunsch\\\" name=\\\"ParticipantSecondWish\\\" [(ngModel)]=\\\"loadedUser.second_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\">\\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">3. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"3. Wunsch\\\" name=\\\"ParticipantThirdWish\\\" [(ngModel)]=\\\"loadedUser.third_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\">\\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-list>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Anmelden</ion-button>\\n        </div>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistrationPage } from './registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegistrationPage]\n})\nexport class RegistrationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi91c2VyLXBhZ2UvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ParticipantsService } from 'src/app/participants.service';\nimport { AlertController } from '@ionic/angular';\nimport { Schüler } from 'src/assets/models/Schüler.model';\nimport { ConfigService } from 'src/app/config.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.page.html',\n  styleUrls: ['./registration.page.scss'],\n})\nexport class RegistrationPage implements OnInit {\n  loadedProjects = [];\n  possibleProjects = [];\n  students;\n  participantUrl;\n  loadedUser: Schüler = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n  appendFriend: any = {\n    id: 0,\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n  };\n  friendsList = [];\n  lowestGrade: number;\n  highestGrade: number;\n\n  text: string;\n\n  definiteArticle: string;\n  indefiniteArticle: string;\n  projectsNoun: string;\n  projectNoun: string;\n\n  constructor(private projectsService: ProjectsService,\n              private participantsService: ParticipantsService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private alertCtrl: AlertController,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.definiteArticle = this.config.definite_article;\n    this.indefiniteArticle = this.config.indefinite_article.toLowerCase();\n    this.projectsNoun = this.config.app_config.projects_noun;\n    this.projectNoun = this.config.app_config.project_noun;\n\n    this.text = this.config.get_content('user-registration');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.participantUrl = paramMap.get('ParticipantName');\n    });\n    this.getProjects();\n    this.projectsService.update.subscribe(() => this.getProjects());\n    this.getUser();\n    this.participantsService.update.subscribe(() => this.getUser());\n  }\n\n  ionViewWillEnter() {\n    this.getUser();\n  }\n\n  getUser() {\n    this.participantsService.getSelfParticipant().subscribe(data => {\n      this.loadedUser = data.data;\n      this.lowestGrade = +data.data.grade;\n      this.highestGrade = +data.data.grade;\n\n      this.friendsList = [];\n\n      this.participantsService.getFriends().subscribe(friendData => {\n        this.friendsList = friendData.data;\n\n        this.friendsList.forEach((friend) => {\n          if (+friend.grade <= this.lowestGrade) {\n            this.lowestGrade = +friend.grade;\n          }\n\n          if (+friend.grade >= this.highestGrade) {\n            this.highestGrade = +friend.grade;\n          }\n          this.filterProjects();\n        });\n      });\n    });\n  }\n\n  userChanges() {\n    this.lowestGrade = +this.loadedUser.grade;\n    this.highestGrade = +this.loadedUser.grade;\n\n    this.friendsList.forEach((friend) => {\n      if (+friend.grade <= this.lowestGrade) {\n        this.lowestGrade = +friend.grade;\n      }\n\n      if (+friend.grade >= this.highestGrade) {\n        this.highestGrade = +friend.grade;\n      }\n    });\n    this.filterProjects();\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.loadedProjects = data.data;\n    });\n  }\n\n  validateProject(project) {\n    // tslint:disable-next-line: max-line-length\n    if (this.lowestGrade >= +project.min_grade) {\n      if (+project.max_grade >= this.highestGrade) {\n        if (project.id !== this.loadedUser.project_id) {\n          if (project.authorized) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  filterProjects() {\n    this.possibleProjects = [];\n    // console.log(this.lowestGrade);\n    this.loadedProjects.forEach(project => {\n      if (this.validateProject(project)) {\n        // console.log(project.max_grade);\n        this.possibleProjects.push(project);\n      }\n    });\n  }\n\n  appendFriendFunction() {\n    this.participantsService.getParticipantID(this.appendFriend).subscribe(data => {\n      // tslint:disable-next-line: triple-equals\n      if (data.id != 0) {\n        this.appendFriend.id = data.id;\n\n        if (this.friendsList.length < 3  &&  !this.friendsList.some(e => e.id === data.id))  {\n          this.friendsList.push(JSON.parse(JSON.stringify(this.appendFriend)));\n          console.log(this.friendsList);\n\n          if (+this.appendFriend.grade <= this.lowestGrade) {\n            this.lowestGrade = +this.appendFriend.grade;\n          }\n\n          if (+this.appendFriend.grade >= this.highestGrade) {\n            this.highestGrade = +this.appendFriend.grade;\n          }\n        }\n\n        this.filterProjects();\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Der angegebene Schüler konnte nicht gefunden werden!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    });\n  }\n\n  removeFriendFunction(friend) {\n    this.friendsList.splice(this.friendsList.indexOf(friend), 1);\n\n    this.lowestGrade = +this.loadedUser.grade;\n    this.highestGrade = +this.loadedUser.grade;\n\n    this.friendsList.forEach(stillfriend => {\n      if (+stillfriend.grade < this.lowestGrade) {\n        this.lowestGrade = +stillfriend.grade;\n      }\n\n      if (+stillfriend.grade > this.highestGrade) {\n        this.highestGrade = +stillfriend.grade;\n      }\n    });\n\n    this.filterProjects();\n  }\n\n  registrate() {\n    // tslint:disable-next-line: max-line-length tslint:disable-next-line: triple-equals\n    if (this.loadedUser.first_wish != this.loadedUser.project_id && this.loadedUser.second_wish != this.loadedUser.project_id && this.loadedUser.third_wish != this.loadedUser.project_id) {\n      // tslint:disable-next-line: max-line-length\n      if (this.loadedUser.first_wish !== this.loadedUser.second_wish && this.loadedUser.first_wish !== this.loadedUser.third_wish && this.loadedUser.second_wish !== this.loadedUser.third_wish) {\n        if (this.friendsList.length === 3) {\n          this.loadedUser.first_friend = this.friendsList[0].id;\n          this.loadedUser.second_friend = this.friendsList[1].id;\n          this.loadedUser.third_friend = this.friendsList[2].id;\n          this.participantsService.putSelfParticipant(this.loadedUser);\n          this.router.navigate(['Projekttage/Benutzer/' + this.participantUrl]);\n        } else if (this.friendsList.length === 2) {\n          this.loadedUser.first_friend = this.friendsList[0].id;\n          this.loadedUser.second_friend = this.friendsList[1].id;\n          this.loadedUser.third_friend = 0;\n          this.participantsService.putSelfParticipant(this.loadedUser);\n          this.router.navigate(['Projekttage/Benutzer/' + this.participantUrl]);\n        } else if (this.friendsList.length === 1) {\n          this.loadedUser.first_friend = this.friendsList[0].id;\n          this.loadedUser.second_friend = 0;\n          this.loadedUser.third_friend = 0;\n          this.participantsService.putSelfParticipant(this.loadedUser);\n          this.router.navigate(['Projekttage/Benutzer/' + this.participantUrl]);\n        } else {\n          this.loadedUser.first_friend = 0;\n          this.loadedUser.second_friend = 0;\n          this.loadedUser.third_friend = 0;\n          this.participantsService.putSelfParticipant(this.loadedUser);\n          this.router.navigate(['Projekttage/Benutzer/' + this.participantUrl]);\n        }\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Du must drei verschiedene Projektwünsche angeben!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    } else {\n      this.alertCtrl.create({\n        header: 'Fehler',\n        message: 'Du kannst nicht an deinem eigenen Projekt teilnehmen!',\n        buttons: [{\n          text: 'Ok',\n          role: 'cancel',\n          }]\n        }).then(alertEl => {\n          alertEl.present();\n        });\n    }\n  }\n\n}\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-logs/admin-logs.page.html","webpack:///src/app/log-in/admin-page/admin-logs/admin-logs.module.ts","webpack:///src/app/log-in/admin-page/admin-logs/admin-logs.page.scss","webpack:///src/app/log-in/admin-page/admin-logs/admin-logs.page.ts"],"names":["routes","path","component","AdminLogsPageModule","imports","forChild","declarations","AdminLogsPage","activatedRoute","scheduleService","adminsService","alertCtrl","alert","config","SignUpEmails","SignUpEmail","id","email","email_confirmation","schedule","begin","control","registration","sort_students","exchange","projects","end","eventName","app_config","event_name","text","get_content","currentDate","Date","getSchedule","subscribe","data","paramMap","adminUrl","get","getSignUpemails","getAllSignUpEmails","createSignUpEmail","push","message","update","emit","error","emailID","create","header","buttons","role","handler","filter","filterEmail","deleteSignUpEmail","then","alertEl","present","selector","template"],"mappings":"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","file":"log-in-admin-page-admin-logs-admin-logs-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Appverwaltung</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        E-Mails für Admin-Accounts verwalten\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"SignUpEmails.length\\\">\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let SignUpEmail of SignUpEmails\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-content>\\n            <ion-text color=\\\"text\\\">{{ SignUpEmail.email }}</ion-text>\\n          </ion-card-content>\\n        </ion-card>\\n        <ion-buttons (click)=\\\"deleteSignUpEmail(SignUpEmail.id)\\\"><ion-icon color=\\\"danger\\\" name=\\\"close\\\"></ion-icon></ion-buttons>\\n      </ion-item>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <form #signUpEmail=\\\"ngForm\\\" name=\\\"SignUpEmailForm\\\" (ngSubmit)=\\\"postSignUpEmail()\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\"color=\\\"background\\\">\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"SignUpEmail.email\\\" name=\\\"Email\\\" placeholder=\\\"E-mail\\\" required type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"SignUpEmail.email_confirmation\\\" name=\\\"Email\\\" placeholder=\\\"E-mail-Bestätigung\\\" required type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button color=\\\"buttons\\\" [disabled]=\\\"signUpEmail.invalid || currentDate <= schedule.begin && currentDate > schedule.sort_students\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Freigeben</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminLogsPage } from './admin-logs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLogsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminLogsPage]\n})\nexport class AdminLogsPageModule {}\n","export default \"ion-col {\\n  height: 80px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL2FkbWluLXBhZ2UvYWRtaW4tbG9ncy9hZG1pbi1sb2dzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi9hZG1pbi1wYWdlL2FkbWluLWxvZ3MvYWRtaW4tbG9ncy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29sIHtcclxuICAgIGhlaWdodDogODBweDtcclxufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfigService } from 'src/app/config.service';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/schedule.service';\nimport { AdminsService } from 'src/app/admins.service';\nimport { AlertService } from 'src/app/alert.service';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-admin-logs',\n  templateUrl: './admin-logs.page.html',\n  styleUrls: ['./admin-logs.page.scss'],\n})\nexport class AdminLogsPage implements OnInit {\n  adminUrl: string;\n\n  SignUpEmails: any[] = [];\n  SignUpEmail = {\n    id: 0,\n    email: '',\n    email_confirmation: ''\n  };\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  currentDate: any;\n\n  text: string;\n\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private scheduleService: ScheduleService,\n              private adminsService: AdminsService,\n              private alertCtrl: AlertController,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('admin-logs');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n\n    this.getSignUpemails();\n  }\n\n  getSignUpemails() {\n    this.adminsService.getAllSignUpEmails().subscribe(data => {\n      this.SignUpEmails = data.data;\n    });\n  }\n\n  postSignUpEmail() {\n    this.adminsService.createSignUpEmail(this.SignUpEmail).subscribe(data => {\n      this.SignUpEmails.push(data.data);\n      this.alert.alert(data.message);\n      this.adminsService.update.emit();\n    }, error => {\n      this.alert.error('Freigeben der E-mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  deleteSignUpEmail(emailID) {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie diese E-Mail wirklich sperren?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Löschen',\n        handler: () => {\n          if (this.SignUpEmail.email === this.SignUpEmail.email_confirmation) {\n            this.SignUpEmails = this.SignUpEmails.filter(filterEmail => {\n              return emailID !== filterEmail.id;\n            });\n            this.adminsService.deleteSignUpEmail(emailID);\n          } else {\n            this.alert.error('Die angegebenen E-mails stimmen nicht überein.');\n          }\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n"]}
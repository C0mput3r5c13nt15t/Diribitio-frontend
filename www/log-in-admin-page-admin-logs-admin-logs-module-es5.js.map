{"version":3,"sources":["webpack:///src/app/log-in/admin-page/admin-logs/admin-logs.module.ts","webpack:///src/app/log-in/admin-page/admin-logs/admin-logs.page.ts","webpack:///src/app/log-in/admin-page/admin-logs/admin-logs.page.scss","webpack:///src/app/log-in/admin-page/admin-logs/admin-logs.page.html"],"names":["routes","path","component","AdminLogsPageModule","imports","forChild","declarations","AdminLogsPage","activatedRoute","scheduleService","adminsService","alertCtrl","alert","config","subscriptions","SignUpEmails","SignUpEmail","id","email","email_confirmation","schedule","begin","Date","control","registration","sort_students","exchange","projects","end","eventName","app_config","event_name","text","get_content","currentDate","paramMap","subscribe","adminUrl","get","getSchedule","getSignUpemails","push","update","forEach","sub","unsubscribe","data","getAllSignUpEmails","form","createSignUpEmail","message","reset","emit","error","emailID","create","header","buttons","role","handler","filter","filterEmail","deleteSignUpEmail","then","alertEl","present","selector","template"],"mappings":"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","file":"log-in-admin-page-admin-logs-admin-logs-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminLogsPage } from './admin-logs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLogsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminLogsPage]\n})\nexport class AdminLogsPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { AlertController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-logs',\n  templateUrl: './admin-logs.page.html',\n  styleUrls: ['./admin-logs.page.scss'],\n})\nexport class AdminLogsPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n\n  SignUpEmails: any[] = [];\n  SignUpEmail = {\n    id: 0,\n    email: '',\n    email_confirmation: ''\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  text: string;\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private scheduleService: ScheduleService,\n              private adminsService: AdminsService,\n              private alertCtrl: AlertController,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('admin-logs');\n\n    this.currentDate = formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n\n    this.getSchedule();\n    this.getSignUpemails();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.adminsService.update.subscribe(() => this.getSignUpemails()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getSignUpemails() {\n    this.adminsService.getAllSignUpEmails().subscribe(data => {\n      this.SignUpEmails = data.data;\n    });\n  }\n\n  postSignUpEmail(form) {\n    this.adminsService.createSignUpEmail(this.SignUpEmail).subscribe(data => {\n      this.SignUpEmails.push(data.data);\n      this.alert.alert(data.message);\n      form.reset();\n      this.adminsService.update.emit();\n    }, error => {\n      this.alert.error('Freigeben der E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  deleteSignUpEmail(emailID) {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie diese E-Mail wirklich sperren?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Sperren',\n        handler: () => {\n          if (this.SignUpEmail.email === this.SignUpEmail.email_confirmation) {\n            this.SignUpEmails = this.SignUpEmails.filter(filterEmail => {\n              return emailID !== filterEmail.id;\n            });\n            this.adminsService.deleteSignUpEmail(emailID);\n          } else {\n            this.alert.error('Die angegebenen E-Mails stimmen nicht überein.');\n          }\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n","export default \"ion-col {\\n  height: 80px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcYWRtaW4tbG9ncy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0oiLCJmaWxlIjoiYWRtaW4tbG9ncy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29sIHtcclxuICAgIGhlaWdodDogODBweDtcclxufSJdfQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Appverwaltung</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>E-Mails für Admin-Accounts verwalten</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"SignUpEmails.length\\\">\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let SignUpEmail of SignUpEmails\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-content>\\n            <ion-text color=\\\"text\\\">{{ SignUpEmail.email }}</ion-text>\\n          </ion-card-content>\\n        </ion-card>\\n        <ion-buttons (click)=\\\"deleteSignUpEmail(SignUpEmail.id)\\\"><ion-icon color=\\\"danger\\\" name=\\\"close\\\"></ion-icon></ion-buttons>\\n      </ion-item>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <form #signUpEmail=\\\"ngForm\\\" name=\\\"SignUpEmailForm\\\" (ngSubmit)=\\\"postSignUpEmail(signUpEmail)\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\"color=\\\"background\\\">\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"SignUpEmail.email\\\" name=\\\"Email\\\" placeholder=\\\"E-Mail\\\" required type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"SignUpEmail.email_confirmation\\\" name=\\\"Email\\\" placeholder=\\\"E-Mail-Bestätigung\\\" required type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button color=\\\"buttons\\\" [disabled]=\\\"signUpEmail.invalid || currentDate <= schedule.begin && currentDate > schedule.sort_students\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Freigeben</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"]}
{"version":3,"sources":["webpack:///src/app/log-in/leader-page/leader-project-administration/leader-project-edit/leader-project-edit.module.ts","webpack:///src/app/log-in/leader-page/leader-project-administration/leader-project-edit/leader-project-edit.page.ts","webpack:///src/app/log-in/leader-page/leader-project-administration/leader-project-edit/leader-project-edit.page.html"],"names":["routes","path","component","LeaderProjectEditPage","activatedRoute","router","projectsService","scheduleService","config","subscriptions","loadedLeader","id","user_name","email","password","project_id","editProject","authorized","editable","title","image","descr","leader_name","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","schedule","begin","Date","control","registration","sort_students","exchange","projects","end","projectNoun","this","app_config","project_noun","eventName","event_name","currentDate","paramMap","subscribe","has","leaderUrl","get","navigate","getSchedule","getProject","push","update","forEach","sub","unsubscribe","data","getSelfLeadedProject","event","file","target","files","touchUpProject","putProject","submit","LeaderProjectEditPageModule","forChild"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaderProjectEditPage } from './leader-project-edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaderProjectEditPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LeaderProjectEditPage]\n})\nexport class LeaderProjectEditPageModule {}\n","import { Component, OnInit, ElementRef, ViewChild, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { Projectleader } from 'src/models/Projectleader';\nimport { Project } from 'src/models/Project.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { formatDate } from '@angular/common';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-project-edit',\n  templateUrl: './leader-project-edit.page.html',\n  styleUrls: ['./leader-project-edit.page.scss'],\n})\nexport class LeaderProjectEditPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  leaderUrl: string;\n\n  loadedLeader: Projectleader = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    project_id: 0,\n  };\n\n  editProject: Project = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: null,\n    descr: '',\n    leader_name: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: []\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  image: any;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private scheduleService: ScheduleService,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('LeaderName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.leaderUrl = paramMap.get('LeaderName');\n    });\n\n    this.getSchedule();\n    this.getProject();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.projectsService.update.subscribe(() => this.getProject()),\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getProject() {\n    this.projectsService.getSelfLeadedProject('leaders').subscribe(data => {\n      this.editProject = data.data;\n    });\n  }\n\n  changeFile(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      this.image = file;\n    }\n  }\n\n  submit() {\n    if (this.currentDate > this.schedule.control && this.currentDate <= this.schedule.registration) {\n      this.projectsService.touchUpProject('leaders', this.editProject, this.leaderUrl);\n    } else {\n      this.projectsService.putProject('leaders', this.editProject, this.leaderUrl);\n    }\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/{{ projectNoun }}leiter/{{ leaderUrl }}\"></ion-back-button>\n    </ion-button>\n    <ion-title>{{ projectNoun }} bearbeiten</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\"class=\"content\">\n    <ion-card-content>\n      <form #form=\"ngForm\" name=\"ProjectForm\" (ngSubmit)=\"submit()\" #Formular>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">{{ projectNoun }}leiter</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-input color=\"text\" required name=\"ProjectLeader\" [(ngModel)]=\"editProject.leader_name\" required type=\"text\"></ion-input>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">{{ projectNoun }}name</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-input color=\"text\" required name=\"ProjectName\" [(ngModel)]=\"editProject.title\" required type=\"text\"></ion-input>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">{{ projectNoun }}beschreibung</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-textarea required type=\"text\" name=\"ProjectDescr\" [(ngModel)]=\"editProject.descr\" rows=\"7\"></ion-textarea>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Kosten</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-input color=\"text\" required name=\"ProjectCost\" [(ngModel)]=\"editProject.cost\" required type=\"number\"></ion-input>€\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">1.Tag</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">von</ion-label><ion-input display-format=\"hh:mm\" color=\"text\" required name=\"ProjectFirstTimeBegin\" [(ngModel)]=\"editProject.first_day_begin\" type=\"time\"></ion-input>\n        </ion-item> \n        <ion-item color=\"items\">\n          <ion-label color=\"text\">bis</ion-label><ion-input display-format=\"hh:mm\" color=\"text\" required name=\"ProjectFirstTimeEnd\" [(ngModel)]=\"editProject.first_day_end\" type=\"time\"></ion-input>\n        </ion-item> \n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">2.Tag</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">von</ion-label><ion-input display-format=\"HH:mm\" color=\"text\" required name=\"ProjectSecondTimeBeginn\" [(ngModel)]=\"editProject.second_day_begin\" type=\"time\"></ion-input>\n        </ion-item>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">bis</ion-label><ion-input display-format=\"hh:mm\" color=\"text\" required name=\"ProjectSecondTimeEnd\" [(ngModel)]=\"editProject.second_day_end\" type=\"time\"></ion-input>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Klassenstufe</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">von</ion-label>\n          <ion-select required name=\"ProjectMinClass\" [(ngModel)]=\"editProject.min_grade\" cancelText=\"Abbrechen\" doneText=\"Ok\">\n            <ion-select-option value=\"5\">5</ion-select-option>\n            <ion-select-option value=\"6\">6</ion-select-option>\n            <ion-select-option value=\"7\">7</ion-select-option>\n            <ion-select-option value=\"8\">8</ion-select-option>\n            <ion-select-option value=\"9\">9</ion-select-option>\n            <ion-select-option value=\"10\">10</ion-select-option>\n            <ion-select-option value=\"11\">11</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item color=\"items\" lines=\"none\">\n          <ion-label color=\"text\">bis</ion-label>\n          <ion-select required name=\"ProjectMaxClass\" [(ngModel)]=\"editProject.max_grade\" cancelText=\"Abbrechen\" doneText=\"Ok\">\n            <ion-select-option selected value=\"5\">5</ion-select-option>\n            <ion-select-option value=\"6\">6</ion-select-option>\n            <ion-select-option value=\"7\">7</ion-select-option>\n            <ion-select-option value=\"8\">8</ion-select-option>\n            <ion-select-option value=\"9\">9</ion-select-option>\n            <ion-select-option value=\"10\">10</ion-select-option>\n            <ion-select-option value=\"11\">11</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item-divider color=\"background\">\n          <ion-label color=\"text\">Teinehmeranzahl</ion-label>\n        </ion-item-divider>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">von</ion-label><ion-input color=\"text\" required name=\"ProjectMinParticipants\" [(ngModel)]=\"editProject.min_participants\" required type=\"number\"></ion-input>\n        </ion-item>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">bis</ion-label><ion-input color=\"text\" required name=\"ProjectMaxParticipants\" [(ngModel)]=\"editProject.max_participants\" required type=\"number\"></ion-input>\n        </ion-item>\n        <div class=\"ion-padding\">\n          <ion-button color=\"buttons\" [disabled]=\"form.invalid\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">Änderungen speichern</ion-button>\n        </div>\n      </form>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n  "]}
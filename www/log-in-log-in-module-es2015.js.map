{"version":3,"sources":["./src/app/log-in/log-in.page.ts","./src/app/log-in/log-in.page.scss","./src/app/log-in/log-in.page.html","./src/app/log-in/log-in.module.ts"],"names":[],"mappings":"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","file":"log-in-log-in-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { LeadersService } from 'src/app/services/leaders.service';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Subscription } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.page.html',\n  styleUrls: ['./log-in.page.scss'],\n})\nexport class LogInPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Conatins the which form should be shown on the log-in page\n   */\n  formType = 'student';\n\n  StudentCredentials = {\n    email: '',\n    password: '',\n  };\n\n  LeaderCredentials = {\n    email: '',\n    password: '',\n  };\n\n  AdminCredentials = {\n    email: '',\n    password: '',\n  };\n\n  /**\n   * Conatins the number of times a log-in has been tried\n   */\n  tries = 0;\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private auth: AuthenticationService,\n              private router: Router,\n              private studentsService: StudentsService,\n              private scheduleService: ScheduleService,\n              private leadersService: LeadersService,\n              private adminsService: AdminsService,\n              private alert: AlertService,\n              private config: ConfigService,\n              private cookieService: CookieService) {}\n\n  ngOnInit() {\n    this.currentDate = this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.getSchedule();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule())\n    );\n  }\n\n  ionViewWillEnter() {\n    this.log_in_from_storage();\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  keyPressEventHandler(keyCode, type= 'students', form) {\n    if (keyCode === 13) {\n      if (type === 'students') {\n        this.LogInStudent(form);\n      } else if (type === 'leaders') {\n        this.LogInLeader(form);\n      } else if (type === 'admins') {\n        this.LogInAdmin(form);\n      }\n    }\n  }\n\n  /**\n   * Sets the focus on the given element if ENTER is pressed\n   * @param keyCode Contains the code of the pressed key\n   * @param nextInput Contains the next element to be focused\n   */\n  nextInput(keyCode, nextInput) {\n    if (keyCode === 13) {\n      nextInput.setFocus();\n    }\n  }\n\n  log_in_from_storage() {\n    if (this.cookieService.get('Diribitio-Session')) {\n      const jwt = this.cookieService.get('Diribitio-Session');\n      this.auth.check_jwt(jwt).subscribe(data => {\n        const userAuth = data.auth;\n\n        this.auth.set_jwt(data.token);\n        this.auth.setLoggedIn(true);\n\n        if (userAuth === 'admins') {\n          this.router.navigate([this.eventName + '/Admin/' + data.user_name]);\n        } else if (userAuth === 'leaders') {\n          this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + data.user_name]);\n        } else if (userAuth === 'students') {\n          this.router.navigate([this.eventName + '/Schüler/' + data.user_name]);\n        }\n      }, (error) => {\n        this.alert.error('Die Sitzung ist bereits abgelaufen!', error);\n        this.auth.setLoggedIn(false);\n      });\n    }\n  }\n\n  LogInStudent(form) {\n    this.studentsService.logInStudent(this.StudentCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/Schüler/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInLeader(form) {\n    this.leadersService.logInLeader(this.LeaderCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInAdmin(form) {\n    this.adminsService.logInAdmin(this.AdminCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/Admin/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  wrongPassword() {\n    this.tries += 1;\n\n    if (this.tries >= 5) {\n      this.alert.wrongPassword(this.tries * 3000, this.tries);\n    }\n  }\n\n}\n","export default \".centerd_label {\\n  display: block;\\n  width: 100%;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGxvZy1pbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBQ0oiLCJmaWxlIjoibG9nLWluLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXJkX2xhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Anmeldung</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" [routerLink]=\\\"['../../Help']\\\"><ion-icon name=\\\"help-circle\\\"></ion-icon></ion-button>\\n  </ion-toolbar>\\n  <div data-ng-controller=\\\"myCtrl\\\" data-ng-init=\\\"log_in_from_storage()\\\"></div>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>Einloggen</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-segment color=\\\"buttons\\\" [(ngModel)]=\\\"formType\\\">\\n        <ion-segment-button value=\\\"student\\\">\\n          <ion-label>Schüler</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"leader\\\">\\n          <ion-label>{{ projectNoun }}leiter</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"admin\\\">\\n          <ion-label>Admin</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n\\n      <form #studentLoginForm=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"LogInStudent(studentLoginForm)\\\" [hidden]=\\\"formType != 'student'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Schüler</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input name=\\\"email\\\" [(ngModel)]=\\\"StudentCredentials.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextStudentField)\\\" placeholder=\\\"E-Mail\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input #nextStudentField name=\\\"password\\\" [(ngModel)]=\\\"StudentCredentials.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"keyPressEventHandler($event.keyCode, 'students', studentLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"studentLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n            </div>\\n            <ion-label *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\" class=\\\"centerd_label\\\" color=\\\"text\\\">oder</ion-label>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\" [routerLink]=\\\"['./Schüler Registration']\\\" color=\\\"buttons\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form #leaderLoginForm=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"LogInLeader(leaderLoginForm)\\\" [hidden]=\\\"formType != 'leader'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>{{ projectNoun }}leiter</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input name=\\\"email\\\" [(ngModel)]=\\\"LeaderCredentials.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextLeaderField)\\\" placeholder=\\\"E-Mail\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input #nextLeaderField name=\\\"password\\\" [(ngModel)]=\\\"LeaderCredentials.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"keyPressEventHandler($event.keyCode, 'leaders', leaderLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"leaderLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n            </div>\\n            <ion-label *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\" class=\\\"centerd_label\\\" color=\\\"text\\\">oder</ion-label>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\" routerLink='./{{ projectNoun}}leiter Registration' color=\\\"buttons\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form id=\\\"Formular\\\" #adminLoginForm=\\\"ngForm\\\" (ngSubmit)=\\\"LogInAdmin(adminLoginForm)\\\" [hidden]=\\\"formType != 'admin'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Admin</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n              <ion-list>\\n                <ion-item color=\\\"items\\\">\\n                  <ion-input name=\\\"email\\\" [(ngModel)]=\\\"AdminCredentials.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextAdminField)\\\" placeholder=\\\"E-Mail\\\" color=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\">\\n                  <ion-input #nextAdminField name=\\\"password\\\" [(ngModel)]=\\\"AdminCredentials.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"keyPressEventHandler($event.keyCode, 'admins', adminLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n                </ion-item>\\n              </ion-list>\\n              <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n              <div class=\\\"ion-padding\\\">\\n                <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"adminLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n              </div>\\n              <ion-label *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.sort_students\\\" class=\\\"centerd_label\\\" color=\\\"text\\\">oder</ion-label>\\n              <div class=\\\"ion-padding\\\">\\n                <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.sort_students\\\" [routerLink]=\\\"['./Admin Registration']\\\" color=\\\"buttons\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n              </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LogInPage } from './log-in.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogInPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LogInPage]\n})\nexport class LogInPageModule {}\n"],"sourceRoot":"webpack:///"}
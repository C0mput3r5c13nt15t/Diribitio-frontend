{"version":3,"sources":["./src/app/log-in/log-in.page.html","./src/app/log-in/log-in.module.ts","./src/app/log-in/log-in.page.scss","./src/app/log-in/log-in.page.ts"],"names":[],"mappings":"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","file":"log-in-log-in-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Anmeldung</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" [routerLink]=\\\"['../../Help']\\\"><ion-icon name=\\\"help-circle\\\"></ion-icon></ion-button>\\n  </ion-toolbar>\\n  <div data-ng-controller=\\\"myCtrl\\\" data-ng-init=\\\"log_in_from_storage()\\\"></div>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-title>\\n        Einloggen\\n      </ion-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-segment color=\\\"buttons\\\" [(ngModel)]=\\\"formType\\\">\\n        <ion-segment-button value=\\\"student\\\">\\n          <ion-label>Schüler</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"leader\\\">\\n          <ion-label>{{ projectNoun }}leiter</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"admin\\\">\\n          <ion-label>Admin</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n\\n      <form #studentLoginForm=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"LogInStudent(studentLoginForm)\\\" [hidden]=\\\"formType != 'student'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Schüler</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input name=\\\"email\\\" [(ngModel)]=\\\"Student.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextStudentField)\\\" placeholder=\\\"Benutzername\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input #nextStudentField name=\\\"password\\\" [(ngModel)]=\\\"Student.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"eventHandler($event.keyCode, 'students', studentLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n            <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.registration\\\" [routerLink]=\\\"['./Schüler Registration']\\\" color=\\\"buttons\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"studentLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form #leaderLoginForm=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"LogInLeader(leaderLoginForm)\\\" [hidden]=\\\"formType != 'leader'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>{{ projectNoun }}leiter</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input name=\\\"email\\\" [(ngModel)]=\\\"Leader.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextLeaderField)\\\" placeholder=\\\"E-mail\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input #nextLeaderField name=\\\"password\\\" [(ngModel)]=\\\"Leader.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"eventHandler($event.keyCode, 'leaders', leaderLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n            <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.registration\\\" [routerLink]=\\\"['./Projektleiter Registration']\\\" color=\\\"buttons\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"leaderLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form id=\\\"Formular\\\" #adminLoginForm=\\\"ngForm\\\" (ngSubmit)=\\\"LogInAdmin(adminLoginForm)\\\" [hidden]=\\\"formType != 'admin'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Admin</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n              <ion-list>\\n                <ion-item color=\\\"items\\\">\\n                  <ion-input name=\\\"email\\\" [(ngModel)]=\\\"Admin.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextAdminField)\\\" placeholder=\\\"E-mail\\\" color=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\">\\n                  <ion-input #nextAdminField name=\\\"password\\\" [(ngModel)]=\\\"Admin.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"eventHandler($event.keyCode, 'admins', adminLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n                </ion-item>\\n              </ion-list>\\n              <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n              <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.sort_students\\\" [routerLink]=\\\"['./Admin Registration']\\\" color=\\\"buttons\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n              <div class=\\\"ion-padding\\\">\\n                <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"adminLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n              </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LogInPage } from './log-in.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogInPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LogInPage]\n})\nexport class LogInPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi9sb2ctaW4ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\nimport { ParticipantsService } from '../participants.service';\nimport { LeadersService } from '../leaders.service';\nimport { AdminsService } from '../admins.service';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { formatDate } from '@angular/common';\nimport { AlertService } from '../alert.service';\nimport { ConfigService } from '../config.service';\nimport { ScheduleService } from '../schedule.service';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.page.html',\n  styleUrls: ['./log-in.page.scss'],\n})\nexport class LogInPage implements OnInit {\n  formType = 'student';\n\n  Student = {\n    email: '',\n    password: '',\n  };\n\n  Leader = {\n    email: '',\n    password: '',\n  };\n\n  Admin = {\n    email: '',\n    password: '',\n  };\n\n  tries = 0;\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n  currentDate: any;\n\n  projectNoun: string;\n\n  constructor(private auth: AuthenticationService,\n              private router: Router,\n              private participantsService: ParticipantsService,\n              private scheduleService: ScheduleService,\n              private leadersService: LeadersService,\n              private adminsService: AdminsService,\n              private alert: AlertService,\n              private config: ConfigService) {}\n\n  ngOnInit() {\n    this.projectNoun = this.config.app_config.project_noun;\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  ionViewWillEnter() {\n    this.log_in_from_storage();\n  }\n\n  eventHandler(keyCode, type= 'students', form) {\n    if (keyCode === 13) {\n      if (type === 'students') {\n        this.LogInStudent(form);\n      } else if (type === 'leaders') {\n        this.LogInLeader(form);\n      } else if (type === 'admins') {\n        this.LogInAdmin(form);\n      }\n    }\n  }\n\n  nextInput(keyCode, nextInput) {\n    if (keyCode === 13) {\n      nextInput.setFocus();\n    }\n  }\n\n  log_in_from_storage() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      this.auth.check_jwt(jwt).subscribe(data => {\n        const userAuth = data.auth;\n\n        this.auth.set_jwt(data.token);\n        this.auth.setLoggedIn(true);\n\n        if (userAuth === 'admins') {\n          this.router.navigate(['Projekttage/Admin/' + data.user_name]);\n        } else if (userAuth === 'leaders') {\n          this.router.navigate(['Projekttage/Projektleiter/' + data.user_name]);\n        } else if (userAuth === 'students') {\n          this.router.navigate(['Projekttage/Benutzer/' + data.user_name]);\n        }\n      }, (error) => {\n        this.alert.error('Die Sitzung ist bereits abgelaufen!', error);\n        this.auth.setLoggedIn(false);\n      });\n    }\n  }\n\n  LogInStudent(form) {\n    this.participantsService.logInParticipant(this.Student).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate(['Projekttage/Benutzer/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInLeader(form) {\n    this.leadersService.logInLeader(this.Leader).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate(['Projekttage/Projektleiter/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInAdmin(form) {\n    this.adminsService.logInAdmin(this.Admin).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate(['Projekttage/Admin/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  wrongPassword() {\n    this.tries += 1;\n\n    if (this.tries >= 5) {\n      this.alert.wrongPassword(this.tries * 3000, this.tries);\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}
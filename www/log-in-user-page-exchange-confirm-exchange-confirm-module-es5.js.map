{"version":3,"sources":["webpack:///src/app/log-in/user-page/exchange-confirm/exchange-confirm.page.html","webpack:///src/app/log-in/user-page/exchange-confirm/exchange-confirm.module.ts","webpack:///src/app/log-in/user-page/exchange-confirm/exchange-confirm.page.scss","webpack:///src/app/log-in/user-page/exchange-confirm/exchange-confirm.page.ts"],"names":["routes","path","component","ExchangeConfirmPageModule","imports","forChild","declarations","ExchangeConfirmPage","router","activatedRoute","exchangesService","projectsService","alertCtrl","config","alert","loadedUser","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","content","get_content","studentAlreadyExchangeError","get_error","currentDate","Date","paramMap","subscribe","has","navigate","participantUrl","get","getExchanges","getAllExchangesForParticipant","data","forEach","request","getLittleProject","sender","response","project_title","title","exchangeID","create","header","message","buttons","text","handler","confirmExchange","update","emit","error","then","alertEl","present","selector","template"],"mappings":"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","file":"log-in-user-page-exchange-confirm-exchange-confirm-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"Projekttage/Benutzer/{{ participantUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Tauschanfrage best채tigen</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"loadedUser.exchange_id == 0\\\" class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-title>Tauschanfragen annehmen</ion-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-label color=\\\"text\\\">\\n        {{ content }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item color=\\\"items\\\" *ngFor=\\\"let exchange of loadedUser.exchange_requests\\\">\\n          <ion-button color=\\\"buttons\\\" slot=\\\"start\\\" (click)=\\\"confirm(exchange.id)\\\"><ion-icon name=\\\"checkmark\\\"></ion-icon></ion-button>\\n          {{ exchange.sender.first_name }} {{ exchange.sender.last_name }} {{ exchange.sender.grade }}{{ exchange.sender.letter }} aus {{ exchange.sender.project_title }}\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\" *ngIf=\\\"loadedUser.exchange_id != 0\\\" class=\\\"content\\\">\\n    <ion-card-content>\\n      <label color=\\\"danger\\\">{{ studentAlreadyExchangeError }}</label>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExchangeConfirmPage } from './exchange-confirm.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExchangeConfirmPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ExchangeConfirmPage]\n})\nexport class ExchangeConfirmPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi91c2VyLXBhZ2UvZXhjaGFuZ2UtY29uZmlybS9leGNoYW5nZS1jb25maXJtLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ExchangesService } from 'src/app/exchanges.service';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Sch체ler } from 'src/assets/models/Sch체ler.model';\nimport { ConfigService } from 'src/app/config.service';\nimport { AlertService } from 'src/app/alert.service';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-exchange-confirm',\n  templateUrl: './exchange-confirm.page.html',\n  styleUrls: ['./exchange-confirm.page.scss'],\n})\nexport class ExchangeConfirmPage implements OnInit {\n  participantUrl: string;\n\n  loadedUser: Sch체ler = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n\n  currentDate: any;\n\n  content: string;\n\n  studentAlreadyExchangeError: string;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private exchangesService: ExchangesService,\n              private projectsService: ProjectsService,\n              private alertCtrl: AlertController,\n              private config: ConfigService,\n              private alert: AlertService ) { }\n\n  ngOnInit() {\n    this.content = this.config.get_content('user-exchange-confirm');\n\n    this.studentAlreadyExchangeError = this.config.get_error('student-already_exchange');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.participantUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getExchanges();\n  }\n\n  getExchanges() {\n    this.exchangesService.getAllExchangesForParticipant().subscribe(data => {\n      this.loadedUser.exchange_requests = data.data;\n      this.loadedUser.exchange_requests.forEach(request => {\n        this.projectsService.getLittleProject(request.sender.project_id).subscribe(response => {\n          request.sender.project_title = response.data.title;\n        });\n      });\n    });\n  }\n\n  confirm(exchangeID) {\n    this.alertCtrl.create({\n      header: 'Bist du sicher?',\n      message: 'Willst du wirklich tauschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Ja',\n        handler: async () => {\n          this.exchangesService.confirmExchange(exchangeID).subscribe(data => {\n            this.alert.alert(data.message);\n            this.router.navigate(['Projekttage/Benutzer/' + this.participantUrl]);\n            this.exchangesService.update.emit();\n          }, error => {\n            this.alert.error('Best채tigung des Tausches fehlgeschlagen!', error.error);\n          });\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n}\n"]}
{"version":3,"sources":["./src/app/log-in/reset-password/reset-password.page.ts","./src/app/log-in/reset-password/reset-password.module.ts","./src/app/log-in/reset-password/reset-password.page.scss","./src/app/log-in/reset-password/reset-password.page.html"],"names":[],"mappings":"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","file":"log-in-reset-password-reset-password-module-es2015.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  formType = 'student';\n\n  resetPasswordStudent = {\n    token: '',\n    email: '',\n    user_type: 'students',\n    password: '',\n    password_confirmation: ''\n  };\n\n  resetPasswordLeader = {\n    token: '',\n    email: '',\n    user_type: 'leaders',\n    password: '',\n    password_confirmation: ''\n  };\n\n  resetPasswordAdmin = {\n    token: '',\n    email: '',\n    user_type: 'admins',\n    password: '',\n    password_confirmation: ''\n  };\n\n  text: string;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private config: ConfigService,\n              private auth: AuthenticationService,\n              private alert: AlertService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('reset-password');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (paramMap.has('ResetToken')) {\n        this.resetPasswordAdmin.token = this.activatedRoute.snapshot.paramMap.get('ResetToken');\n        this.resetPasswordLeader.token = this.activatedRoute.snapshot.paramMap.get('ResetToken');\n        this.resetPasswordStudent.token = this.activatedRoute.snapshot.paramMap.get('ResetToken');\n      } else {\n        this.router.navigate([this.eventName + '/Anmeldung']);\n      }\n    });\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  eventHandler(keyCode, type= 'students', form) {\n    if (keyCode === 13) {\n      if (type === 'students') {\n        this.resetStudentPassword(form);\n      } else if (type === 'leaders') {\n        this.resetLeaderPassword(form);\n      } else if (type === 'admins') {\n        this.resetAdminPassword(form);\n      }\n    }\n  }\n\n  /**\n   * Sets the focus on the given element if ENTER is pressed\n   * @param keyCode Contains the code of the pressed key\n   * @param nextInput Contains the next element to be focused\n   */\n  nextInput(keyCode, nextInput) {\n    if (keyCode === 13) {\n      nextInput.setFocus();\n    }\n  }\n\n  resetStudentPassword(form) {\n    this.auth.resetPassword(this.resetPasswordStudent).subscribe(data => {\n      this.alert.alert(data.message);\n      form.reset();\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Zurücksetzen des Passworts fehlgeschalgen!', error.error);\n    });\n  }\n\n  resetLeaderPassword(form) {\n    this.auth.resetPassword(this.resetPasswordLeader).subscribe(data => {\n      this.alert.alert(data.message);\n      form.reset();\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Zurücksetzen des Passworts fehlgeschalgen!', error.error);\n    });\n  }\n\n  resetAdminPassword(form) {\n    this.auth.resetPassword(this.resetPasswordAdmin).subscribe(data => {\n      this.alert.alert(data.message);\n      form.reset();\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Zurücksetzen des Passworts fehlgeschalgen!', error.error);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZXNldC1wYXNzd29yZC5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Anmeldung\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Passwort ändern</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-card-title>Passwort ändern</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-segment color=\\\"buttons\\\" [(ngModel)]=\\\"formType\\\">\\n        <ion-segment-button value=\\\"student\\\">\\n          <ion-label>Schüler</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"leader\\\">\\n          <ion-label>{{ projectNoun }}leiter</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"admin\\\">\\n          <ion-label>Admin</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n\\n      <form #studentResetPassword=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"resetStudentPassword(studentResetPassword)\\\" [hidden]=\\\"formType != 'student'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Schüler</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"resetPasswordStudent.email\\\" name=\\\"email\\\" placeholder=\\\"E-Mail\\\" required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password\\\" required [(ngModel)]=\\\"resetPasswordStudent.password\\\" placeholder=\\\"Passwort\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password_confirmation\\\" required [(ngModel)]=\\\"resetPasswordStudent.password_confirmation\\\" placeholder=\\\"Passwort bestätigen\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"studentResetPassword.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Passwort ändern</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form #leaderResetPassword=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"resetLeaderPassword(leaderResetPassword)\\\" [hidden]=\\\"formType != 'leader'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>{{ projectNoun }}leiter</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"resetPasswordLeader.email\\\" name=\\\"email\\\" placeholder=\\\"E-Mail\\\" required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password\\\" required [(ngModel)]=\\\"resetPasswordLeader.password\\\" placeholder=\\\"Passwort\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password_confirmation\\\" required [(ngModel)]=\\\"resetPasswordLeader.password_confirmation\\\" placeholder=\\\"Passwort bestätigen\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"leaderResetPassword.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Passwort ändern</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form #adminResetPassword=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"resetAdminPassword(adminResetPassword)\\\" [hidden]=\\\"formType != 'admin'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Admins</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" [(ngModel)]=\\\"resetPasswordAdmin.email\\\" name=\\\"email\\\" placeholder=\\\"E-Mail\\\" required type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password\\\" required [(ngModel)]=\\\"resetPasswordAdmin.password\\\" placeholder=\\\"Passwort\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input color=\\\"text\\\" minlength=\\\"8\\\" name=\\\"password_confirmation\\\" required [(ngModel)]=\\\"resetPasswordAdmin.password_confirmation\\\" placeholder=\\\"Passwort bestätigen\\\" type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"adminResetPassword.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Passwort ändern</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}
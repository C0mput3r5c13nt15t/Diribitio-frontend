{"version":3,"sources":["webpack:///src/app/log-in/leader-generation/leader-generation.page.html","webpack:///src/app/log-in/leader-generation/leader-generation.module.ts","webpack:///src/app/log-in/leader-generation/leader-generation.page.ts"],"names":["routes","path","component","LeaderGenerationPage","alertCtrl","leadersService","config","subscriptions","signUpData","user_name","email","password","password_confirmation","projectNoun","this","app_config","project_noun","eventName","event_name","text","get_content","forEach","sub","unsubscribe","form","signUpLeader","create","header","message","buttons","role","then","alertEl","present","SignUpAsLeader","LeaderGenerationPageModule","forChild"],"mappings":"6QAeM,6BACE,uBACE,QACF,OACF,Q,oBAFI,8BCRV,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCDG,M,MAAMC,EAkBX,YAAoBC,EACAC,EACAC,GAFA,KAAAF,YACA,KAAAC,iBACA,KAAAC,SAnBZ,KAAAC,cAAgC,GAExC,KAAAC,WAAkB,CAChBC,UAAW,GACXC,MAAO,GACPC,SAAU,GACVC,sBAAuB,IAKzB,KAAAC,YAAcC,KAAKR,OAAOS,WAAWC,aAIrC,KAAAC,UAAYH,KAAKR,OAAOS,WAAWG,WAMnC,WACEJ,KAAKK,KAAOL,KAAKR,OAAOc,YAAY,qBAMtC,cACEN,KAAKP,cAAcc,QAAQC,GAAOA,EAAIC,eAGxC,eAAeC,GACTV,KAAKN,WAAWG,WAAaG,KAAKN,WAAWI,sBAC/CE,KAAKT,eAAeoB,aAAaX,KAAKN,WAAYgB,GAElDV,KAAKV,UAAUsB,OAAO,CACpBC,OAAQ,SACRC,QAAS,wEACTC,QAAS,CAAC,CACRV,KAAM,KACNW,KAAM,aAELC,KAAKC,IACNA,EAAQC,a,6CA7CL9B,GAAoB,gC,uBAApBA,EAAoB,4iC,eFXjC,qBACE,wBACE,uBACE,4BACF,OACA,oBAAW,QAAwC,OACrD,OACF,OAEA,wBACE,mBAAmD,0DAAY,EAAA+B,eAAA,KAC7D,qBACE,6BACE,4BAA0B,SAAyC,OACrE,OACA,oCAKA,8BACE,oBACE,sBACE,uBAA4B,mEAA6H,OAC3J,OACA,sBACE,wBAAwB,+DAAsG,OAChI,OACA,sBACE,wBAA2B,kEAA6G,OAC1I,OACA,sBACE,wBAAwC,+EAAqI,OAC/K,OACF,OACA,kBACE,yBAAmI,wBAAY,OACjJ,OACF,OACF,OACF,OACF,O,wBAtCyC,wDAE1B,yDAQmB,0DAEV,4BAQgB,+CAGJ,2CAGG,8CAGa,2DAIF,qC,mIEzB3C,KDcA,Y,MAAMC,G,8BAAAA,I,oDAAAA,IAA0B,SAR5B,CACP,IACA,IACA,IACA,IAAaC,SAASpC,O,GAInB","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/Anmeldung\"></ion-back-button>\n    </ion-button>\n    <ion-title>Als {{ projectNoun }}leiter registrieren</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <form #signUpLeaderForm=\"ngForm\" name=\"LeaderForm\" (ngSubmit)=\"SignUpAsLeader(signUpLeaderForm)\" class=\"content\">\n    <ion-card color=\"background\">\n      <ion-card-header color=\"background\">\n        <ion-card-title text-wrap>{{ projectNoun }}leiter-Account erstellen</ion-card-title>\n      </ion-card-header>\n      <ion-card-content *ngIf=\"text\" color=\"background\">\n        <ion-label color=\"text\">\n          {{ text }}\n        </ion-label>\n      </ion-card-content>\n      <ion-card-content color=\"background\">\n        <ion-list>\n          <ion-item color=\"items\">\n            <ion-input name=\"user_name\" [(ngModel)]=\"signUpData.user_name\" required minlength=\"5\" maxlength=\"50\" type=\"text\" placeholder=\"Benutzername\" color=\"text\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-input name=\"email\" [(ngModel)]=\"signUpData.email\" required maxlength=\"50\" type=\"email\" placeholder=\"E-Mail\" color=\"text\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-input name=\"password\" [(ngModel)]=\"signUpData.password\" required minlength=\"8\" type=\"password\" placeholder=\"Passwort\" color=\"text\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-input name=\"password_confirmation\" [(ngModel)]=\"signUpData.password_confirmation\" required minlength=\"8\" type=\"password\" placeholder=\"Passwort bestätigen\" color=\"text\"></ion-input>\n          </ion-item>\n        </ion-list>\n        <div class=\"ion-padding\">\n          <ion-button name=\"submit\" type=\"submit\" [disabled]=\"signUpLeaderForm.invalid\"  class=\"ion-no-margin\" expand=\"block\"color=\"buttons\">Registrieren</ion-button>\n        </div>\n      </ion-card-content>\n    </ion-card>\n  </form>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaderGenerationPage } from './leader-generation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaderGenerationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LeaderGenerationPage]\n})\nexport class LeaderGenerationPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { LeadersService } from 'src/app/services/leaders.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-leader-generation',\n  templateUrl: './leader-generation.page.html',\n  styleUrls: ['./leader-generation.page.scss'],\n})\nexport class LeaderGenerationPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  signUpData: any = {\n    user_name: '',\n    email: '',\n    password: '',\n    password_confirmation: ''\n  };\n\n  text: string;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private alertCtrl: AlertController,\n              private leadersService: LeadersService,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('leader-generation');\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  SignUpAsLeader(form) {\n    if (this.signUpData.password === this.signUpData.password_confirmation) {\n      this.leadersService.signUpLeader(this.signUpData, form);\n    } else {\n      this.alertCtrl.create({\n        header: 'Fehler',\n        message: 'Das bestätigte Passwort entspricht nicht dem anfangs eingegebenen!',\n        buttons: [{\n          text: 'Ok',\n          role: 'cancel',\n          }]\n        }).then(alertEl => {\n          alertEl.present();\n        });\n    }\n  }\n\n}\n"]}
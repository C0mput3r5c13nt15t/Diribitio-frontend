{"version":3,"sources":["webpack:///src/app/log-in/user-page/project-administration/project-administration.page.html","webpack:///src/app/log-in/user-page/project-administration/project-administration.module.ts","webpack:///src/app/log-in/user-page/project-administration/project-administration.page.scss","webpack:///src/app/log-in/user-page/project-administration/project-administration.page.ts"],"names":["routes","path","component","ProjectAdministrationPageModule","imports","forChild","declarations","ProjectAdministrationPage","activatedRoute","router","projectsService","scheduleService","participantsService","config","loadedUser","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","leadedProject","authorized","editable","title","image","descr","leader_name","leader_type","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","assistant_student_leaders","schedule","begin","control","registration","sort_students","exchange","projects","end","imageUrl","backend_config","projectNoun","app_config","project_noun","eventName","event_name","studentNoProjectEditByAssistants","get_error","studentLoadingProject","studentWrongTime","currentDate","Date","paramMap","subscribe","has","navigate","participantUrl","get","getSchedule","data","getProject","getStudent","getSelfLeadedProject","getSelfParticipant","selector","template"],"mappings":"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","file":"log-in-user-page-project-administration-project-administration-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar color=\\\"menu\\\">\\n      <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n        <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Schüler/{{ participantUrl }}\\\"></ion-back-button>\\n      </ion-button>\\n      <ion-title>{{ projectNoun }}</ion-title>\\n      <ion-button color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">\\n        <ion-icon name=\\\"create\\\"></ion-icon>\\n      </ion-button>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content color=\\\"background\\\">\\n    <ion-card color=\\\"background\\\" *ngIf=\\\"leadedProject.leader_id == null && leadedProject.title == null && leadedProject.authorized == null\\\" class=\\\"content\\\">\\n      <ion-card-content>\\n        <ion-text color=\\\"danger\\\">{{ studentLoadingProject }}</ion-text>\\n      </ion-card-content>\\n    </ion-card>\\n    <ion-card color=\\\"background\\\" *ngIf=\\\"loadedUser.role === 2\\\" class=\\\"content\\\">\\n      <ion-img *ngIf=\\\"leadedProject.image != '' && leadedProject.image != null\\\" src='{{ imageUrl }}{{ leadedProject.image }}'></ion-img>\\n      <ion-card-header>\\n        <ion-title>\\n          <h1>{{ leadedProject.title }}</h1>\\n        </ion-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <ion-item-group>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-text color=\\\"text\\\">{{ leadedProject.descr }}</ion-text>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Leiter</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">{{ leadedProject.leader_name }}</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Kosten</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">{{ leadedProject.cost }}€</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Zeitraum</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">1.Tag:  {{ leadedProject.first_day_begin }} bis {{ leadedProject.first_day_end }}</ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">2.Tag:  {{ leadedProject.second_day_begin }} bis {{ leadedProject.second_day_end }}</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">{{ leadedProject.min_grade }}. bis {{ leadedProject.max_grade }}.Klasse</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Teinehmeranzahl</ion-label>\\n          </ion-item-divider>\\n          <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n            <ion-label color=\\\"text\\\">von {{ leadedProject.min_participants }} bis {{ leadedProject.max_participants }}</ion-label>\\n          </ion-item>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Nachrichten</ion-label>\\n          </ion-item-divider>\\n          <div *ngIf=\\\"leadedProject.messages.length\\\">\\n            <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let message of leadedProject.messages\\\">\\n              <ion-card color=\\\"background\\\">\\n                <ion-card-content>\\n                  <ion-text color=\\\"text\\\">{{ message.message }}</ion-text>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item>\\n          </div>\\n          <ion-item-divider color=\\\"background\\\">\\n            <ion-label color=\\\"text\\\">Teilnehmer</ion-label>\\n          </ion-item-divider>\\n          <div *ngIf=\\\"leadedProject.leader_type === 'App\\\\\\\\Student' && leadedProject.leader_id == loadedUser.id\\\">\\n            <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n              <ion-card color=\\\"background\\\">\\n                <ion-card-content>\\n                  <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ loadedUser.first_name }} {{ loadedUser.last_name }} {{ loadedUser.grade }}{{ loadedUser.letter }} (eigener Account)</ion-text>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"leadedProject.assistant_student_leaders.length\\\">\\n            <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let assistant of leadedProject.assistant_student_leaders\\\">\\n              <ion-card color=\\\"background\\\">\\n                <ion-card-content>\\n                  <ion-text color=\\\"text\\\"><ion-icon name=\\\"star-half\\\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"leadedProject.participants.length\\\">\\n            <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let participant of leadedProject.participants\\\">\\n              <ion-card color=\\\"background\\\">\\n                <ion-card-content>\\n                  <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n                </ion-card-content>\\n              </ion-card>\\n            </ion-item>\\n          </div>\\n          <div class=\\\"ion-padding\\\">\\n            <ion-button color=\\\"buttons\\\" *ngIf=\\\"!!+leadedProject.editable == false || currentDate <= this.schedule.control || currentDate > this.schedule.registration\\\" [disabled]=\\\"leadedProject.leader_id != loadedUser.id || currentDate <= this.schedule.begin || currentDate > this.schedule.control\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\"  color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">{{ projectNoun }} bearbeiten</ion-button>\\n            <ion-button color=\\\"buttons\\\" *ngIf=\\\"leadedProject.leader_id == loadedUser.id && currentDate > this.schedule.control && currentDate <= this.schedule.registration && !!+leadedProject.editable == true\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\"  color=\\\"buttons\\\" routerLink='./{{ projectNoun }} bearbeiten' slot=\\\"end\\\">{{ projectNoun }} nachbessern</ion-button>\\n            <ion-text *ngIf=\\\"leadedProject.leader_id != loadedUser.id\\\" color=\\\"text\\\">{{ studentNoProjectEditByAssistants }}</ion-text>\\n            <ion-text *ngIf=\\\"currentDate <= this.schedule.begin && !!+leadedProject.editable == false || currentDate > this.schedule.control && !!+leadedProject.editable == false\\\" color=\\\"text\\\">{{ studentWrongTime }}</ion-text>\\n          </div>\\n        </ion-item-group>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectAdministrationPage } from './project-administration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectAdministrationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProjectAdministrationPage]\n})\nexport class ProjectAdministrationPageModule {}\n","export default \"img {\\n  width: auto;\\n  margin: 10px auto auto auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9nLWluL3VzZXItcGFnZS9wcm9qZWN0LWFkbWluaXN0cmF0aW9uL3Byb2plY3QtYWRtaW5pc3RyYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLDJCQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9sb2ctaW4vdXNlci1wYWdlL3Byb2plY3QtYWRtaW5pc3RyYXRpb24vcHJvamVjdC1hZG1pbmlzdHJhdGlvbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcge1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBtYXJnaW46IDEwcHggYXV0byBhdXRvIGF1dG87XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ParticipantsService } from 'src/app/participants.service';\nimport { ProjectsService } from 'src/app/projects.service';\nimport { Projekt } from 'src/assets/models/Projekt.model';\nimport { Schüler } from 'src/assets/models/Schüler.model';\nimport { ConfigService } from 'src/app/config.service';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { ScheduleService } from 'src/app/schedule.service';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-project-administration',\n  templateUrl: './project-administration.page.html',\n  styleUrls: ['./project-administration.page.scss'],\n})\nexport class ProjectAdministrationPage implements OnInit {\n  participantUrl: string;\n\n  loadedUser: Schüler = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 2\n  };\n\n  leadedProject: Projekt = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_type: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: [],\n    assistant_student_leaders: []\n  };\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n  currentDate: any;\n\n  studentNoProjectEditByAssistants: string;\n  studentLoadingProject: string;\n  studentWrongTime: string;\n\n  imageUrl = this.config.backend_config.imageUrl;\n  projectNoun = this.config.app_config.project_noun;\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private scheduleService: ScheduleService,\n              private participantsService: ParticipantsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.projectNoun = this.config.app_config.project_noun;\n\n    this.studentNoProjectEditByAssistants = this.config.get_error('student-no_project_edit_by_assistants');\n    this.studentLoadingProject = this.config.get_error('student-loading_project');\n    this.studentWrongTime = this.config.get_error('student-wrong_time');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.participantUrl = paramMap.get('ParticipantName');\n    });\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getProject();\n    this.getStudent();\n  }\n\n  getProject() {\n    this.projectsService.getSelfLeadedProject('students').subscribe(data => {\n      this.leadedProject = data.data;\n    });\n  }\n\n  getStudent() {\n    this.participantsService.getSelfParticipant().subscribe(data => {\n      this.loadedUser = data.data;\n    });\n  }\n\n}\n"]}
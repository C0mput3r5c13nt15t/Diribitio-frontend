{"version":3,"sources":["webpack:///src/app/log-in/student-generation/student-generation.page.html","webpack:///src/app/log-in/student-generation/student-generation.module.ts","webpack:///src/app/log-in/student-generation/student-generation.page.ts"],"names":["StudentGenerationPage","StudentGenerationPageModule","routes","path","component","alertCtrl","studentsService","config","subscriptions","signUpData","user_name","email","password","password_confirmation","text","this","get_content","eventName","app_config","event_name","forEach","sub","unsubscribe","form","signUpStudent","create","header","message","buttons","role","then","alertEl","present","signUpAsStudent","forChild"],"mappings":"giBAeM,2BACE,uBACE,QACF,OACF,Q,kBAFI,8BCRV,ICEaA,EDcAC,EAhBPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCDSJ,EAAN,WAiBL,WAAoBK,EACAC,EACAC,aAFA,KAAAF,YACA,KAAAC,kBACA,KAAAC,SAlBZ,KAAAC,cAAgC,GAExC,KAAAC,WAAkB,CAChBC,UAAW,GACXC,MAAO,GACPC,SAAU,GACVC,sBAAuB,IAGzB,KAAAC,KAAOC,KAAKR,OAAOS,YAAY,sBAK/B,KAAAC,UAAYF,KAAKR,OAAOW,WAAWC,W,UAf9B,O,EAAA,G,EAAA,yEA4BHJ,KAAKP,cAAcY,QAAQC,YAAG,OAAIA,EAAIC,kBA5BnC,sCA+BWC,GACVR,KAAKN,WAAWG,WAAaG,KAAKN,WAAWI,sBAC/CE,KAAKT,gBAAgBkB,cAAcT,KAAKN,WAAYc,GAEpDR,KAAKV,UAAUoB,OAAO,CACpBC,OAAQ,SACRC,QAAS,wEACTC,QAAS,CAAC,CACRd,KAAM,KACNe,KAAM,aAELC,KAAKC,YACNA,EAAQC,iB,2BA3CX,K,sCAAMhC,GAAqB,gC,uBAArBA,EAAqB,yhC,aFXlC,qBACE,wBACE,uBACE,4BACF,OACA,oBAAW,sCAAwB,OACrC,OACF,OAEA,wBACE,mBAAoD,wDAAY,EAAAiC,gBAAA,KAC9D,qBACE,2BACE,4BAA2B,wCAAyB,OACtD,OACA,oCAKA,4BACE,oBACE,sBACE,uBAA4B,mEAA6H,OAC3J,OACA,sBACE,wBAAwB,+DAAsG,OAChI,OACA,sBACE,wBAA2B,kEAA6G,OAC1I,OACA,sBACE,wBAAwC,+EAAqI,OAC/K,OACF,OACA,kBACE,yBAAoI,wBAAY,OAClJ,OACF,OACF,OACF,OACF,O,sBAtCyC,wDAYjB,6BAQgB,+CAGJ,2CAGG,8CAGa,2DAIF,qC,qICX3C,IAAMhC,EAAN,yB,qBAAMA,I,oDAAAA,IAA2B,SAR7B,CACP,IACA,IACA,IACA,IAAaiC,SAAShC,O","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/Anmeldung\"></ion-back-button>\n    </ion-button>\n    <ion-title>Als Sch체ler registrieren</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <form #signUpStudentForm=\"ngForm\" name=\"LeaderForm\" (ngSubmit)=\"signUpAsStudent(signUpStudentForm)\" class=\"content\">\n    <ion-card color=\"background\">\n      <ion-card-header>\n        <ion-card-title text-wrap >Sch체ler-Account erstellen</ion-card-title>\n      </ion-card-header>\n      <ion-card-content *ngIf=\"text\">\n        <ion-label color=\"text\">\n          {{ text }}\n        </ion-label>\n      </ion-card-content>\n      <ion-card-content>\n        <ion-list>\n          <ion-item color=\"items\">\n            <ion-input name=\"user_name\" [(ngModel)]=\"signUpData.user_name\" required minlength=\"5\" maxlength=\"50\" type=\"text\" placeholder=\"Benutzername\" color=\"text\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-input name=\"email\" [(ngModel)]=\"signUpData.email\" required maxlength=\"50\" type=\"email\" placeholder=\"E-Mail\" color=\"text\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-input name=\"password\" [(ngModel)]=\"signUpData.password\" required minlength=\"8\" type=\"password\" placeholder=\"Passwort\" color=\"text\"></ion-input>\n          </ion-item>\n          <ion-item color=\"items\">\n            <ion-input name=\"password_confirmation\" [(ngModel)]=\"signUpData.password_confirmation\" required minlength=\"8\" type=\"password\" placeholder=\"Passwort best채tigen\" color=\"text\"></ion-input>\n          </ion-item>\n        </ion-list>\n        <div class=\"ion-padding\">\n          <ion-button name=\"submit\" type=\"submit\" [disabled]=\"signUpStudentForm.invalid\"  class=\"ion-no-margin\" expand=\"block\"color=\"buttons\">Registrieren</ion-button>\n        </div>\n      </ion-card-content>\n    </ion-card>\n  </form>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StudentGenerationPage } from './student-generation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentGenerationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [StudentGenerationPage]\n})\nexport class StudentGenerationPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-student-generation',\n  templateUrl: './student-generation.page.html',\n  styleUrls: ['./student-generation.page.scss'],\n})\nexport class StudentGenerationPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  signUpData: any = {\n    user_name: '',\n    email: '',\n    password: '',\n    password_confirmation: '',\n  };\n\n  text = this.config.get_content('student-generation');\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private alertCtrl: AlertController,\n              private studentsService: StudentsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  signUpAsStudent(form) {\n    if (this.signUpData.password === this.signUpData.password_confirmation) {\n      this.studentsService.signUpStudent(this.signUpData, form);\n    } else {\n      this.alertCtrl.create({\n        header: 'Fehler',\n        message: 'Das best채tigte Passwort entspricht nicht dem anfangs eingegebenen!',\n        buttons: [{\n          text: 'Ok',\n          role: 'cancel',\n          }]\n        }).then(alertEl => {\n          alertEl.present();\n        });\n    }\n  }\n\n}\n"]}
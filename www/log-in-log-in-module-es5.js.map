{"version":3,"sources":["webpack:///src/app/log-in/log-in.page.html","webpack:///src/app/log-in/log-in.module.ts","webpack:///src/app/log-in/log-in.page.scss","webpack:///src/app/log-in/log-in.page.ts"],"names":["routes","path","component","LogInPageModule","imports","forChild","declarations","LogInPage","auth","router","participantsService","scheduleService","leadersService","adminsService","alert","config","formType","Student","email","password","Leader","Admin","tries","schedule","id","begin","control","registration","sort_students","exchange","projects","end","projectNoun","app_config","project_noun","eventName","event_name","currentDate","Date","getSchedule","subscribe","data","log_in_from_storage","keyCode","type","form","LogInStudent","LogInLeader","LogInAdmin","nextInput","setFocus","localStorage","getItem","jwt","check_jwt","userAuth","set_jwt","token","setLoggedIn","navigate","user_name","error","logInParticipant","reset","wrongPassword","logInLeader","logInAdmin","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAgBaC,eAAe;AAAA;AAAA,O;;AAAfA,qBAAe,6DAT3B,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,oBAAY,EAAE,CAAC,sDAAD;AAPN,OAAT,CAS2B,GAAfH,eAAe,CAAf;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCiBFI,SAAS;AAmCpB,2BAAoBC,IAApB,EACoBC,MADpB,EAEoBC,mBAFpB,EAGoBC,eAHpB,EAIoBC,cAJpB,EAKoBC,aALpB,EAMoBC,KANpB,EAOoBC,MAPpB,EAO2C;AAAA;;AAPvB,eAAAP,IAAA,GAAAA,IAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAzCpB,eAAAC,QAAA,GAAW,SAAX;AAEA,eAAAC,OAAA,GAAU;AACRC,iBAAK,EAAE,EADC;AAERC,oBAAQ,EAAE;AAFF,WAAV;AAKA,eAAAC,MAAA,GAAS;AACPF,iBAAK,EAAE,EADA;AAEPC,oBAAQ,EAAE;AAFH,WAAT;AAKA,eAAAE,KAAA,GAAQ;AACNH,iBAAK,EAAE,EADD;AAENC,oBAAQ,EAAE;AAFJ,WAAR;AAKA,eAAAG,KAAA,GAAQ,CAAR;AAEA,eAAAC,QAAA,GAAqB;AACnBC,cAAE,EAAE,CADe;AAEnBC,iBAAK,EAAE,IAFY;AAGnBC,mBAAO,EAAE,IAHU;AAInBC,wBAAY,EAAE,IAJK;AAKnBC,yBAAa,EAAE,IALI;AAMnBC,oBAAQ,EAAE,IANS;AAOnBC,oBAAQ,EAAE,IAPS;AAQnBC,eAAG,EAAE;AARc,WAArB;AAYA,eAAAC,WAAA,GAAc,KAAKjB,MAAL,CAAYkB,UAAZ,CAAuBC,YAArC;AACA,eAAAC,SAAA,GAAY,KAAKpB,MAAL,CAAYkB,UAAZ,CAAuBG,UAAnC;AAS6C;;AA1CzB;AAAA;AAAA,qCA4CT;AAAA;;AACT,iBAAKC,WAAL,GAAmB,mEAAW,IAAIC,IAAJ,EAAX,EAAuB,YAAvB,EAAqC,IAArC,CAAnB;AAEA,iBAAK3B,eAAL,CAAqB4B,WAArB,GAAmCC,SAAnC,CAA6C,UAAAC,IAAI,EAAI;AACnD,mBAAI,CAAClB,QAAL,GAAgBkB,IAAI,CAACA,IAArB;AACD,aAFD;AAGD;AAlDmB;AAAA;AAAA,6CAoDD;AACjB,iBAAKC,mBAAL;AACD;AAtDmB;AAAA;AAAA,uCAwDPC,OAxDO,EAwD0B;AAAA,gBAAxBC,IAAwB,uEAAlB,UAAkB;AAAA,gBAANC,IAAM;;AAC5C,gBAAIF,OAAO,KAAK,EAAhB,EAAoB;AAClB,kBAAIC,IAAI,KAAK,UAAb,EAAyB;AACvB,qBAAKE,YAAL,CAAkBD,IAAlB;AACD,eAFD,MAEO,IAAID,IAAI,KAAK,SAAb,EAAwB;AAC7B,qBAAKG,WAAL,CAAiBF,IAAjB;AACD,eAFM,MAEA,IAAID,IAAI,KAAK,QAAb,EAAuB;AAC5B,qBAAKI,UAAL,CAAgBH,IAAhB;AACD;AACF;AACF;AAlEmB;AAAA;AAAA,oCAoEVF,OApEU,EAoEDM,UApEC,EAoEU;AAC5B,gBAAIN,OAAO,KAAK,EAAhB,EAAoB;AAClBM,wBAAS,CAACC,QAAV;AACD;AACF;AAxEmB;AAAA;AAAA,gDA0EE;AAAA;;AACpB,gBAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,kBAAMC,GAAG,GAAGF,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACA,mBAAK5C,IAAL,CAAU8C,SAAV,CAAoBD,GAApB,EAAyBb,SAAzB,CAAmC,UAAAC,IAAI,EAAI;AACzC,oBAAMc,QAAQ,GAAGd,IAAI,CAACjC,IAAtB;;AAEA,sBAAI,CAACA,IAAL,CAAUgD,OAAV,CAAkBf,IAAI,CAACgB,KAAvB;;AACA,sBAAI,CAACjD,IAAL,CAAUkD,WAAV,CAAsB,IAAtB;;AAEA,oBAAIH,QAAQ,KAAK,QAAjB,EAA2B;AACzB,wBAAI,CAAC9C,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,MAAI,CAACxB,SAAL,GAAiB,SAAjB,GAA6BM,IAAI,CAACmB,SAAnC,CAArB;AACD,iBAFD,MAEO,IAAIL,QAAQ,KAAK,SAAjB,EAA4B;AACjC,wBAAI,CAAC9C,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,MAAI,CAACxB,SAAL,GAAiB,GAAjB,GAAuB,MAAI,CAACH,WAA5B,GAA0C,SAA1C,GAAsDS,IAAI,CAACmB,SAA5D,CAArB;AACD,iBAFM,MAEA,IAAIL,QAAQ,KAAK,UAAjB,EAA6B;AAClC,wBAAI,CAAC9C,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,MAAI,CAACxB,SAAL,GAAiB,WAAjB,GAA+BM,IAAI,CAACmB,SAArC,CAArB;AACD;AACF,eAbD,EAaG,UAACC,KAAD,EAAW;AACZ,sBAAI,CAAC/C,KAAL,CAAW+C,KAAX,CAAiB,qCAAjB,EAAwDA,KAAxD;;AACA,sBAAI,CAACrD,IAAL,CAAUkD,WAAV,CAAsB,KAAtB;AACD,eAhBD;AAiBD;AACF;AA/FmB;AAAA;AAAA,uCAiGPb,IAjGO,EAiGD;AAAA;;AACjB,iBAAKnC,mBAAL,CAAyBoD,gBAAzB,CAA0C,KAAK7C,OAA/C,EAAwDuB,SAAxD,CAAkE,UAAAC,IAAI,EAAI;AACxE,kBAAIA,IAAI,CAACgB,KAAT,EAAgB;AACd,sBAAI,CAACjD,IAAL,CAAUgD,OAAV,CAAkBf,IAAI,CAACgB,KAAvB;;AACA,sBAAI,CAAChD,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,MAAI,CAACxB,SAAL,GAAiB,WAAjB,GAA+BM,IAAI,CAACmB,SAArC,CAArB;;AACA,sBAAI,CAACpD,IAAL,CAAUkD,WAAV,CAAsB,IAAtB;;AACAb,oBAAI,CAACkB,KAAL;AACD;AACF,aAPD,EAOG,UAAAF,KAAK,EAAI;AACV,oBAAI,CAAC/C,KAAL,CAAW+C,KAAX,CAAiB,2BAAjB,EAA8CA,KAAK,CAACA,KAApD;;AACA,oBAAI,CAACG,aAAL;AACD,aAVD;AAWD;AA7GmB;AAAA;AAAA,sCA+GRnB,IA/GQ,EA+GF;AAAA;;AAChB,iBAAKjC,cAAL,CAAoBqD,WAApB,CAAgC,KAAK7C,MAArC,EAA6CoB,SAA7C,CAAuD,UAAAC,IAAI,EAAI;AAC7D,kBAAIA,IAAI,CAACgB,KAAT,EAAgB;AACd,sBAAI,CAACjD,IAAL,CAAUgD,OAAV,CAAkBf,IAAI,CAACgB,KAAvB;;AACA,sBAAI,CAAChD,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,MAAI,CAACxB,SAAL,GAAiB,GAAjB,GAAuB,MAAI,CAACH,WAA5B,GAA0C,SAA1C,GAAsDS,IAAI,CAACmB,SAA5D,CAArB;;AACA,sBAAI,CAACpD,IAAL,CAAUkD,WAAV,CAAsB,IAAtB;;AACAb,oBAAI,CAACkB,KAAL;AACD;AACF,aAPD,EAOG,UAAAF,KAAK,EAAI;AACV,oBAAI,CAAC/C,KAAL,CAAW+C,KAAX,CAAiB,2BAAjB,EAA8CA,KAAK,CAACA,KAApD;;AACA,oBAAI,CAACG,aAAL;AACD,aAVD;AAWD;AA3HmB;AAAA;AAAA,qCA6HTnB,IA7HS,EA6HH;AAAA;;AACf,iBAAKhC,aAAL,CAAmBqD,UAAnB,CAA8B,KAAK7C,KAAnC,EAA0CmB,SAA1C,CAAoD,UAAAC,IAAI,EAAI;AAC1D,kBAAIA,IAAI,CAACgB,KAAT,EAAgB;AACd,sBAAI,CAACjD,IAAL,CAAUgD,OAAV,CAAkBf,IAAI,CAACgB,KAAvB;;AACA,sBAAI,CAAChD,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,MAAI,CAACxB,SAAL,GAAiB,SAAjB,GAA6BM,IAAI,CAACmB,SAAnC,CAArB;;AACA,sBAAI,CAACpD,IAAL,CAAUkD,WAAV,CAAsB,IAAtB;;AACAb,oBAAI,CAACkB,KAAL;AACD;AACF,aAPD,EAOG,UAAAF,KAAK,EAAI;AACV,oBAAI,CAAC/C,KAAL,CAAW+C,KAAX,CAAiB,2BAAjB,EAA8CA,KAAK,CAACA,KAApD;;AACA,oBAAI,CAACG,aAAL;AACD,aAVD;AAWD;AAzImB;AAAA;AAAA,0CA2IJ;AACd,iBAAK1C,KAAL,IAAc,CAAd;;AAEA,gBAAI,KAAKA,KAAL,IAAc,CAAlB,EAAqB;AACnB,mBAAKR,KAAL,CAAWkD,aAAX,CAAyB,KAAK1C,KAAL,GAAa,IAAtC,EAA4C,KAAKA,KAAjD;AACD;AACF;AAjJmB;;AAAA;AAAA,S;;;;gBAfb;;gBADA;;gBAEA;;gBAOA;;gBANA;;gBACA;;gBAGA;;gBACA;;;;AAQIf,eAAS,6DALrB,gEAAU;AACT4D,gBAAQ,EAAE,YADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,8FAFS;;;;AAAA,OAAV,CAKqB,GAAT7D,SAAS,CAAT","file":"log-in-log-in-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Anmeldung</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" [routerLink]=\\\"['../../Help']\\\"><ion-icon name=\\\"help-circle\\\"></ion-icon></ion-button>\\n  </ion-toolbar>\\n  <div data-ng-controller=\\\"myCtrl\\\" data-ng-init=\\\"log_in_from_storage()\\\"></div>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-title>\\n        Einloggen\\n      </ion-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-segment color=\\\"buttons\\\" [(ngModel)]=\\\"formType\\\">\\n        <ion-segment-button value=\\\"student\\\">\\n          <ion-label>Schüler</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"leader\\\">\\n          <ion-label>{{ projectNoun }}leiter</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"admin\\\">\\n          <ion-label>Admin</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n\\n      <form #studentLoginForm=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"LogInStudent(studentLoginForm)\\\" [hidden]=\\\"formType != 'student'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Schüler</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input name=\\\"email\\\" [(ngModel)]=\\\"Student.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextStudentField)\\\" placeholder=\\\"E-Mail\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input #nextStudentField name=\\\"password\\\" [(ngModel)]=\\\"Student.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"eventHandler($event.keyCode, 'students', studentLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n            <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\" [routerLink]=\\\"['./Schüler Registration']\\\" color=\\\"buttons\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"studentLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form #leaderLoginForm=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"LogInLeader(leaderLoginForm)\\\" [hidden]=\\\"formType != 'leader'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>{{ projectNoun }}leiter</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input name=\\\"email\\\" [(ngModel)]=\\\"Leader.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextLeaderField)\\\" placeholder=\\\"E-mail\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input #nextLeaderField name=\\\"password\\\" [(ngModel)]=\\\"Leader.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"eventHandler($event.keyCode, 'leaders', leaderLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n            <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\" routerLink='./{{ projectNoun}}leiter Registration' color=\\\"buttons\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"leaderLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form id=\\\"Formular\\\" #adminLoginForm=\\\"ngForm\\\" (ngSubmit)=\\\"LogInAdmin(adminLoginForm)\\\" [hidden]=\\\"formType != 'admin'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Admin</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n              <ion-list>\\n                <ion-item color=\\\"items\\\">\\n                  <ion-input name=\\\"email\\\" [(ngModel)]=\\\"Admin.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextAdminField)\\\" placeholder=\\\"E-mail\\\" color=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\">\\n                  <ion-input #nextAdminField name=\\\"password\\\" [(ngModel)]=\\\"Admin.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"eventHandler($event.keyCode, 'admins', adminLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n                </ion-item>\\n              </ion-list>\\n              <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n              <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.sort_students\\\" [routerLink]=\\\"['./Admin Registration']\\\" color=\\\"buttons\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n              <div class=\\\"ion-padding\\\">\\n                <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"adminLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n              </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LogInPage } from './log-in.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogInPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LogInPage]\n})\nexport class LogInPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi9sb2ctaW4ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\nimport { ParticipantsService } from '../participants.service';\nimport { LeadersService } from '../leaders.service';\nimport { AdminsService } from '../admins.service';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { formatDate } from '@angular/common';\nimport { AlertService } from '../alert.service';\nimport { ConfigService } from '../config.service';\nimport { ScheduleService } from '../schedule.service';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.page.html',\n  styleUrls: ['./log-in.page.scss'],\n})\nexport class LogInPage implements OnInit {\n  formType = 'student';\n\n  Student = {\n    email: '',\n    password: '',\n  };\n\n  Leader = {\n    email: '',\n    password: '',\n  };\n\n  Admin = {\n    email: '',\n    password: '',\n  };\n\n  tries = 0;\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n  currentDate: any;\n\n  projectNoun = this.config.app_config.project_noun;\n  eventName = this.config.app_config.event_name;\n\n  constructor(private auth: AuthenticationService,\n              private router: Router,\n              private participantsService: ParticipantsService,\n              private scheduleService: ScheduleService,\n              private leadersService: LeadersService,\n              private adminsService: AdminsService,\n              private alert: AlertService,\n              private config: ConfigService) {}\n\n  ngOnInit() {\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  ionViewWillEnter() {\n    this.log_in_from_storage();\n  }\n\n  eventHandler(keyCode, type= 'students', form) {\n    if (keyCode === 13) {\n      if (type === 'students') {\n        this.LogInStudent(form);\n      } else if (type === 'leaders') {\n        this.LogInLeader(form);\n      } else if (type === 'admins') {\n        this.LogInAdmin(form);\n      }\n    }\n  }\n\n  nextInput(keyCode, nextInput) {\n    if (keyCode === 13) {\n      nextInput.setFocus();\n    }\n  }\n\n  log_in_from_storage() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      this.auth.check_jwt(jwt).subscribe(data => {\n        const userAuth = data.auth;\n\n        this.auth.set_jwt(data.token);\n        this.auth.setLoggedIn(true);\n\n        if (userAuth === 'admins') {\n          this.router.navigate([this.eventName + '/Admin/' + data.user_name]);\n        } else if (userAuth === 'leaders') {\n          this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + data.user_name]);\n        } else if (userAuth === 'students') {\n          this.router.navigate([this.eventName + '/Schüler/' + data.user_name]);\n        }\n      }, (error) => {\n        this.alert.error('Die Sitzung ist bereits abgelaufen!', error);\n        this.auth.setLoggedIn(false);\n      });\n    }\n  }\n\n  LogInStudent(form) {\n    this.participantsService.logInParticipant(this.Student).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/Schüler/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInLeader(form) {\n    this.leadersService.logInLeader(this.Leader).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInAdmin(form) {\n    this.adminsService.logInAdmin(this.Admin).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/Admin/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  wrongPassword() {\n    this.tries += 1;\n\n    if (this.tries >= 5) {\n      this.alert.wrongPassword(this.tries * 3000, this.tries);\n    }\n  }\n\n}\n"]}
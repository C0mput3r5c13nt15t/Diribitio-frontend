{"version":3,"sources":["webpack:///src/app/log-in/log-in.page.ts","webpack:///src/app/log-in/log-in.page.scss","webpack:///src/app/log-in/log-in.page.html","webpack:///src/app/log-in/log-in.module.ts"],"names":["LogInPage","auth","router","studentsService","scheduleService","leadersService","adminsService","alert","config","subscriptions","formType","StudentCredentials","email","password","LeaderCredentials","AdminCredentials","tries","schedule","id","begin","Date","control","registration","sort_students","exchange","projects","end","projectNoun","app_config","project_noun","eventName","event_name","currentDate","getSchedule","push","update","subscribe","log_in_from_storage","forEach","sub","unsubscribe","data","keyCode","type","form","LogInStudent","LogInLeader","LogInAdmin","nextInput","setFocus","localStorage","getItem","jwt","check_jwt","userAuth","set_jwt","token","setLoggedIn","navigate","user_name","error","logInStudent","reset","wrongPassword","logInLeader","logInAdmin","selector","template","routes","path","component","LogInPageModule","imports","forChild","declarations"],"mappings":"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","file":"log-in-log-in-module-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { LeadersService } from 'src/app/services/leaders.service';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.page.html',\n  styleUrls: ['./log-in.page.scss'],\n})\nexport class LogInPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Conatins the which form should be shown on the log-in page\n   */\n  formType = 'student';\n\n  StudentCredentials = {\n    email: '',\n    password: '',\n  };\n\n  LeaderCredentials = {\n    email: '',\n    password: '',\n  };\n\n  AdminCredentials = {\n    email: '',\n    password: '',\n  };\n\n  /**\n   * Conatins the number of times a log-in has been tried\n   */\n  tries = 0;\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private auth: AuthenticationService,\n              private router: Router,\n              private studentsService: StudentsService,\n              private scheduleService: ScheduleService,\n              private leadersService: LeadersService,\n              private adminsService: AdminsService,\n              private alert: AlertService,\n              private config: ConfigService) {}\n\n  ngOnInit() {\n    this.currentDate = formatDate(new Date(2005, 8, 27), 'yyyy-MM-dd', 'en');\n\n    this.getSchedule();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule())\n    );\n  }\n\n  ionViewWillEnter() {\n    this.log_in_from_storage();\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  keyPressEventHandler(keyCode, type= 'students', form) {\n    if (keyCode === 13) {\n      if (type === 'students') {\n        this.LogInStudent(form);\n      } else if (type === 'leaders') {\n        this.LogInLeader(form);\n      } else if (type === 'admins') {\n        this.LogInAdmin(form);\n      }\n    }\n  }\n\n  /**\n   * Sets the focus on the given element if ENTER is pressed\n   * @param keyCode Contains the code of the pressed key\n   * @param nextInput Contains the next element to be focused\n   */\n  nextInput(keyCode, nextInput) {\n    if (keyCode === 13) {\n      nextInput.setFocus();\n    }\n  }\n\n  log_in_from_storage() {\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n      this.auth.check_jwt(jwt).subscribe(data => {\n        const userAuth = data.auth;\n\n        this.auth.set_jwt(data.token);\n        this.auth.setLoggedIn(true);\n\n        if (userAuth === 'admins') {\n          this.router.navigate([this.eventName + '/Admin/' + data.user_name]);\n        } else if (userAuth === 'leaders') {\n          this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + data.user_name]);\n        } else if (userAuth === 'students') {\n          this.router.navigate([this.eventName + '/Schüler/' + data.user_name]);\n        }\n      }, (error) => {\n        this.alert.error('Die Sitzung ist bereits abgelaufen!', error);\n        this.auth.setLoggedIn(false);\n      });\n    }\n  }\n\n  LogInStudent(form) {\n    this.studentsService.logInStudent(this.StudentCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/Schüler/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInLeader(form) {\n    this.leadersService.logInLeader(this.LeaderCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/' + this.projectNoun + 'leiter/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  LogInAdmin(form) {\n    this.adminsService.logInAdmin(this.AdminCredentials).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.router.navigate([this.eventName + '/Admin/' + data.user_name]);\n        this.auth.setLoggedIn(true);\n        form.reset();\n      }\n    }, error => {\n      this.alert.error('Anmeldung fehlgeschlagen!', error.error);\n      this.wrongPassword();\n    });\n  }\n\n  wrongPassword() {\n    this.tries += 1;\n\n    if (this.tries >= 5) {\n      this.alert.wrongPassword(this.tries * 3000, this.tries);\n    }\n  }\n\n}\n","export default \".centerd_label {\\n  display: block;\\n  width: 100%;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGxvZy1pbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBQ0oiLCJmaWxlIjoibG9nLWluLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZW50ZXJkX2xhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Anmeldung</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" [routerLink]=\\\"['../../Help']\\\"><ion-icon name=\\\"help-circle\\\"></ion-icon></ion-button>\\n  </ion-toolbar>\\n  <div data-ng-controller=\\\"myCtrl\\\" data-ng-init=\\\"log_in_from_storage()\\\"></div>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\" class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>Einloggen</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-segment color=\\\"buttons\\\" [(ngModel)]=\\\"formType\\\">\\n        <ion-segment-button value=\\\"student\\\">\\n          <ion-label>Schüler</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"leader\\\">\\n          <ion-label>{{ projectNoun }}leiter</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"admin\\\">\\n          <ion-label>Admin</ion-label>\\n        </ion-segment-button>\\n      </ion-segment>\\n\\n      <form #studentLoginForm=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"LogInStudent(studentLoginForm)\\\" [hidden]=\\\"formType != 'student'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Schüler</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input name=\\\"email\\\" [(ngModel)]=\\\"StudentCredentials.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextStudentField)\\\" placeholder=\\\"E-Mail\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input #nextStudentField name=\\\"password\\\" [(ngModel)]=\\\"StudentCredentials.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"keyPressEventHandler($event.keyCode, 'students', studentLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"studentLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n            </div>\\n            <ion-label class=\\\"centerd_label\\\" color=\\\"text\\\">oder</ion-label>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\" [routerLink]=\\\"['./Schüler Registration']\\\" color=\\\"buttons\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form #leaderLoginForm=\\\"ngForm\\\" name=\\\"LogInForm\\\" (ngSubmit)=\\\"LogInLeader(leaderLoginForm)\\\" [hidden]=\\\"formType != 'leader'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>{{ projectNoun }}leiter</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input name=\\\"email\\\" [(ngModel)]=\\\"LeaderCredentials.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextLeaderField)\\\" placeholder=\\\"E-Mail\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\">\\n                <ion-input #nextLeaderField name=\\\"password\\\" [(ngModel)]=\\\"LeaderCredentials.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"keyPressEventHandler($event.keyCode, 'leaders', leaderLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n              </ion-item>\\n            </ion-list>\\n            <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"leaderLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n            </div>\\n            <ion-label class=\\\"centerd_label\\\" color=\\\"text\\\">oder</ion-label>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control\\\" routerLink='./{{ projectNoun}}leiter Registration' color=\\\"buttons\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n            </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n\\n      <form id=\\\"Formular\\\" #adminLoginForm=\\\"ngForm\\\" (ngSubmit)=\\\"LogInAdmin(adminLoginForm)\\\" [hidden]=\\\"formType != 'admin'\\\" class=\\\"content\\\">\\n        <ion-card color=\\\"background\\\">\\n          <ion-card-header>\\n            <ion-card-title>Admin</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n              <ion-list>\\n                <ion-item color=\\\"items\\\">\\n                  <ion-input name=\\\"email\\\" [(ngModel)]=\\\"AdminCredentials.email\\\" required type=\\\"email\\\" (keypress)=\\\"nextInput($event.keyCode, nextAdminField)\\\" placeholder=\\\"E-Mail\\\" color=\\\"text\\\"></ion-input>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\">\\n                  <ion-input #nextAdminField name=\\\"password\\\" [(ngModel)]=\\\"AdminCredentials.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" (keypress)=\\\"keyPressEventHandler($event.keyCode, 'admins', adminLoginForm)\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n                </ion-item>\\n              </ion-list>\\n              <a [routerLink]=\\\"['./Passwort vergessen']\\\">Passwort vergessen?</a><br>\\n              <div class=\\\"ion-padding\\\">\\n                <ion-button name=\\\"login\\\" type=\\\"submit\\\" [disabled]=\\\"adminLoginForm.invalid\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\" color=\\\"buttons\\\">Anmelden</ion-button>\\n              </div>\\n              <ion-label class=\\\"centerd_label\\\" color=\\\"text\\\">oder</ion-label>\\n              <div class=\\\"ion-padding\\\">\\n                <ion-button *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.sort_students\\\" [routerLink]=\\\"['./Admin Registration']\\\" color=\\\"buttons\\\" class=\\\"ion-no-margin\\\" expand=\\\"block\\\"><ion-icon name=\\\"add-circle-outline\\\" slot=\\\"start\\\"></ion-icon> Account erstellen</ion-button>\\n              </div>\\n          </ion-card-content>\\n        </ion-card>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LogInPage } from './log-in.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LogInPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LogInPage]\n})\nexport class LogInPageModule {}\n"]}
{"version":3,"sources":["./src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.html","./src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.ts","./src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.module.ts","./src/app/log-in/admin-page/admin-students-leaders/admin-students-leaders.page.scss"],"names":[],"mappings":"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","file":"log-in-admin-page-admin-students-leaders-admin-students-leaders-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Admin/{{ adminUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Schüler und {{ projectNoun }}leiter verwalten</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>Schüler</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text1\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text1 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n        <ion-button slot=\\\"start\\\" color=\\\"buttons\\\" (click)=\\\"refresh()\\\"><ion-icon color=\\\"text\\\" name=\\\"refresh\\\"></ion-icon></ion-button>\\n        <ion-button slot=\\\"start\\\" color=\\\"buttons\\\" (click)=\\\"search()\\\"><ion-icon color=\\\"text\\\" name=\\\"search\\\"></ion-icon></ion-button>\\n        <ion-input color=\\\"text\\\" (keypress)=\\\"eventHandler($event.keyCode)\\\" placeholder=\\\"Vorname Nachname Klasse\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchValue\\\" name=\\\"Serch\\\"></ion-input>\\n      </ion-item>\\n    </ion-card-content>\\n    <ion-card-content color=\\\"background\\\">\\n      <ion-grid *ngIf=\\\"searchStudents\\\">\\n        <ion-row>\\n          <ion-col><h2>Schüler</h2></ion-col>\\n          <ion-col><h2>Wünsche</h2></ion-col>\\n          <ion-col><h2>Freunde</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"background\\\" *ngFor=\\\"let participant of searchStudents\\\" id=\\\"participant.ID\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}\\n            </ion-label>\\n            <ion-label color=\\\"text\\\" *ngIf=\\\"participant.role == 2\\\">(Leiter)</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_wish_title }}<br>\\n              {{ participant.second_wish_title }}<br>\\n              {{ participant.third_wish_title }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col color=\\\"text\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_friend_name }}<br>\\n              {{ participant.second_friend_name }}<br>\\n              {{ participant.third_friend_name }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a *ngIf=\\\"participant.project_id != 0 && participant.project_title != 'fehlerhaftes Projekt'\\\" routerLink='../../{{ projectsNoun }}/{{participant.project_id}}'>{{ participant.project_title }}</a>\\n            <a *ngIf=\\\"participant.project_id == 0\\\">kein {{ projectNoun }}</a>\\n            <a *ngIf=\\\"participant.project_title == 'fehlerhaftes Projekt'\\\">{{ projectNoun }} ist fehlerhaft</a>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n      <ion-grid *ngIf=\\\"!searchStudents\\\">\\n        <ion-row>\\n          <ion-col><h2>Schüler</h2></ion-col>\\n          <ion-col><h2>Wünsche</h2></ion-col>\\n          <ion-col><h2>Freunde</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"background\\\" *ngFor=\\\"let participant of loadedStudents\\\" id=\\\"participant.ID\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}\\n            </ion-label>\\n            <ion-label color=\\\"text\\\" *ngIf=\\\"participant.role == 2\\\"> ({{ projectNoun }}leiter)</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_wish_title }}<br>\\n              {{ participant.second_wish_title }}<br>\\n              {{ participant.third_wish_title }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col color=\\\"text\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ participant.first_friend_name }}<br>\\n              {{ participant.second_friend_name }}<br>\\n              {{ participant.third_friend_name }}\\n            </ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a *ngIf=\\\"participant.project_id != 0 && participant.project_title != 'fehlerhaftes Projekt'\\\" routerLink='../../{{ projectsNoun }}/{{participant.project_id}}'>{{ participant.project_title }}</a>\\n            <a *ngIf=\\\"participant.project_id == 0\\\">kein {{ projectNoun }}</a>\\n            <a *ngIf=\\\"participant.project_title == 'fehlerhaftes Projekt'\\\">{{ projectNoun }} ist fehlerhaft</a>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <div *ngIf=\\\"page < lastPage && !searchStudents\\\" class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" (click)=\\\"getMoreStudents()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\">Weiter Schüler laden</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        {{ projectNoun }}leiter\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text2\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text2 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col><h2>{{ projectNoun }}leiter</h2></ion-col>\\n          <ion-col><h2>Link zum {{ projectNoun }}</h2></ion-col>\\n        </ion-row>\\n        <ion-row color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let leader of loadedLeaders\\\">\\n          <ion-col>\\n            <ion-label color=\\\"text\\\">{{ leader.user_name }}</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <a color=\\\"buttons\\\" *ngIf=\\\"leader.project_id != 0\\\" routerLink='../../{{ projectsNoun }}/{{ leader.project_id }}'>{{ leader.project_title }}</a>\\n            <ion-icon color=\\\"danger\\\" name=\\\"trash\\\" *ngIf=\\\"leader.project_id == 0\\\" (click)=\\\"deleteLeader(leader.id)\\\"></ion-icon>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n  \\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Schüler sortieren\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text3\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text3 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <div class=\\\"ion-padding\\\" *ngIf=\\\"!sorted\\\">\\n        <ion-button color=\\\"buttons\\\" [disabled]=\\\"!(currentDate > schedule.sort_students && currentDate <= schedule.exchange)\\\" (click)=\\\"createSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Sortiervorschlag erstellen</ion-button>\\n      </div>\\n      <div class=\\\"ion-padding\\\" *ngIf=\\\"sorted\\\">\\n        <ion-button color=\\\"buttons\\\" [disabled]=\\\"!(currentDate > schedule.sort_students && currentDate <= schedule.exchange)\\\" (click)=\\\"createSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Neuen Sortiervorschlag erstellen</ion-button>\\n      </div>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" [disabled]=\\\"!(currentDate > schedule.sort_students && currentDate <= schedule.exchange)\\\" (click)=\\\"requestSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >aktuellen Sortiervorschlag ansehen</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\" *ngIf=\\\"sortedProjects.length\\\">\\n    <ion-card-header>\\n      <ion-card-title>\\n        Vorschlag für Einsortierung der Schüler\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text4\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text4 }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-card color=\\\"background\\\" *ngFor=\\\"let project of sortedProjects\\\">\\n        <ion-card-header>\\n          <ion-card-title>\\n            <ion-label *ngIf=\\\"project.participants.length < project.min_participants\\\" color=\\\"danger\\\">{{ project.title }} (Zu wenige Teilnehmer)</ion-label>\\n            <ion-label *ngIf=\\\"project.participants.length > project.max_participants\\\" color=\\\"danger\\\">{{ project.title }} (Zu viele Teilnehmer)</ion-label>\\n            <ion-label *ngIf=\\\"project.participants.length >= project.min_participants && project.participants.length <= project.max_participants\\\">{{ project.title }}</ion-label>\\n          </ion-card-title>\\n          <ion-card-subtitle>\\n            <ion-label color=\\\"text\\\">{{ project.min_grade }}. bis {{ project.max_grade }}.Klasse | {{ project.min_participants }} bis {{ project.max_participants }} Teilnehmer | {{ project.leader_name }}</ion-label>\\n          </ion-card-subtitle>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <div *ngIf=\\\"project.leader && project.leader_type === 'App\\\\\\\\Student'\\\">\\n            <ion-item color=\\\"items\\\">\\n              <ion-text color=\\\"text\\\"><ion-icon name=\\\"star\\\"></ion-icon> {{ project.leader.first_name }} {{ project.leader.last_name }} {{ project.leader.grade }}{{ project.leader.letter }}</ion-text>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"project.assistant_student_leaders.length\\\">\\n            <ion-item color=\\\"items\\\" *ngFor=\\\"let assistant of project.assistant_student_leaders\\\">\\n              <ion-text color=\\\"text\\\"><ion-icon name=\\\"star-half\\\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\\n            </ion-item>\\n          </div>\\n          <div *ngIf=\\\"project.participants.length\\\">\\n            <ion-item color=\\\"items\\\" *ngFor=\\\"let participant of project.participants\\\">\\n              <ion-text color=\\\"text\\\">{{ participant.first_name }} {{ participant.last_name }} {{ participant.grade }}{{ participant.letter }}</ion-text>\\n              <ion-select slot=\\\"end\\\" name=\\\"ParticipantProject\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\" (ionChange)=\\\"moveParticipant($event)\\\"> \\n                <ion-select-option *ngFor=\\\"let newProject of sortedProjects\\\" [value]=\\\"[participant, project.id, newProject.id]\\\">{{ newProject.title }} ({{ newProject.min_grade }}. - {{ newProject.max_grade }}.Klasse)</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n          </div>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-card-content>\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button color=\\\"buttons\\\" (click)=\\\"editSortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Änderungen speichern</ion-button>\\n    </div>\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button color=\\\"buttons\\\" [disabled]=\\\"!sorted\\\" (click)=\\\"applySortingProposal()\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" >Vorschlag anwenden</ion-button>\\n    </div>\\n  </ion-card>\\n</ion-content>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { LeadersService } from 'src/app/services/leaders.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { AlertController } from '@ionic/angular';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Project } from 'src/models/Project.model';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { Time } from '@angular/common';\nimport { formatDate } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nexport interface ModifiedSchüler {\n  id: number;\n  first_name: string;\n  last_name: string;\n  grade: number;\n  letter: string;\n  exchange_requests?: any[];\n  first_friend: number;\n  first_friend_name: string;\n  second_friend: number;\n  second_friend_name: string;\n  third_friend: number;\n  third_friend_name: string;\n  first_wish: number;\n  first_wish_title: string;\n  second_wish: number;\n  second_wish_title: string;\n  third_wish: number;\n  third_wish_title: string;\n  project_id: number;\n  project_title?: string;\n  role: number;\n}\n\nexport interface ModifiedProjektleiter {\n  id: number;\n  user_name: string;\n  email: string;\n  project_id: number;\n  project_title?: string;\n  email_verified_at?: Time;\n}\n\n@Component({\n  selector: 'app-admin-students-leaders',\n  templateUrl: './admin-students-leaders.page.html',\n  styleUrls: ['./admin-students-leaders.page.scss'],\n})\nexport class AdminStudentsLeadersPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  adminUrl: string;\n\n  loadedProjects: Project[] = [];\n  loadedParticipantsNames: any[] = [];\n\n  sortedProjects: Project[] = [];\n  searchStudents: ModifiedSchüler[];\n  loadedStudents: ModifiedSchüler[] = [];\n  loadedLeaders: ModifiedProjektleiter[] = [];\n\n  sorted = false;\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  searchValue: string;\n  text1 = this.config.get_content_by_index('admin-students-leaders', 0);\n  text2 = this.config.get_content_by_index('admin-students-leaders', 1);\n  text3 = this.config.get_content_by_index('admin-students-leaders', 2);\n  text4 = this.config.get_content_by_index('admin-students-leaders', 3);\n\n  page = 1;\n  lastPage = 1;\n\n  projectNoun = this.config.app_config.project_noun;\n  projectsNoun = this.config.app_config.projects_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private studentsService: StudentsService,\n              private scheduleService: ScheduleService,\n              private leadersService: LeadersService,\n              private projectsService: ProjectsService,\n              private activatedRoute: ActivatedRoute,\n              private alertCtrl: AlertController,\n              private adminsService: AdminsService,\n              private alert: AlertService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      this.adminUrl = paramMap.get('AdminName');\n    });\n\n    this.load();\n\n    this.subscriptions.push(\n      this.studentsService.update.subscribe(() => this.load()),\n      this.leadersService.update.subscribe(() => this.load()),\n      this.projectsService.update.subscribe(() => this.load())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  load() {\n    this.alert.loading(2000);\n\n    this.page = 1;\n\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getProjects();\n    this.getAllStudentNames();\n\n    if (this.currentDate > this.schedule.sort_students && this.currentDate <= this.schedule.exchange) {\n      this.requestSortingProposal();\n    }\n  }\n\n  eventHandler(keyCode) {\n    if (keyCode === 13) {\n      this.search();\n    }\n  }\n\n  search() {\n    // tslint:disable-next-line: triple-equals\n    if (this.searchValue == '') {\n      this.searchStudents = null;\n      return;\n    }\n    this.studentsService.getAllSearchedStudents(this.searchValue).subscribe(data => {\n      this.searchStudents = [];\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        this.searchStudents.push(stu);\n      });\n    });\n  }\n\n  refresh() {\n    this.page = 1;\n    this.getProjects();\n    this.getAllStudentNames();\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.loadedProjects = data.data;\n      this.getStudents();\n      this.getLeaders();\n    });\n  }\n\n  getAllStudentNames() {\n    this.studentsService.getAllStudentNames().subscribe(data => {\n      this.loadedParticipantsNames = data.data;\n    });\n  }\n\n  getStudents() {\n    this.loadedStudents = [];\n    this.studentsService.getAllStudents(this.page).subscribe(data => {\n      this.lastPage = data.meta.last_page;\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        // await this.getWishNames(stu.first_wish, stu.second_wish, stu.third_wish, stu);\n\n        // await this.getFriendsNames(stu.first_friend, stu.second_friend, stu.third_friend, stu);\n\n        this.loadedStudents.push(stu);\n      });\n    });\n  }\n\n  getMoreStudents() {\n    this.alert.loading(2000);\n    this.page += 1;\n    this.studentsService.getAllStudents(this.page).subscribe(data => {\n      data.data.forEach(async student => {\n        const stu: ModifiedSchüler = {\n          id: 0,\n          first_name: '',\n          last_name: '',\n          grade: 1,\n          letter: '',\n          first_friend: 0,\n          first_friend_name: '',\n          second_friend: 0,\n          second_friend_name: '',\n          third_friend: 0,\n          third_friend_name: '',\n          first_wish: 0,\n          first_wish_title: '',\n          second_wish: 0,\n          second_wish_title: '',\n          third_wish: 0,\n          third_wish_title: '',\n          project_id: 0,\n          project_title: 'kein Projekt',\n          role: 1\n        };\n\n        stu.id = student.id;\n        stu.first_name = student.first_name;\n        stu.last_name = student.last_name;\n        stu.grade = student.grade;\n        stu.letter = student.letter;\n        stu.first_friend = student.first_friend;\n        stu.second_friend = student.second_friend;\n        stu.third_friend = student.third_friend;\n        stu.first_wish = student.first_wish;\n        stu.second_wish = student.second_wish;\n        stu.third_wish = student.third_wish;\n        stu.project_id = student.project_id;\n        stu.role = student.role;\n\n        stu.first_friend_name = this.getParticipantName(stu.first_friend);\n        stu.second_friend_name = this.getParticipantName(stu.second_friend);\n        stu.third_friend_name = this.getParticipantName(stu.third_friend);\n\n        stu.first_wish_title = this.getProjectTitle(stu.first_wish);\n        stu.second_wish_title = this.getProjectTitle(stu.second_wish);\n        stu.third_wish_title = this.getProjectTitle(stu.third_wish);\n        stu.project_title = this.getProjectTitle(stu.project_id);\n\n        this.loadedStudents.push(stu);\n      });\n    });\n  }\n\n  getLeaders() {\n    this.loadedLeaders = [];\n    this.leadersService.getAllLeaders().subscribe(data => {\n      data.data.forEach(leader => {\n        const lea: ModifiedProjektleiter = {\n          id: 0,\n          user_name: '',\n          email: '',\n          project_id: 0,\n          project_title: 'kein Projekt'\n        };\n\n        lea.id = leader.id;\n        lea.user_name = leader.user_name;\n        lea.email = leader.email;\n        lea.project_id = leader.project_id;\n\n        lea.project_title = this.getProjectTitle(lea.project_id);\n\n        this.loadedLeaders.push(lea);\n      });\n    });\n  }\n\n  getProjectTitle(projectID) {\n    if (projectID !== 0 && this.loadedProjects) {\n      const searchedProject = this.loadedProjects.filter(\n        project => project.id === projectID);\n      if (searchedProject[0] != null) {\n        return searchedProject[0].title;\n      } else {\n        return 'fehlerhaftes Projekt';\n      }\n    } else {\n      return 'kein Projekt';\n    }\n  }\n\n  getParticipantName(participantID) {\n    if (participantID !== 0 && this.loadedParticipantsNames) {\n      const searchedParticipant = this.loadedParticipantsNames.filter(\n        participant => participant.id === participantID);\n      if (searchedParticipant[0] != null) {\n        return searchedParticipant[0].first_name + ' ' + searchedParticipant[0].last_name;\n      } else {\n        return 'fehlerhafter Freund';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  deleteLeader(leaderID) {\n    this.alertCtrl.create({\n      header: 'Sind sie sicher?',\n      message: 'Wollen sie diesen Projektleiter wirklich unwiederruflich löschen?',\n      buttons: [{\n        text: 'Abbrechen',\n        role: 'cancel',\n      }, {\n        text: 'Löschen',\n        handler: () => {\n          this.leadersService.deleteLeader(leaderID);\n        }\n      }]\n    }).then(alertEl => {\n      alertEl.present();\n    });\n  }\n\n  createSortingProposal() {\n    this.adminsService.createSortingProposal().subscribe(data => {\n      this.alert.alert(data.message);\n      this.sorted = true;\n      this.sortedProjects = data.data;\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alert.error('Sortierung der Schüler fehlgeschlagen.', error.error);\n    });\n  }\n\n  requestSortingProposal() {\n    this.adminsService.requestSortingProposal().subscribe(data => {\n      this.sortedProjects = data.data;\n      this.sorted = true;\n    // tslint:disable-next-line: no-shadowed-variable\n    }, error => {\n      this.alert.error('Es konnte kein Sortiervorschlag gefunden werden.', error.error);\n    });\n  }\n\n  moveParticipant(event) {\n    const participant = event.detail.value[0];\n    const oldProjectId = event.detail.value[1];\n    const newProjectId = event.detail.value[2];\n\n    if (oldProjectId !== 0 && this.sortedProjects) {\n      const searchedProject = this.sortedProjects.filter(\n        project => project.id === oldProjectId);\n      if (searchedProject[0] != null) {\n        const oldProject = searchedProject[0];\n\n        const index = oldProject.participants.indexOf(participant);\n        if (index !== -1) {\n          oldProject.participants.splice(index, 1);\n        }\n      }\n    }\n\n    if (newProjectId !== 0 && this.sortedProjects) {\n      const searchedProject = this.sortedProjects.filter(\n        project => project.id === newProjectId);\n      if (searchedProject[0] != null) {\n        const newProject = searchedProject[0];\n\n        if (participant) {\n          newProject.participants.push(participant);\n        }\n      }\n    }\n  }\n\n  editSortingProposal() {\n    const newProposal = {\n      data: this.sortedProjects\n    };\n    this.adminsService.editSortingProposal(newProposal);\n    // this.requestSortingProposal();\n    this.sorted = true;\n  }\n\n  applySortingProposal() {\n    if (this.sorted === true) {\n      this.alertCtrl.create({\n        header: 'Sind sie sicher?',\n        message: 'Wollen sie die vorgeschlagene Konfiguration wirklich anwenden?',\n        buttons: [{\n          text: 'Abbrechen',\n          role: 'cancel'\n        }, {\n          text: 'Anwenden',\n          handler: () => {\n            this.adminsService.applySortingProposal();\n            this.sorted = false;\n            this.refresh();\n          }\n        }]\n      }).then(alertEl => {\n        alertEl.present();\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminStudentsLeadersPage } from './admin-students-leaders.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminStudentsLeadersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminStudentsLeadersPage]\n})\nexport class AdminStudentsLeadersPageModule {}\n","export default \".height {\\n  min-height: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcYWRtaW4tc3R1ZGVudHMtbGVhZGVycy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBQTtBQUNKIiwiZmlsZSI6ImFkbWluLXN0dWRlbnRzLWxlYWRlcnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlaWdodCB7XHJcbiAgICBtaW4taGVpZ2h0OiA1MDBweDtcclxufSJdfQ== */\";"],"sourceRoot":"webpack:///"}
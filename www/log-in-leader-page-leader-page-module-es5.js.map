{"version":3,"sources":["webpack:///src/app/log-in/leader-page/leader-page.page.html","webpack:///src/app/log-in/leader-page/leader-page.module.ts","webpack:///src/app/log-in/leader-page/leader-page.page.scss","webpack:///src/app/log-in/leader-page/leader-page.page.ts"],"names":["routes","path","component","LeaderPagePageModule","imports","forChild","declarations","LeaderPagePage","activatedRoute","router","leadersService","projectsService","scheduleService","config","alert","loadedLeader","id","user_name","email","password","project_id","schedule","begin","control","registration","sort_students","exchange","projects","end","buttonPressed","projectNoun","app_config","project_noun","text","get_content","currentDate","Date","paramMap","subscribe","has","navigate","getSchedule","data","getLeader","update","getSelfLeader","email_verified_at","sendAuthentificationEmailSubscribe","message","error","logOutLeader","selector","template"],"mappings":"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","file":"log-in-leader-page-leader-page-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Projektleiter</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" (click)=\\\"logout()\\\">\\n      <ion-icon name=\\\"log-out\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n        <ion-card-title><ion-label color=\\\"buttons\\\">Wilkommen {{ loadedLeader.user_name }}</ion-label></ion-card-title>\\n        <ion-button (click)=\\\"refresh()\\\" slot=\\\"end\\\" color=\\\"buttons\\\"><ion-icon name=\\\"refresh\\\"></ion-icon></ion-button>\\n      </ion-item>   \\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"loadedLeader.email_verified_at == null && !buttonPressed\\\">\\n      <ion-label color=\\\"text\\\">\\n        Sie heaben ihre E-Mail noch nicht verifiziert. Bitte holen sie dies nach bevor sie fortfahren.\\n      </ion-label>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"sendVerificationEmail()\\\">E-Mail senden</ion-button>\\n      </div>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item [disabled]=\\\"loadedLeader.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control && loadedLeader.project_id == 0\\\" routerLink='./{{ projectNoun }} erstellen'>\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"create\\\"></ion-icon>{{ projectNoun }} erstellen\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedLeader.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedLeader.project_id != 0\\\" routerLink='./{{ projectNoun }} verwalten'>\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"construct\\\"></ion-icon>{{ projectNoun }} verwalten\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedLeader.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedLeader.project_id != 0\\\" [routerLink]=\\\"['./Nachricht senden']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"send\\\"></ion-icon>Nachricht senden\\n        </ion-item>\\n      </ion-list>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"logout()\\\">Abmelden</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaderPagePage } from './leader-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaderPagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LeaderPagePage]\n})\nexport class LeaderPagePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi9sZWFkZXItcGFnZS9sZWFkZXItcGFnZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LeadersService } from 'src/app/leaders.service';\nimport { Zeitplan } from 'src/assets/models/Zeitplan';\nimport { formatDate } from '@angular/common';\nimport { Projektleiter } from 'src/assets/models/Projektleiter';\nimport { ConfigService } from 'src/app/config.service';\nimport { ScheduleService } from 'src/app/schedule.service';\nimport { AlertService } from 'src/app/alert.service';\nimport { ProjectsService } from 'src/app/projects.service';\n\n@Component({\n  selector: 'app-leader-page',\n  templateUrl: './leader-page.page.html',\n  styleUrls: ['./leader-page.page.scss'],\n})\nexport class LeaderPagePage implements OnInit {\n  loadedLeader: Projektleiter = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    project_id: 0\n  };\n\n  schedule: Zeitplan = {\n    id: 1,\n    begin: null,\n    control: null,\n    registration: null,\n    sort_students: null,\n    exchange: null,\n    projects: null,\n    end: null\n  };\n\n  currentDate: any;\n\n  text: string;\n\n  buttonPressed = true;\n\n  projectNoun = this.config.app_config.project_noun;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private leadersService: LeadersService,\n              private projectsService: ProjectsService,\n              private scheduleService: ScheduleService,\n              private config: ConfigService,\n              private alert: AlertService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('leader-page');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('LeaderName')) {\n        this.router.navigate(['']);\n        return;\n      }\n    });\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n\n    this.getLeader();\n    this.leadersService.update.subscribe(() => this.getLeader());\n    this.projectsService.update.subscribe(() => this.getLeader());\n  }\n\n  getLeader() {\n    this.leadersService.getSelfLeader().subscribe(data => {\n      this.loadedLeader = data.data;\n\n      if (this.loadedLeader.email_verified_at == null) {\n        this.buttonPressed = false;\n      }\n    });\n  }\n\n  refresh() {\n    this.getLeader();\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  sendVerificationEmail() {\n    this.leadersService.sendAuthentificationEmailSubscribe().subscribe(data => {\n      this.alert.alert(data.message);\n      this.buttonPressed = true;\n    }, error => {\n      this.alert.error('Versandt der Verifizierungs E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  logout() {\n    this.leadersService.logOutLeader();\n  }\n\n}\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/leader-page/leader-page.page.scss","webpack:///src/app/log-in/leader-page/leader-page.page.html","webpack:///src/app/log-in/leader-page/leader-page.module.ts","webpack:///src/app/log-in/leader-page/leader-page.page.ts"],"names":["routes","path","component","LeaderPagePageModule","imports","forChild","declarations","LeaderPagePage","activatedRoute","router","leadersService","projectsService","scheduleService","config","alert","subscriptions","loadedLeader","id","user_name","email","password","project_id","schedule","begin","Date","control","registration","sort_students","exchange","projects","end","buttonPressed","projectNoun","app_config","project_noun","text","get_content","currentDate","paramMap","subscribe","has","navigate","getSchedule","getLeader","push","update","forEach","sub","unsubscribe","data","getSelfLeader","email_verified_at","sendAuthentificationEmailSubscribe","message","error","logOutLeader","destroySelfLeader","selector","template"],"mappings":"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","file":"log-in-leader-page-leader-page-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsZWFkZXItcGFnZS5wYWdlLnNjc3MifQ== */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-title>Projektleiter</ion-title>\\n    <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" (click)=\\\"logout()\\\">\\n      <ion-icon name=\\\"log-out\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header>\\n      <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n        <ion-card-title><ion-label color=\\\"buttons\\\" text-wrap>Willkommen {{ loadedLeader.user_name }}</ion-label></ion-card-title>\\n        <ion-button (click)=\\\"refresh()\\\" slot=\\\"end\\\" color=\\\"buttons\\\"><ion-icon name=\\\"refresh\\\"></ion-icon></ion-button>\\n      </ion-item>   \\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content *ngIf=\\\"loadedLeader.email_verified_at == null && !buttonPressed\\\">\\n      <ion-label color=\\\"text\\\">\\n        Sie heaben ihre E-Mail noch nicht verifiziert. Bitte holen sie dies nach bevor sie fortfahren.\\n      </ion-label>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"sendVerificationEmail()\\\">E-Mail senden</ion-button>\\n      </div>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item [disabled]=\\\"loadedLeader.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"currentDate > schedule.begin && currentDate <= schedule.control && loadedLeader.project_id == 0\\\" routerLink='./{{ projectNoun }} erstellen'>\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"create\\\"></ion-icon>{{ projectNoun }} erstellen\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedLeader.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedLeader.project_id != 0\\\" routerLink='./{{ projectNoun }} verwalten'>\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"construct\\\"></ion-icon>{{ projectNoun }} verwalten\\n        </ion-item>\\n        <ion-item [disabled]=\\\"loadedLeader.email_verified_at == null\\\" color=\\\"items\\\" *ngIf=\\\"loadedLeader.project_id != 0\\\" [routerLink]=\\\"['./Nachricht senden']\\\">\\n          <ion-icon color=\\\"text\\\" slot=\\\"start\\\" name=\\\"send\\\"></ion-icon>Nachricht senden\\n        </ion-item>\\n      </ion-list>\\n      <div class=\\\"ion-padding\\\" *ngIf=\\\"currentDate > schedule.control && currentDate <= schedule.end &&loadedLeader.project_id == 0\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"deleteAccount()\\\">Account l√∂schen</ion-button>\\n      </div>\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button color=\\\"buttons\\\" expand=\\\"block\\\" class=\\\"ion-no-margin\\\" (click)=\\\"logout()\\\">Abmelden</ion-button>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LeaderPagePage } from './leader-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaderPagePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LeaderPagePage]\n})\nexport class LeaderPagePageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LeadersService } from 'src/app/services/leaders.service';\nimport { Schedule } from 'src/models/Schedule.model';\nimport { formatDate } from '@angular/common';\nimport { Projectleader } from 'src/models/Projectleader';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-leader-page',\n  templateUrl: './leader-page.page.html',\n  styleUrls: ['./leader-page.page.scss'],\n})\nexport class LeaderPagePage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  loadedLeader: Projectleader = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    project_id: 0\n  };\n\n  /**\n   * Contains the time schedule of the application\n   */\n  schedule: Schedule = {\n    id: 1,\n    begin: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    control: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    registration: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    sort_students: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    exchange: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    projects: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\n    end: formatDate(new Date(), 'yyyy-MM-dd', 'en')\n  };\n\n  /**\n   * Contains the current date in yyyy-MM-dd format\n   */\n  currentDate: any;\n\n  text: string;\n\n  buttonPressed = true;\n\n  projectNoun = this.config.app_config.project_noun;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private leadersService: LeadersService,\n              private projectsService: ProjectsService,\n              private scheduleService: ScheduleService,\n              private config: ConfigService,\n              private alert: AlertService) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('leader-page');\n\n    this.currentDate = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('LeaderName')) {\n        this.router.navigate(['']);\n        return;\n      }\n    });\n\n    this.getSchedule();\n    this.getLeader();\n\n    this.subscriptions.push(\n      this.scheduleService.update.subscribe(() => this.getSchedule()),\n      this.leadersService.update.subscribe(() => this.getLeader()),\n      this.projectsService.update.subscribe(() => this.getLeader())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Gets the current time schedule for the application and sets the schedule value\n   */\n  getSchedule() {\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  getLeader() {\n    this.leadersService.getSelfLeader().subscribe(data => {\n      this.loadedLeader = data.data;\n\n      if (this.loadedLeader.email_verified_at == null) {\n        this.buttonPressed = false;\n      }\n    });\n  }\n\n  refresh() {\n    this.getLeader();\n    this.scheduleService.getSchedule().subscribe(data => {\n      this.schedule = data.data;\n    });\n  }\n\n  sendVerificationEmail() {\n    this.leadersService.sendAuthentificationEmailSubscribe().subscribe(data => {\n      this.alert.alert(data.message);\n      this.buttonPressed = true;\n    }, error => {\n      this.alert.error('Versandt der Verifizierungs E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  logout() {\n    this.leadersService.logOutLeader();\n  }\n\n  deleteAccount() {\n    this.leadersService.destroySelfLeader();\n  }\n\n}\n"]}
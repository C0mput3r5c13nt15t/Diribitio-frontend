{"version":3,"sources":["webpack:///src/app/log-in/student-page/registration/registration.module.ts","webpack:///src/app/log-in/student-page/registration/registration.page.scss","webpack:///src/app/log-in/student-page/registration/registration.page.ts","webpack:///src/app/log-in/student-page/registration/registration.page.html"],"names":["routes","path","component","RegistrationPageModule","imports","forChild","declarations","RegistrationPage","projectsService","studentsService","activatedRoute","router","alertCtrl","config","subscriptions","loadedProjects","possibleProjects","loadedStudent","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","appendFriend","friendsList","definiteArticle","definite_article","indefiniteArticle","indefinite_article","toLowerCase","projectsNoun","app_config","projects_noun","projectNoun","project_noun","eventName","event_name","text","get_content","paramMap","subscribe","has","navigate","studentUrl","get","getProjects","getStudent","push","update","forEach","sub","unsubscribe","getSelfStudent","data","lowestGrade","highestGrade","getFriends","friendData","friend","filterProjects","getAllProjects","project","min_grade","max_grade","authorized","validateProject","getStudentID","length","some","e","JSON","parse","stringify","console","log","create","header","message","buttons","then","alertEl","present","splice","indexOf","stillfriend","putSelfStudent","selector","template"],"mappings":"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","file":"log-in-student-page-registration-registration-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistrationPage } from './registration.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegistrationPage]\n})\nexport class RegistrationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3RyYXRpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { AlertController } from '@ionic/angular';\nimport { Student } from 'src/models/Student.model';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.page.html',\n  styleUrls: ['./registration.page.scss'],\n})\nexport class RegistrationPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  loadedProjects = [];\n  possibleProjects = [];\n  students;\n  studentUrl: string;\n  loadedStudent: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 1\n  };\n  appendFriend: any = {\n    id: 0,\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n  };\n  friendsList = [];\n  lowestGrade: number;\n  highestGrade: number;\n\n  text: string;\n\n  definiteArticle = this.config.definite_article;\n  indefiniteArticle = this.config.indefinite_article.toLowerCase();\n  projectsNoun = this.config.app_config.projects_noun;\n  projectNoun = this.config.app_config.project_noun;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private projectsService: ProjectsService,\n              private studentsService: StudentsService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private alertCtrl: AlertController,\n              private config: ConfigService ) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('user-registration');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getProjects();\n    this.getStudent();\n\n    this.subscriptions.push(\n      this.projectsService.update.subscribe(() => this.getProjects()),\n      this.studentsService.update.subscribe(() => this.getStudent())\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getStudent() {\n    this.studentsService.getSelfStudent().subscribe(data => {\n      this.loadedStudent = data.data;\n      this.lowestGrade = +data.data.grade;\n      this.highestGrade = +data.data.grade;\n\n      this.friendsList = [];\n\n      this.studentsService.getFriends().subscribe(friendData => {\n        this.friendsList = friendData.data;\n\n        this.friendsList.forEach((friend) => {\n          if (+friend.grade <= this.lowestGrade) {\n            this.lowestGrade = +friend.grade;\n          }\n\n          if (+friend.grade >= this.highestGrade) {\n            this.highestGrade = +friend.grade;\n          }\n          this.filterProjects();\n        });\n      });\n    });\n  }\n\n  userChanges() {\n    this.lowestGrade = +this.loadedStudent.grade;\n    this.highestGrade = +this.loadedStudent.grade;\n\n    this.friendsList.forEach((friend) => {\n      if (+friend.grade <= this.lowestGrade) {\n        this.lowestGrade = +friend.grade;\n      }\n\n      if (+friend.grade >= this.highestGrade) {\n        this.highestGrade = +friend.grade;\n      }\n    });\n    this.filterProjects();\n  }\n\n  getProjects() {\n    this.projectsService.getAllProjects().subscribe(data => {\n      this.loadedProjects = data.data;\n    });\n  }\n\n  validateProject(project) {\n    if (this.lowestGrade >= +project.min_grade) {\n      if (+project.max_grade >= this.highestGrade) {\n        if (project.id !== this.loadedStudent.project_id) {\n          if (project.authorized) {\n            return true;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  filterProjects() {\n    this.possibleProjects = [];\n    // console.log(this.lowestGrade);\n    this.loadedProjects.forEach(project => {\n      if (this.validateProject(project)) {\n        // console.log(project.max_grade);\n        this.possibleProjects.push(project);\n      }\n    });\n  }\n\n  appendFriendFunction() {\n    this.studentsService.getStudentID(this.appendFriend).subscribe(data => {\n      // tslint:disable-next-line: triple-equals\n      if (data.id != 0) {\n        this.appendFriend.id = data.id;\n\n        if (this.friendsList.length < 3  &&  !this.friendsList.some(e => e.id === data.id))  {\n          this.friendsList.push(JSON.parse(JSON.stringify(this.appendFriend)));\n          console.log(this.friendsList);\n\n          if (+this.appendFriend.grade <= this.lowestGrade) {\n            this.lowestGrade = +this.appendFriend.grade;\n          }\n\n          if (+this.appendFriend.grade >= this.highestGrade) {\n            this.highestGrade = +this.appendFriend.grade;\n          }\n        }\n\n        this.filterProjects();\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Der angegebene Schüler konnte nicht gefunden werden!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    });\n  }\n\n  removeFriendFunction(friend) {\n    this.friendsList.splice(this.friendsList.indexOf(friend), 1);\n\n    this.lowestGrade = +this.loadedStudent.grade;\n    this.highestGrade = +this.loadedStudent.grade;\n\n    this.friendsList.forEach(stillfriend => {\n      if (+stillfriend.grade < this.lowestGrade) {\n        this.lowestGrade = +stillfriend.grade;\n      }\n\n      if (+stillfriend.grade > this.highestGrade) {\n        this.highestGrade = +stillfriend.grade;\n      }\n    });\n\n    this.filterProjects();\n  }\n\n  registrate() {\n    // tslint:disable-next-line: triple-equals\n    if (this.loadedStudent.first_wish != this.loadedStudent.project_id && this.loadedStudent.second_wish != this.loadedStudent.project_id && this.loadedStudent.third_wish != this.loadedStudent.project_id) {\n      if (this.loadedStudent.first_wish !== this.loadedStudent.second_wish && this.loadedStudent.first_wish !== this.loadedStudent.third_wish && this.loadedStudent.second_wish !== this.loadedStudent.third_wish) {\n        if (this.friendsList.length === 3) {\n          this.loadedStudent.first_friend = this.friendsList[0].id;\n          this.loadedStudent.second_friend = this.friendsList[1].id;\n          this.loadedStudent.third_friend = this.friendsList[2].id;\n          this.studentsService.putSelfStudent(this.loadedStudent, this.studentUrl);\n        } else if (this.friendsList.length === 2) {\n          this.loadedStudent.first_friend = this.friendsList[0].id;\n          this.loadedStudent.second_friend = this.friendsList[1].id;\n          this.loadedStudent.third_friend = 0;\n          this.studentsService.putSelfStudent(this.loadedStudent, this.studentUrl);\n        } else if (this.friendsList.length === 1) {\n          this.loadedStudent.first_friend = this.friendsList[0].id;\n          this.loadedStudent.second_friend = 0;\n          this.loadedStudent.third_friend = 0;\n          this.studentsService.putSelfStudent(this.loadedStudent, this.studentUrl);\n        } else {\n          this.loadedStudent.first_friend = 0;\n          this.loadedStudent.second_friend = 0;\n          this.loadedStudent.third_friend = 0;\n          this.studentsService.putSelfStudent(this.loadedStudent, this.studentUrl);\n        }\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Du must drei verschiedene Projektwünsche angeben!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    } else {\n      this.alertCtrl.create({\n        header: 'Fehler',\n        message: 'Du kannst nicht an deinem eigenen Projekt teilnehmen!',\n        buttons: [{\n          text: 'Ok',\n          role: 'cancel',\n          }]\n        }).then(alertEl => {\n          alertEl.present();\n        });\n    }\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Schüler/{{ studentUrl }}\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Anmeldung</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <ion-card color=\\\"background\\\"class=\\\"content\\\">\\n    <ion-card-header color=\\\"background\\\">\\n      <ion-card-title>Für {{ projectsNoun }} Anmelden</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content *ngIf=\\\"text\\\">\\n      <ion-label color=\\\"text\\\">\\n        {{ text }}\\n      </ion-label>\\n    </ion-card-content>\\n    <ion-card-content>\\n      <form #form=\\\"ngForm\\\" name=\\\"ParticipantForm\\\" (ngSubmit)=\\\"registrate()\\\">\\n        <ion-list>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required [(ngModel)]=\\\"loadedStudent.first_name\\\" name=\\\"ParticipantFirstName\\\" placeholder=\\\"Vorname\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input color=\\\"text\\\" required [(ngModel)]=\\\"loadedStudent.last_name\\\" name=\\\"ParticipantLastName\\\" placeholder=\\\"Nachname\\\" type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n            <ion-select [selectedText]=\\\"loadedStudent.grade\\\" required name=\\\"ParticipantGrade\\\" (ionChange)=\\\"userChanges()\\\" [(ngModel)]=\\\"loadedStudent.grade\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\">\\n              <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n              <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n              <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n              <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n              <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n              <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n              <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-radio-group required name=\\\"ParticipantClass\\\" [(ngModel)]=\\\"loadedStudent.letter\\\">\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">A </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"a\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">B </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"b\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">C </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"c\\\"></ion-radio>\\n              </ion-item>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                <ion-label color=\\\"text\\\">D </ion-label>\\n                <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"d\\\"></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-item>\\n        </ion-list>\\n\\n        <ion-card color=\\\"background\\\" *ngIf=\\\"loadedStudent.project_id == 0\\\">\\n          <form #form=\\\"ngForm\\\" name=\\\"ParticipantForm\\\" (ngSubmit)=\\\"appendFriendFunction()\\\">\\n            <ion-item color=\\\"items\\\">\\n              <ion-input color=\\\"text\\\" type=\\\"text\\\" placeholder=\\\"Vorname\\\" [(ngModel)]=\\\"appendFriend.first_name\\\" name=\\\"ExchangeSecondFirstName\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-input color=\\\"text\\\" type=\\\"text\\\" placeholder=\\\"Nachname\\\" [(ngModel)]=\\\"appendFriend.last_name\\\" name=\\\"ExchangeSecondLastName\\\"></ion-input>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-label color=\\\"text\\\">Klassenstufe</ion-label>\\n              <ion-select [selectedText]=\\\"appendFriend.grade\\\" name=\\\"ParticipantGrade\\\" [(ngModel)]=\\\"appendFriend.grade\\\" cancelText=\\\"Abbrechen\\\" doneText=\\\"Ok\\\">\\n                <ion-select-option value=\\\"5\\\">5</ion-select-option>\\n                <ion-select-option value=\\\"6\\\">6</ion-select-option>\\n                <ion-select-option value=\\\"7\\\">7</ion-select-option>\\n                <ion-select-option value=\\\"8\\\">8</ion-select-option>\\n                <ion-select-option value=\\\"9\\\">9</ion-select-option>\\n                <ion-select-option value=\\\"10\\\">10</ion-select-option>\\n                <ion-select-option value=\\\"11\\\">11</ion-select-option>\\n              </ion-select>\\n            </ion-item>\\n            <ion-item color=\\\"items\\\">\\n              <ion-radio-group color=\\\"buttons\\\" name=\\\"ParticipantClass\\\" [(ngModel)]=\\\"appendFriend.letter\\\">\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">A </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"a\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">B </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"b\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">C </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"c\\\"></ion-radio>\\n                </ion-item>\\n                <ion-item color=\\\"items\\\" lines=\\\"none\\\">\\n                  <ion-label color=\\\"text\\\">D </ion-label>\\n                  <ion-radio color=\\\"text\\\" slot=\\\"start\\\" value=\\\"d\\\"></ion-radio>\\n                </ion-item>\\n              </ion-radio-group>\\n            </ion-item>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Als Freund hinzufügen</ion-button>\\n            </div>\\n          </form>\\n        </ion-card>\\n\\n        <ion-list>\\n          <ion-title color=\\\"background\\\">Freunde</ion-title>\\n          <ion-item color=\\\"items\\\" *ngIf=\\\"loadedStudent.project_id == 0 || loadedStudent.project_id == null\\\">\\n            <ion-list>\\n              <ion-item color=\\\"items\\\" lines=\\\"none\\\" *ngFor=\\\"let friend of friendsList\\\">\\n                {{ friend.first_name }} {{ friend.last_name }} {{ friend.grade }}{{ friend.letter }}\\n                <ion-button color=\\\"buttons\\\" slot=\\\"end\\\" (click)=\\\"removeFriendFunction(friend)\\\"><ion-icon color=\\\"text\\\" name=\\\"close\\\"></ion-icon></ion-button>\\n              </ion-item>\\n            </ion-list>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\" *ngIf=\\\"loadedStudent.project_id == 0 && loadedStudent.role === 1 || loadedStudent.project_id == null && loadedStudent.role === 1\\\">\\n            <ion-label color=\\\"text\\\">\\n              {{ definiteArticle }} {{ projectNoun }} muss die Klassenstufen {{ lowestGrade }} bis {{ highestGrade }} erlauben.\\n            </ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"background\\\" *ngIf=\\\"loadedStudent.project_id != 0 && loadedStudent.project_id != null || loadedStudent.role === 2\\\">\\n            <ion-label color=\\\"danger\\\">\\n              Du kanst leider keine Freunde auswählen, da du selbst {{ indefiniteArticle }} {{ projectNoun }} erstellt hast.\\n            </ion-label>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">1. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"1. Wunsch\\\" name=\\\"ParticipantFirstWish\\\" [(ngModel)]=\\\"loadedStudent.first_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\"> \\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">2. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"2. Wunsch\\\" name=\\\"ParticipantSecondWish\\\" [(ngModel)]=\\\"loadedStudent.second_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\" type=\\\"number\\\">\\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-label color=\\\"text\\\">3. Wunsch</ion-label>\\n            <ion-select required placeholder=\\\"3. Wunsch\\\" name=\\\"ParticipantThirdWish\\\" [(ngModel)]=\\\"loadedStudent.third_wish\\\" okText=\\\"Auswählen\\\" cancelText=\\\"Abbrechen\\\">\\n              <ion-select-option *ngFor=\\\"let project of possibleProjects\\\" [value]=\\\"project.id\\\">{{ project.title }} ({{ project.min_grade }}. - {{ project.max_grade }}.Klasse)</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-list>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button color=\\\"buttons\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">Anmelden</ion-button>\\n        </div>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\";"]}
{"version":3,"sources":["webpack:///src/app/services/students.service.ts"],"names":["StudentsService","http","auth","alert","config","router","update","backendUrl","backend_config","url","eventName","app_config","event_name","signUpData","form","headers","options","post","subscribe","data","token","set_jwt","setLoggedIn","navigate","sendAuthentificationEmail","emit","reset","error","Authorization","jwt","message","loginData","get","studentData","page","searchValue","sendData","search_value","studentID","put","assistentID","backUrl","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;;;;;UAMaA,eAAe;AAM1B,iCAAoBC,IAApB,EACoBC,IADpB,EAEoBC,KAFpB,EAGoBC,MAHpB,EAIoBC,MAJpB,EAIoC;AAAA;;AAJhB,eAAAJ,IAAA,GAAAA,IAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AATpB;;;;AAGU,eAAAC,MAAA,GAAS,IAAI,0DAAJ,EAAT;AAQV;;;;AAGA,eAAAC,UAAA,GAAa,KAAKH,MAAL,CAAYI,cAAZ,CAA2BC,GAAxC;AACA;;;;AAGA,eAAAC,SAAA,GAAY,KAAKN,MAAL,CAAYO,UAAZ,CAAuBC,UAAnC;AATsC;AAWtC;;;;;;;AArB0B;AAAA;AAAA,wCA0BZC,UA1BY,EA0BAC,IA1BA,EA0BM;AAAA;;AAC9B,gBAAMC,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB;AADc,aAAhB,CAAhB;AAIA,gBAAMC,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,iBAAKd,IAAL,CAAUgB,IAAV,CAAyB,KAAKV,UAAL,GAAkB,mBAA3C,EAAgEM,UAAhE,EAA4EG,OAA5E,EAAqFE,SAArF,CAA+F,UAAAC,IAAI,EAAI;AACrG,kBAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,qBAAI,CAAClB,IAAL,CAAUmB,OAAV,CAAkBF,IAAI,CAACC,KAAvB;;AACA,qBAAI,CAAClB,IAAL,CAAUoB,WAAV,CAAsB,IAAtB;;AACA,qBAAI,CAACjB,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,KAAI,CAACb,SAAL,GAAiB,YAAlB,CAArB;AACD;;AACD,mBAAI,CAACP,KAAL,CAAWA,KAAX,CAAiB,0CAAjB;;AACA,mBAAI,CAACqB,yBAAL;;AACA,mBAAI,CAAClB,MAAL,CAAYmB,IAAZ;;AACAX,kBAAI,CAACY,KAAL;AACD,aAVD,EAUG,UAAAC,KAAK,EAAI;AACV,mBAAI,CAACxB,KAAL,CAAWwB,KAAX,CAAiB,yCAAjB,EAA4DA,KAAK,CAACA,KAAlE;AACD,aAZD;AAaD;AAED;;;;AA/C0B;AAAA;AAAA,sDAkDE;AAAA;;AAC1B,gBAAMZ,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAIA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,iBAAKd,IAAL,CAAUgB,IAAV,CAAyB,KAAKV,UAAL,GAAkB,uBAA3C,EAAoE,IAApE,EAA0ES,OAA1E,EAAmFE,SAAnF,CAA6F,UAAAC,IAAI,EAAI;AACnG,oBAAI,CAAChB,KAAL,CAAWA,KAAX,CAAiBgB,IAAI,CAACW,OAAtB;AACD,aAFD,EAEG,UAAAH,KAAK,EAAI;AACV,oBAAI,CAACxB,KAAL,CAAWwB,KAAX,CAAiB,oDAAjB,EAAuEA,KAAK,CAACA,KAA7E;AACD,aAJD;AAKD;AAED;;;;;AA/D0B;AAAA;AAAA,+DAmEW;AACnC,gBAAMZ,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAIA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAUgB,IAAV,CAAyB,KAAKV,UAAL,GAAkB,uBAA3C,EAAoE,IAApE,EAA0ES,OAA1E,CAAP;AACD;AAED;;;;;;AA5E0B;AAAA;AAAA,uCAiFbe,SAjFa,EAiFF;AACtB,gBAAMhB,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB;AADc,aAAhB,CAAhB;AAGA,gBAAMC,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAUgB,IAAV,CAAyB,KAAKV,UAAL,GAAkB,gBAA3C,EAA6DwB,SAA7D,EAAwEf,OAAxE,CAAP;AACD;AAED;;;;AAzF0B;AAAA;AAAA,0CA4FV;AAAA;;AACd,gBAAMD,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAIA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAUgB,IAAV,CAAyB,KAAKV,UAAL,GAAkB,iBAA3C,EAA8D,IAA9D,EAAoES,OAApE,EAA6EE,SAA7E,CAAuF,UAAAC,IAAI,EAAI;AACpG,oBAAI,CAAChB,KAAL,CAAWA,KAAX,CAAiBgB,IAAI,CAACW,OAAtB;;AACA,oBAAI,CAAC5B,IAAL,CAAUoB,WAAV,CAAsB,KAAtB;;AACA,oBAAI,CAACjB,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,MAAI,CAACb,SAAL,GAAiB,YAAlB,CAArB;AACD,aAJM,EAIJ,UAAAiB,KAAK,EAAI;AACV,oBAAI,CAACxB,KAAL,CAAWwB,KAAX,CAAiB,wBAAjB,EAA2CA,KAAK,CAACA,KAAjD;AACD,aANM,CAAP;AAOD;AAED;;;;;AA3G0B;AAAA;AAAA,2CA+GT;AACf,gBAAMZ,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAKA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAU+B,GAAV,CAAwB,KAAKzB,UAAL,GAAkB,eAA1C,EAA2DS,OAA3D,CAAP;AACD;AAED;;;;;;AAzH0B;AAAA;AAAA,uCA8HbiB,WA9Ha,EA8HA;AACxB,gBAAMlB,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAIA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAUgB,IAAV,CAAyB,KAAKV,UAAL,GAAkB,aAA3C,EAA0D0B,WAA1D,EAAuEjB,OAAvE,CAAP;AACD;AAED;;;;;AAvI0B;AAAA;AAAA,+CA2IL;AACnB,gBAAMD,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAIA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAU+B,GAAV,CAAwB,KAAKzB,UAAL,GAAkB,8BAA1C,EAA0ES,OAA1E,CAAP;AACD;AAED;;;;;;AApJ0B;AAAA;AAAA,yCAyJXkB,IAzJW,EAyJG;AAC3B,gBAAMnB,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAIA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAU+B,GAAV,CAAwB,KAAKzB,UAAL,GAAkB,6BAAlB,GAAkD2B,IAA1E,EAAgFlB,OAAhF,CAAP;AACD;AAED;;;;;;AAlK0B;AAAA;AAAA,iDAuKHmB,WAvKG,EAuKU;AAClC,gBAAMpB,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAIA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,gBAAMqB,QAAQ,GAAG;AACfC,0BAAY,EAAEF;AADC,aAAjB;AAGA,mBAAO,KAAKlC,IAAL,CAAUgB,IAAV,CAAyB,KAAKV,UAAL,GAAkB,8BAA3C,EAA2E6B,QAA3E,EAAqFpB,OAArF,CAAP;AACD;AAED;;;;;AAnL0B;AAAA;AAAA,uCAuLb;AACX,gBAAMD,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAKA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAU+B,GAAV,CAAwB,KAAKzB,UAAL,GAAkB,kBAA1C,EAA8DS,OAA9D,CAAP;AACD;AAED;;;;;;AAjM0B;AAAA;AAAA,yCAsMXsB,SAtMW,EAsMQ;AAAA;;AAChC,gBAAMvB,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAKA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,iBAAKd,IAAL,CAAUsC,GAAV,CAAwB,KAAKhC,UAAL,GAAkB,2BAAlB,GAAgD+B,SAAxE,EAAmF,IAAnF,EAAyFtB,OAAzF,EAAkGE,SAAlG,CAA4G,UAAAC,IAAI,EAAI;AAClH,oBAAI,CAAChB,KAAL,CAAWA,KAAX,CAAiBgB,IAAI,CAACW,OAAtB;;AACA,oBAAI,CAACxB,MAAL,CAAYmB,IAAZ;AACD,aAHD,EAGG,UAAAE,KAAK,EAAI;AACV,oBAAI,CAACxB,KAAL,CAAWwB,KAAX,CAAiB,2CAAjB,EAA8DA,KAAK,CAACA,KAApE;AACD,aALD;AAMD;AAED;;;;;;AArN0B;AAAA;AAAA,yCA0NXa,WA1NW,EA0NU;AAAA;;AAClC,gBAAMzB,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAKA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,iBAAKd,IAAL,CAAUsC,GAAV,CAAwB,KAAKhC,UAAL,GAAkB,2BAAlB,GAAgDiC,WAAxE,EAAqF,IAArF,EAA2FxB,OAA3F,EAAoGE,SAApG,CAA8G,UAAAC,IAAI,EAAI;AACpH,oBAAI,CAAChB,KAAL,CAAWA,KAAX,CAAiBgB,IAAI,CAACW,OAAtB;;AACA,oBAAI,CAACxB,MAAL,CAAYmB,IAAZ;AACD,aAHD,EAGG,UAAAE,KAAK,EAAI;AACV,oBAAI,CAACxB,KAAL,CAAWwB,KAAX,CAAiB,+CAAjB,EAAkEA,KAAK,CAACA,KAAxE;AACD,aALD;AAMD;AAED;;;;;AAzO0B;AAAA;AAAA,0CA6OV;AACd,gBAAMZ,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAKA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,mBAAO,KAAKd,IAAL,CAAUsC,GAAV,CAAwB,KAAKhC,UAAL,GAAkB,yBAA1C,EAAqE,IAArE,EAA2ES,OAA3E,CAAP;AACD;AAED;;;;;;AAvP0B;AAAA;AAAA,yCA4PXiB,WA5PW,EA4PEQ,OA5PF,EA4PmB;AAAA;;AAC3C,gBAAM1B,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC9B,8BAAgB,kBADc;AAE9Ba,2BAAa,EAAE,YAAY,KAAK1B,IAAL,CAAU2B;AAFP,aAAhB,CAAhB;AAKA,gBAAMb,OAAO,GAAG;AAAED,qBAAO,EAAPA;AAAF,aAAhB;AACA,iBAAKd,IAAL,CAAUsC,GAAV,CAAwB,KAAKhC,UAAL,GAAkB,sBAA1C,EAAkE0B,WAAlE,EAA+EjB,OAA/E,EAAwFE,SAAxF,CAAkG,YAAM;AACtG,oBAAI,CAACf,KAAL,CAAWA,KAAX,CAAiB,6CAAjB;;AACA,oBAAI,CAACE,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,MAAI,CAACb,SAAL,GAAiB,WAAjB,GAA+B+B,OAAhC,CAArB;;AACA,oBAAI,CAACnC,MAAL,CAAYmB,IAAZ;AACD,aAJD,EAIG,UAAAE,KAAK,EAAI;AACV,oBAAI,CAACxB,KAAL,CAAWwB,KAAX,CAAiB,6CAAjB,EAAgEA,KAAK,CAACA,KAAtE;AACD,aAND;AAOD;AA1QyB;;AAAA;AAAA,S;;;;gBAbnB;;gBACA;;gBACA;;gBACA;;gBAEA;;;;;;gBAYN;;;AAJU3B,qBAAe,6DAH3B,iEAAW;AACV0C,kBAAU,EAAE;AADF,OAAX,CAG2B,GAAf1C,eAAe,CAAf","file":"default~log-in-admin-page-admin-students-leaders-admin-students-leaders-module~log-in-log-in-module~~d334e0ad-es5.js","sourcesContent":["import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { AlertService } from './alert.service';\nimport { ConfigService } from './config.service';\nimport { Response } from 'src/models/Response.model';\nimport { Router } from '@angular/router';\n\n/**\n * This service handles all request to the backend having to do with the students\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentsService {\n  /**\n   * The update event is emitted after every major successful request\n   */\n  @Output() update = new EventEmitter();\n\n  constructor(private http: HttpClient,\n              private auth: AuthenticationService,\n              private alert: AlertService,\n              private config: ConfigService,\n              private router: Router) {}\n\n  /**\n   * The url to the backend\n   */\n  backendUrl = this.config.backend_config.url;\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  /**\n   * Creates a new student account\n   * @param signUpData Contains the credentials for the account creation\n   * @param form Contains the form to be resetted after the creation\n   */\n  signUpStudent(signUpData, form) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'students/register', signUpData, options).subscribe(data => {\n      if (data.token) {\n        this.auth.set_jwt(data.token);\n        this.auth.setLoggedIn(true);\n        this.router.navigate([this.eventName + '/Anmeldung']);\n      }\n      this.alert.alert('Dein Account wurde erfolgreich erstellt!');\n      this.sendAuthentificationEmail();\n      this.update.emit();\n      form.reset();\n    }, error => {\n      this.alert.error('Erstellung des Accounts fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Sends the authentification email to the student associated with the provided token\n   */\n  sendAuthentificationEmail() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    this.http.post<Response>(this.backendUrl + 'students/email/resend', null, options).subscribe(data => {\n      this.alert.alert(data.message);\n    }, error => {\n      this.alert.error('Versandt der Verifizierungs E-Mail fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Sends the authentification email to the student associated with the provided token (same as before)\n   * @returns RequestObservable\n   */\n  sendAuthentificationEmailSubscribe() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'students/email/resend', null, options);\n  }\n\n  /**\n   * Logs in as student with the given credentials\n   * @param loginData Contains the credentials to be used (email and password)\n   * @returns RequestObservable\n   */\n  logInStudent(loginData) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'students/login', loginData, options);\n  }\n\n  /**\n   * Logs out the student associated with the provided token\n   */\n  logOutStudent() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'students/logout', null, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.auth.setLoggedIn(false);\n      this.router.navigate([this.eventName + '/Anmeldung']);\n    }, error => {\n      this.alert.error('Logout fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Gets the student associated with the provided token\n   * @returns RequestObservable\n   */\n  getSelfStudent() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'students/self', options);\n  }\n\n  /**\n   * Gets the id of an given student\n   * @param studentData Contains the student\n   * @returns RequestObservable\n   */\n  getStudentID(studentData) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.post<Response>(this.backendUrl + 'students/id', studentData, options);\n  }\n\n  /**\n   * Gets all names of all students\n   * @returns RequestObservable\n   */\n  getAllStudentNames() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'admins/little_index_students', options);\n  }\n\n  /**\n   * Gets all students of the given page\n   * @param page Contains the number of the page\n   * @returns RequestObservable\n   */\n  getAllStudents(page: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'admins/index_students?page=' + page, options);\n  }\n\n  /**\n   * Gets all students that are relevant for the search\n   * @param searchValue Contains a string value of the search\n   * @returns RequestObservable\n   */\n  getAllSearchedStudents(searchValue) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n    const options = { headers };\n    const sendData = {\n      search_value: searchValue\n    };\n    return this.http.post<Response>(this.backendUrl + 'admins/search_index_students', sendData, options);\n  }\n\n  /**\n   * Gets all friends of the student associated with the provided token\n   * @returns RequestObservable\n   */\n  getFriends() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    return this.http.get<Response>(this.backendUrl + 'students/friends', options);\n  }\n\n  /**\n   * Makes the student with the given id a assistant leader in the project of the student associated\n   *              with the provided token\n   * @param studentID Contains the id of the student to be promoted\n   */\n  promoteStudent(studentID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    this.http.put<Response>(this.backendUrl + 'students/promote_student/' + studentID, null, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Ernennung des Assistenten fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Suspends the assistent leader with the given id as assistant leader in the project of the student\n   *              associated with the provided token\n   * @param assistentID Contains the id of the assistent leader to be suspended\n   */\n  suspendStudent(assistentID: number) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    this.http.put<Response>(this.backendUrl + 'students/suspend_student/' + assistentID, null, options).subscribe(data => {\n      this.alert.alert(data.message);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Suspendierung des Assistenten fehlgeschlagen!', error.error);\n    });\n  }\n\n  /**\n   * Removes the assistant leader role of the student associated with the provided token\n   * @returns RequestObservable\n   */\n  quitAssistant() {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    return this.http.put<Response>(this.backendUrl + 'students/quit_assistant', null, options);\n  }\n\n  /**\n   * Updates the student associated with the provided token\n   * @param studentData Contains the updated student\n   * @param backUrl Contains the url that the user should be navigated to after a successful update\n   */\n  putSelfStudent(studentData, backUrl: string) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + this.auth.jwt,\n    });\n\n    const options = { headers };\n    this.http.put<Response>(this.backendUrl + 'students/self_update', studentData, options).subscribe(() => {\n      this.alert.alert('Der Account wurde erfolgreich aktualisiert!');\n      this.router.navigate([this.eventName + '/Schüler/' + backUrl]);\n      this.update.emit();\n    }, error => {\n      this.alert.error('Aktualisierung des Accounts fehlgeschlagen!', error.error);\n    });\n  }\n\n}\n"]}
{"version":3,"sources":["webpack:///src/app/log-in/admin-generation/admin-generation.module.ts","webpack:///src/app/log-in/admin-generation/admin-generation.page.scss","webpack:///src/app/log-in/admin-generation/admin-generation.page.html","webpack:///src/app/log-in/admin-generation/admin-generation.page.ts"],"names":["routes","path","component","AdminGenerationPageModule","imports","forChild","declarations","AdminGenerationPage","alertCtrl","adminsService","config","subscriptions","signUpData","user_name","email","password","password_confirmation","explanation","get_content","eventName","app_config","event_name","forEach","sub","unsubscribe","form","signUpAdmin","create","header","message","buttons","text","role","then","alertEl","present","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAgBaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DATrC,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsBL,MAAtB,CAJO,CADD;AAORM,oBAAY,EAAE,CAAC,0EAAD;AAPN,OAAT,CASqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFI,mBAAmB;AAiB9B,qCAAoBC,SAApB,EACoBC,aADpB,EAEoBC,MAFpB,EAE2C;AAAA;;AAFvB,eAAAF,SAAA,GAAAA,SAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AAlBZ,eAAAC,aAAA,GAAgC,EAAhC;AAER,eAAAC,UAAA,GAAa;AACXC,qBAAS,EAAE,EADA;AAEXC,iBAAK,EAAE,EAFI;AAGXC,oBAAQ,EAAE,EAHC;AAIXC,iCAAqB,EAAE;AAJZ,WAAb;AAOA,eAAAC,WAAA,GAAc,KAAKP,MAAL,CAAYQ,WAAZ,CAAwB,kBAAxB,CAAd;AAEA;;;;AAGA,eAAAC,SAAA,GAAY,KAAKT,MAAL,CAAYU,UAAZ,CAAuBC,UAAnC;AAI8C;;AAnBhB;AAAA;AAAA,qCAqBnB,CACV;AAED;;;;AAxB8B;AAAA;AAAA,wCA2BhB;AACZ,iBAAKV,aAAL,CAAmBW,OAAnB,CAA2B,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,WAAJ,EAAJ;AAAA,aAA9B;AACD;AA7B6B;AAAA;AAAA,wCA+BhBC,IA/BgB,EA+BV;AAClB,gBAAI,KAAKb,UAAL,CAAgBG,QAAhB,KAA6B,KAAKH,UAAL,CAAgBI,qBAAjD,EAAwE;AACtE,mBAAKP,aAAL,CAAmBiB,WAAnB,CAA+B,KAAKd,UAApC,EAAgDa,IAAhD;AACD,aAFD,MAEO;AACL,mBAAKjB,SAAL,CAAemB,MAAf,CAAsB;AACpBC,sBAAM,EAAE,QADY;AAEpBC,uBAAO,EAAE,oEAFW;AAGpBC,uBAAO,EAAE,CAAC;AACRC,sBAAI,EAAE,IADE;AAERC,sBAAI,EAAE;AAFE,iBAAD;AAHW,eAAtB,EAOKC,IAPL,CAOU,UAAAC,OAAO,EAAI;AACjBA,uBAAO,CAACC,OAAR;AACD,eATH;AAUD;AACF;AA9C6B;;AAAA;AAAA,S;;;;gBAVvB;;gBAEA;;gBADA;;;;AASI5B,yBAAmB,6DAL/B,gEAAU;AACT6B,gBAAQ,EAAE,sBADD;AAETC,gBAAQ,EAAR,8EAFS;;AAAA,OAAV,CAK+B,GAAnB9B,mBAAmB,CAAnB","file":"log-in-admin-generation-admin-generation-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AdminGenerationPage } from './admin-generation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminGenerationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AdminGenerationPage]\n})\nexport class AdminGenerationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZG1pbi1nZW5lcmF0aW9uLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"menu\\\">\\n    <ion-button color=\\\"buttons\\\" slot=\\\"start\\\">\\n      <ion-back-button icon=\\\"arrow-back\\\" defaultHref=\\\"{{ eventName }}/Anmeldung\\\"></ion-back-button>\\n    </ion-button>\\n    <ion-title>Als Administrator registrieren</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"background\\\">\\n  <form #signUpAdminForm=\\\"ngForm\\\" name=\\\"LeaderForm\\\" (ngSubmit)=\\\"signUpAsAdmin(signUpAdminForm)\\\" class=\\\"content\\\">\\n    <ion-card color=\\\"background\\\">\\n      <ion-card-header color=\\\"background\\\">\\n        <ion-card-title text-wrap>Admin-Account erstellen</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content color=\\\"background\\\">\\n        <ion-label color=\\\"text\\\">\\n          {{ explanation }}\\n        </ion-label>\\n      </ion-card-content>\\n      <ion-card-content color=\\\"background\\\">\\n        <ion-list>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input name=\\\"user_name\\\" [(ngModel)]=\\\"signUpData.user_name\\\" required minlength=\\\"5\\\" maxlength=\\\"50\\\" type=\\\"text\\\" placeholder=\\\"Benutzername\\\" color=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input name=\\\"email\\\" [(ngModel)]=\\\"signUpData.email\\\" required maxlength=\\\"50\\\" type=\\\"email\\\" placeholder=\\\"E-Mail\\\" color=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input name=\\\"password\\\" [(ngModel)]=\\\"signUpData.password\\\" required minlength=\\\"8\\\" type=\\\"password\\\" placeholder=\\\"Passwort\\\" color=\\\"text\\\"></ion-input>\\n          </ion-item>\\n          <ion-item color=\\\"items\\\">\\n            <ion-input name=\\\"password_confirmation\\\" [(ngModel)]=\\\"signUpData.password_confirmation\\\" required minlength=\\\"8\\\" type=\\\"password\\\" placeholder=\\\"Passwort bestätigen\\\" color=\\\"text\\\"></ion-input>\\n          </ion-item>\\n        </ion-list>\\n        <div class=\\\"ion-padding\\\">\\n          <ion-button name=\\\"submit\\\" type=\\\"submit\\\" [disabled]=\\\"signUpAdminForm.invalid\\\"  class=\\\"ion-no-margin\\\" expand=\\\"block\\\"color=\\\"buttons\\\">Registrieren</ion-button>\\n        </div>\\n      </ion-card-content>\\n    </ion-card>\\n  </form>\\n</ion-content>\\n\";","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { AdminsService } from 'src/app/services/admins.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-admin-generation',\n  templateUrl: './admin-generation.page.html',\n  styleUrls: ['./admin-generation.page.scss'],\n})\nexport class AdminGenerationPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  signUpData = {\n    user_name: '',\n    email: '',\n    password: '',\n    password_confirmation: ''\n  };\n\n  explanation = this.config.get_content('admin-generation');\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private alertCtrl: AlertController,\n              private adminsService: AdminsService,\n              private config: ConfigService) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  signUpAsAdmin(form) {\n    if (this.signUpData.password === this.signUpData.password_confirmation) {\n      this.adminsService.signUpAdmin(this.signUpData, form);\n    } else {\n      this.alertCtrl.create({\n        header: 'Fehler',\n        message: 'Das bestätigte Passwort entspricht nicht dem anfangs eingegebenen!',\n        buttons: [{\n          text: 'Ok',\n          role: 'cancel',\n          }]\n        }).then(alertEl => {\n          alertEl.present();\n        });\n    }\n  }\n\n}\n"]}
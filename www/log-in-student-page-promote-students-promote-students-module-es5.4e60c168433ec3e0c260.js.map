{"version":3,"sources":["webpack:///src/app/log-in/student-page/promote-students/promote-students.page.html","webpack:///src/app/log-in/student-page/promote-students/promote-students.module.ts","webpack:///src/app/log-in/student-page/promote-students/promote-students.page.ts"],"names":["PromoteStudentsPage","PromoteStudentsPageModule","routes","path","component","activatedRoute","router","projectsService","studentsService","config","alertCtrl","alert","subscriptions","loadedStudent","id","user_name","email","password","first_name","last_name","grade","letter","exchange_id","exchange_requests","first_friend","second_friend","third_friend","first_wish","second_wish","third_wish","project_id","role","leadedProject","authorized","editable","title","image","descr","leader_name","leader_type","leader_id","cost","first_day_begin","hours","minutes","first_day_end","second_day_begin","second_day_end","min_grade","max_grade","min_participants","max_participants","messages","participants","assistant_student_leaders","declaredAssistant","studentNoAssistantsEditByAssistants","eventName","this","app_config","event_name","text","get_content","get_error","paramMap","subscribe","has","studentUrl","get","navigate","getProject","getStudent","push","update","forEach","sub","unsubscribe","getSelfLeadedProject","data","getSelfStudent","form","getStudentID","promoteStudent","reset","create","header","message","buttons","then","alertEl","present","assistentID","suspendStudent","quitAssistant","emit","error","forChild"],"mappings":"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","file":"x","sourcesContent":["<ion-header>\n  <ion-toolbar color=\"menu\">\n    <ion-button color=\"buttons\" slot=\"start\">\n      <ion-back-button icon=\"arrow-back\" defaultHref=\"{{ eventName }}/SchÃ¼ler/{{ studentUrl }}\"></ion-back-button>\n    </ion-button>\n    <ion-title>Assistenten verwalten</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content color=\"background\">\n  <ion-card color=\"background\" *ngIf=\"loadedStudent.role === 2\" class=\"content\">\n    <ion-card-header>\n      <ion-card-title>Assistenten verwalten</ion-card-title>\n    </ion-card-header>\n    <ion-card-content *ngIf=\"text\">\n      <ion-label color=\"text\">\n        {{ text }}\n      </ion-label>\n    </ion-card-content>\n    <ion-card color=\"background\" *ngIf=\"loadedStudent.project_id != 0 && leadedProject.leader_id == loadedStudent.id\">\n      <form #promoteStudentForm=\"ngForm\" name=\"ParticipantForm\" (ngSubmit)=\"promoteStudent(promoteStudentForm)\">\n        <ion-item color=\"items\">\n          <ion-input required color=\"text\" type=\"text\" placeholder=\"Vorname\" [(ngModel)]=\"declaredAssistant.first_name\" name=\"ExchangeSecondFirstName\"></ion-input>\n        </ion-item>\n        <ion-item color=\"items\">\n          <ion-input required color=\"text\" type=\"text\" placeholder=\"Nachname\" [(ngModel)]=\"declaredAssistant.last_name\" name=\"ExchangeSecondLastName\"></ion-input>\n        </ion-item>\n        <ion-item color=\"items\">\n          <ion-label color=\"text\">Klassenstufe</ion-label>\n          <ion-select required [selectedText]=\"declaredAssistant.grade\" name=\"ParticipantGrade\" [(ngModel)]=\"declaredAssistant.grade\" cancelText=\"Abbrechen\" doneText=\"Ok\">\n            <ion-select-option value=\"5\">5</ion-select-option>\n            <ion-select-option value=\"6\">6</ion-select-option>\n            <ion-select-option value=\"7\">7</ion-select-option>\n            <ion-select-option value=\"8\">8</ion-select-option>\n            <ion-select-option value=\"9\">9</ion-select-option>\n            <ion-select-option value=\"10\">10</ion-select-option>\n            <ion-select-option value=\"11\">11</ion-select-option>\n          </ion-select>\n        </ion-item>\n        <ion-item color=\"items\">\n          <ion-radio-group required color=\"buttons\" name=\"ParticipantClass\" [(ngModel)]=\"declaredAssistant.letter\">\n            <ion-item color=\"items\" lines=\"none\">\n              <ion-label color=\"text\">A </ion-label>\n              <ion-radio color=\"text\" slot=\"start\" value=\"a\"></ion-radio>\n            </ion-item>\n            <ion-item color=\"items\" lines=\"none\">\n              <ion-label color=\"text\">B </ion-label>\n              <ion-radio color=\"text\" slot=\"start\" value=\"b\"></ion-radio>\n            </ion-item>\n            <ion-item color=\"items\" lines=\"none\">\n              <ion-label color=\"text\">C </ion-label>\n              <ion-radio color=\"text\" slot=\"start\" value=\"c\"></ion-radio>\n            </ion-item>\n            <ion-item color=\"items\" lines=\"none\">\n              <ion-label color=\"text\">D </ion-label>\n              <ion-radio color=\"text\" slot=\"start\" value=\"d\"></ion-radio>\n            </ion-item>\n          </ion-radio-group>\n        </ion-item>\n        <div class=\"ion-padding\">\n          <ion-button color=\"buttons\" [disabled]=\"promoteStudentForm.invalid || leadedProject.leader_id != loadedStudent.id\" expand=\"block\" type=\"submit\" class=\"ion-no-margin\">Als Assistent auszeichnen</ion-button>\n        </div>\n      </form>\n    </ion-card>\n    <ion-card color=\"background\" *ngIf=\"leadedProject.leader_id != loadedStudent.id\" class=\"content\">\n      <ion-card-content>\n        <ion-text color=\"danger\">{{ studentNoAssistantsEditByAssistants }}</ion-text>\n      </ion-card-content>\n    </ion-card>\n    <ion-card-content *ngIf=\"loadedStudent.project_id != 0 && leadedProject.leader_id == loadedStudent.id\">\n      <ion-item-group>\n        <ion-item-divider *ngIf=\"leadedProject.assistant_student_leaders.length\" color=\"background\">\n          <ion-label color=\"text\">Assistenten</ion-label>\n        </ion-item-divider>\n        <div *ngIf=\"leadedProject.assistant_student_leaders.length\">\n          <ion-item color=\"items\" lines=\"none\" *ngFor=\"let assistant of leadedProject.assistant_student_leaders\">\n            <ion-card color=\"background\">\n              <ion-card-content>\n                <ion-text color=\"text\"><ion-icon name=\"star-half\"></ion-icon> {{ assistant.first_name }} {{ assistant.last_name }} {{ assistant.grade }}{{ assistant.letter }}</ion-text>\n              </ion-card-content>\n            </ion-card>\n            <ion-buttons *ngIf=\"leadedProject.leader_id == loadedStudent.id\" (click)=\"suspendStudent(assistant.id)\"><ion-icon color=\"danger\" name=\"arrow-down\"></ion-icon></ion-buttons>\n          </ion-item>\n        </div>\n      </ion-item-group>\n    </ion-card-content>\n    <ion-card-content *ngIf=\"leadedProject.leader_id != loadedStudent.id\">\n      <div class=\"ion-padding\">\n        <ion-button color=\"buttons\" expand=\"block\" class=\"ion-no-margin\" (click)=\"quitAssistent()\">Assistent 'kÃ¼ndigen'</ion-button>\n      </div>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PromoteStudentsPage } from './promote-students.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PromoteStudentsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PromoteStudentsPage]\n})\nexport class PromoteStudentsPageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Project } from 'src/models/Project.model';\nimport { Student } from 'src/models/Student.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectsService } from 'src/app/services/projects.service';\nimport { StudentsService } from 'src/app/services/students.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { AlertController } from '@ionic/angular';\nimport { AlertService } from 'src/app/services/alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-promote-students',\n  templateUrl: './promote-students.page.html',\n  styleUrls: ['./promote-students.page.scss'],\n})\nexport class PromoteStudentsPage implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  loadedStudent: Student = {\n    id: 0,\n    user_name: '',\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n    exchange_id: 0,\n    exchange_requests: [],\n    first_friend: 0,\n    second_friend: 0,\n    third_friend: 0,\n    first_wish: 0,\n    second_wish: 0,\n    third_wish: 0,\n    project_id: 0,\n    role: 2\n  };\n\n  leadedProject: Project = {\n    id: 0,\n    authorized: 0,\n    editable: 0,\n    title: '',\n    image: '',\n    descr: '',\n    leader_name: '',\n    leader_type: '',\n    leader_id: 0,\n    cost: 0,\n    first_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    first_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_begin: {\n      hours: 0,\n      minutes: 0,\n    },\n    second_day_end: {\n      hours: 0,\n      minutes: 0,\n    },\n    min_grade: 0,\n    max_grade: 0,\n    min_participants: 0,\n    max_participants: 0,\n    messages: [],\n    participants: [],\n    assistant_student_leaders: []\n  };\n\n  declaredAssistant: any = {\n    id: 0,\n    first_name: '',\n    last_name: '',\n    grade: 0,\n    letter: '',\n  };\n\n  studentUrl: string;\n\n  text: string;\n\n  studentNoAssistantsEditByAssistants = '';\n\n  /**\n   * Conatins the name of the event that the application is used for\n   */\n  eventName = this.config.app_config.event_name;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private projectsService: ProjectsService,\n              private studentsService: StudentsService,\n              private config: ConfigService,\n              private alertCtrl: AlertController,\n              private alert: AlertService ) { }\n\n  ngOnInit() {\n    this.text = this.config.get_content('promote-students');\n\n    this.studentNoAssistantsEditByAssistants = this.config.get_error('student-no_assistants_edit_by_assistants');\n\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if (!paramMap.has('ParticipantName')) {\n        this.router.navigate(['']);\n        return;\n      }\n      this.studentUrl = paramMap.get('ParticipantName');\n    });\n\n    this.getProject();\n    this.getStudent();\n\n    this.subscriptions.push(\n      this.projectsService.update.subscribe(() => {this.getProject(); this.getStudent(); }),\n      this.studentsService.update.subscribe(() => {this.getProject(); this.getStudent(); })\n    );\n  }\n\n  /**\n   * Unsubscribes from all events when the page is unloaded\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  getProject() {\n    this.projectsService.getSelfLeadedProject('students').subscribe(data => {\n      this.leadedProject = data.data;\n    });\n  }\n\n  getStudent() {\n    this.studentsService.getSelfStudent().subscribe(data => {\n      this.loadedStudent = data.data;\n    });\n  }\n\n  promoteStudent(form) {\n    this.studentsService.getStudentID(this.declaredAssistant).subscribe(data => {\n      if (data.id !== 0) {\n        this.studentsService.promoteStudent(data.id);\n        form.reset();\n      } else {\n        this.alertCtrl.create({\n          header: 'Fehler',\n          message: 'Der angegebene SchÃ¼ler konnte nicht gefunden werden!',\n          buttons: [{\n            text: 'Ok',\n            role: 'cancel',\n            }]\n          }).then(alertEl => {\n            alertEl.present();\n          });\n      }\n    });\n  }\n\n  suspendStudent(assistentID) {\n    this.studentsService.suspendStudent(assistentID);\n  }\n\n  quitAssistent() {\n    this.studentsService.quitAssistant().subscribe(data => {\n      this.alert.alert(data.message);\n      this.router.navigate([this.eventName + '/SchÃ¼ler/' + this.studentUrl]);\n      this.studentsService.update.emit();\n    }, error => {\n      this.alert.error('KÃ¼ndigung als Assistent fehlgeschlagen!', error.error);\n    });\n  }\n}\n"]}